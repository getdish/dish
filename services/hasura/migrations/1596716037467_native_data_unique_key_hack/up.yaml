- args:
    cascade: false
    read_only: false
    sql: |-
      DROP TRIGGER review_trigger ON review;
      DROP FUNCTION review_defaults_trigger;

      UPDATE review
        SET native_data_unique_key = user_id::text || restaurant_id::text || tag_id::text
        WHERE user_id != '00000000-0000-0000-0000-000000000001';

      CREATE FUNCTION review_defaults_trigger() RETURNS TRIGGER AS $$
      BEGIN
        IF new.username IS NULL THEN
          new.username := (SELECT username FROM "user" WHERE new.user_id = "user".id);
          IF new.tag_id IS NULL THEN
            new.tag_id := '00000000-0000-0000-0000-000000000000';
          END IF;
          new.native_data_unique_key := new.user_id::text || new.restaurant_id::text || new.tag_id::text;
        END IF;
        new.location := (SELECT location FROM restaurant WHERE new.restaurant_id = restaurant.id);
        RETURN new;
      END
      $$ language plpgsql;

      CREATE TRIGGER review_trigger BEFORE INSERT OR UPDATE ON review FOR EACH ROW EXECUTE PROCEDURE review_defaults_trigger();
  type: run_sql
