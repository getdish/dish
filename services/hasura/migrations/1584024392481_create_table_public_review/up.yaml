- args:
    cascade: false
    read_only: false
    sql: CREATE EXTENSION IF NOT EXISTS pgcrypto;
  type: run_sql
- args:
    cascade: false
    read_only: false
    sql: "CREATE TABLE \"public\".\"review\"(\"id\" uuid NOT NULL DEFAULT gen_random_uuid(),
      \"user_id\" uuid NOT NULL, \"restaurant_id\" uuid NOT NULL, \"rating\" numeric
      NOT NULL, \"text\" text NOT NULL, \"created_at\" timestamptz NOT NULL DEFAULT
      now(), \"updated_at\" timestamptz NOT NULL DEFAULT now(), \"categories\" jsonb
      NOT NULL, PRIMARY KEY (\"id\") , FOREIGN KEY (\"restaurant_id\") REFERENCES
      \"public\".\"restaurant\"(\"id\") ON UPDATE cascade ON DELETE no action, FOREIGN
      KEY (\"user_id\") REFERENCES \"public\".\"user\"(\"id\") ON UPDATE cascade ON
      DELETE no action);\nCREATE OR REPLACE FUNCTION \"public\".\"set_current_timestamp_updated_at\"()\nRETURNS
      TRIGGER AS $$\nDECLARE\n  _new record;\nBEGIN\n  _new := NEW;\n  _new.\"updated_at\"
      = NOW();\n  RETURN _new;\nEND;\n$$ LANGUAGE plpgsql;\nCREATE TRIGGER \"set_public_review_updated_at\"\nBEFORE
      UPDATE ON \"public\".\"review\"\nFOR EACH ROW\nEXECUTE PROCEDURE \"public\".\"set_current_timestamp_updated_at\"();\nCOMMENT
      ON TRIGGER \"set_public_review_updated_at\" ON \"public\".\"review\" \nIS 'trigger
      to set value of column \"updated_at\" to current timestamp on row update';"
  type: run_sql
- args:
    name: review
    schema: public
  type: add_existing_table_or_view
