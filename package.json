{
  "name": "dish-monorepo",
  "private": true,
  "engines": {
    "node": ">=12 <=15"
  },
  "workspaces": {
    "packages": [
      "dish-app",
      "packages/*",
      "services/*",
      "snackui/packages/*"
    ]
  },
  "scripts": {
    "trim-package": "yes | npx json-filter-cli --from=package.json --to=package.json --exclude=scripts",
    "trim-packages": "yarn trim-package && npx ultra -r yes | npx json-filter-cli --confirm --from=package.json --to=package.json --exclude=scripts",
    "bootstrap": "docker-compose build base",
    "start": "docker-compose -f docker-compose-m1.yml up",
    "start:test": "rm -r ~/.dish/postgresdb/test || true; POSTGRES_DB=test docker-compose -f docker-compose-m1.yml up",
    "start:bak": "./dishctl.sh docker_compose_up_for_devs",
    "db:init": "./dishctl.sh db_migrate_local init",
    "db:migrate": "./dishctl.sh db_migrate_local",
    "db:migrate:test": "POSTGRES_DB=test ./dishctl.sh db_migrate_local",
    "db:clear": "./dishctl.sh db_clear_local",
    "app": "yarn workspace @dish/dish-app start",
    "web": "yarn workspace @dish/dish-app web",
    "web:prod": "yarn workspace @dish/dish-app web:prod",
    "web:prod:optimize": "yarn workspace @dish/dish-app web:prod:optimize",
    "web:build": "yarn workspace @dish/dish-app web:build",
    "web:serve": "yarn workspace @dish/dish-app web:serve",
    "etc:colorize": "yarn workspace @dish/dish-app etc:colorize",
    "etc:colorize:staging": "yarn workspace @dish/dish-app etc:colorize:staging",
    "ios": "yarn workspace @dish/dish-app ios",
    "ios:install": "yarn workspace @dish/dish-app ios:install",
    "postinstall": "./bin/postinstall.sh",
    "preinstall": "./bin/preinstall.sh; ",
    "t": "eval $(./dishctl.sh yaml_to_env) && echo $TF_VAR_HASURA_ENDPOINT",
    "docker:build": "eval $(./dishctl.sh yaml_to_env) && docker-compose build",
    "docker:build:file": "eval $(./dishctl.sh yaml_to_env) && docker buildx build --progress=plain --platform linux/amd64",
    "docker:build:base": "yarn docker:build:file .",
    "docker:start:web": "yarn stop:docker:web && yarn docker:start:web:simple & sleep 2 && yarn logs:docker:web",
    "docker:start:web:simple": "docker run --name dish-app -it -d -p 4444:4444 --rm dish/app",
    "docker:logs:web": "docker logs -f dish-app",
    "docker:stop:web": "docker rm -f dish-app || true",
    "validate:tsc": "tsc --noEmit",
    "check:ts": "tsc -b --preserveWatchOutput tsconfig.build.json",
    "check:ts:watch": "yarn check:ts -w",
    "build": "yarn workspaces foreach -pt run build",
    "build:docker": "./dishctl.sh buildkit_build_local",
    "build:extras:watch": "ultra -r --no-pretty --filter @snackui/node watch",
    "build:watch:ts": "ultra -r --no-pretty --concurrency 1000 watch",
    "watch": "npm-run-all --parallel check:ts:watch build:watch:ts build:extras:watch",
    "build:monitor": "ultra --monitor",
    "build:refs": "typescript-monorepo-toolkit inject-refs .",
    "test": "ultra -r --no-pretty --serial test",
    "crawl:refresh-google": "eval $(./dishctl.sh yaml_to_env) && GOOGLE_AWS_PROXY=$TF_VAR_GOOGLE_AWS_PROXY LUMINATI_PROXY_HOST=$TF_VAR_LUMINATI_PROXY_HOST LUMINATI_PROXY_PORT=$TF_VAR_LUMINATI_PROXY_PORT LUMINATI_PROXY_DATACENTRE_USER=$TF_VAR_LUMINATI_PROXY_DATACENTRE_USER LUMINATI_PROXY_DATACENTRE_PASSWORD=$TF_VAR_LUMINATI_PROXY_DATACENTRE_PASSWORD LUMINATI_PROXY_RESIDENTIAL_USER=$TF_VAR_LUMINATI_PROXY_RESIDENTIAL_USER LUMINATI_PROXY_RESIDENTIAL_PASSWORD=$TF_VAR_LUMINATI_PROXY_RESIDENTIAL_PASSWORD HASURA_SECRET=$TF_VAR_HASURA_GRAPHQL_ADMIN_SECRET node services/crawlers/_/google/update_search_endpoint.js",
    "crawl:one": "eval $(./dishctl.sh yaml_to_env) && HASURA_SECRET=$TF_VAR_HASURA_GRAPHQL_ADMIN_SECRET RUN_WITHOUT_WORKER=true DISH_ENV=development DISABLE_LUMINATI=1 node services/crawlers/_/yelp/sandbox.js",
    "crawl:internal": "eval $(./dishctl.sh yaml_to_env) && HASURA_SECRET=$TF_VAR_HASURA_GRAPHQL_ADMIN_SECRET  RUN_WITHOUT_WORKER=true DISH_ENV=development QUERY=\"SELECT id from restaurant $QUERY\" node ./services/crawlers/_/self/sandbox.js",
    "crawl:internal:slug": "QUERY=\"WHERE slug = '$SLUG'\" yarn crawl:internal",
    "graph:generate": "yarn workspace @dish/graph generate",
    "clean": "bin/clean.sh",
    "hasura:migrate": "./dishctl.sh db_migrate_local init",
    "hasura:admin": "(cd services/hasura && hasura console --endpoint http://localhost:8080 --admin-secret=${TF_VAR_HASURA_GRAPHQL_ADMIN_SECRET:-password})",
    "prettier": "prettier --write \"**/*.{ts,tsx}\" || true",
    "prettier:check": "prettier --check \"**/*.{ts,tsx}\"",
    "expo:check-deps": "expo-yarn-workspaces check-workspace-dependencies",
    "snackui:pull": "git subrepo pull snackui",
    "snackui:push": "git subrepo clean snackui && git subrepo push snackui"
  },
  "resolutions": {
    "ts-pnp": "1.2.0",
    "aws-sdk": "2.762.0",
    "typescript": "4.2.2",
    "node-fetch": "2.6.1",
    "webpack": "5.24.2",
    "terser": "5.5.1",
    "lodash": "4.17.20",
    "core-js": "3.9.0",
    "resolve": "1.17.0",
    "jsdom": "^16.4.0",
    "tslib": "2.0.3",
    "react": "17.0.1",
    "react-dom": "17.0.1",
    "react-test-renderer": "17.0.1",
    "react-refresh": "0.9.0",
    "react-native-web": "0.0.0-466063b7e",
    "react-native-svg": "",
    "react-native": "0.63.2",
    "@react-native-community/cli": "4.13.0",
    "@react-native-community/cli-platform-ios": "4.13.0",
    "metro": "0.62.0",
    "metro-babel-register": "0.62.0",
    "metro-react-native-babel-preset": "0.62.0",
    "metro-react-native-babel-transformer": "0.62.0",
    "metro-cache": "0.62.0",
    "metro-config": "0.62.0",
    "metro-core": "0.62.0",
    "@babel/core": "7.12.9",
    "@babel/generator": "7.12.5",
    "@babel/parser": "7.12.7",
    "@babel/traverse": "7.12.9",
    "@babel/types": "7.12.7",
    "@types/react": "16.9.46",
    "@types/react-dom": "16.9.8",
    "@types/react-native": "0.63.45",
    "@types/puppeteer": "3.0.1",
    "esbuild": "0.8.54"
  },
  "dependencies": {
    "@yarnpkg/pnpify": "^2.4.0",
    "react": "^17.0.1",
    "react-dom": "^17.0.1",
    "react-native-web": "0.0.0-466063b7e"
  },
  "devDependencies": {
    "@babel/runtime": "^7.12.5",
    "@types/fs-extra": "^9.0.8",
    "@types/node": "^14.14.12",
    "@types/react-native": "^0.63.45",
    "@unimodules/core": "^6.0.0",
    "ava": "^3.14.0",
    "esbuild": "^0.8.54",
    "esm": "^3.2.25",
    "expo-yarn-workspaces": "*",
    "import-sort-style-module": "^6.0.0",
    "patch-package": "^6.2.2",
    "prettier": "^2.2.1",
    "prettier-plugin-import-sort": "^0.0.6",
    "react-refresh": "*",
    "tsconfig-paths": "^3.9.0",
    "typescript": "4.2.2",
    "typescript-monorepo-toolkit": "^0.2.0",
    "ultra-runner": "^3.10.5"
  },
  "importSort": {
    ".js, .jsx, .ts, .tsx": {
      "style": "module",
      "parser": "typescript"
    }
  }
}
