2020/08/09 19:26:05 [INFO] Terraform version: 0.12.29  
2020/08/09 19:26:05 [INFO] Go runtime version: go1.14.6
2020/08/09 19:26:05 [INFO] CLI args: []string{"/usr/bin/terraform", "apply"}
2020/08/09 19:26:05 [DEBUG] Attempting to open CLI config file: /home/tombh/.terraformrc
2020/08/09 19:26:05 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/08/09 19:26:05 [INFO] CLI command args: []string{"apply"}
2020/08/09 19:26:05 [TRACE] Meta.Backend: built configuration for "s3" backend with hash value 4041278247
2020/08/09 19:26:05 [TRACE] Preserving existing state lineage "2531ddd1-4c60-a4f6-edd7-45331edf296b"
2020/08/09 19:26:05 [TRACE] Preserving existing state lineage "2531ddd1-4c60-a4f6-edd7-45331edf296b"
2020/08/09 19:26:05 [TRACE] Meta.Backend: working directory was previously initialized for "s3" backend
2020/08/09 19:26:05 [TRACE] Meta.Backend: using already-initialized, unchanged "s3" backend configuration
2020/08/09 19:26:05 [INFO] Setting AWS metadata API timeout to 100ms
2020/08/09 19:26:05 [INFO] AWS Auth provider used: "StaticProvider"
2020/08/09 19:26:05 [TRACE] Meta.Backend: instantiated backend of type *s3.Backend
2020/08/09 19:26:05 [DEBUG] checking for provider in "."
2020/08/09 19:26:05 [DEBUG] checking for provider in "/usr/bin"
2020/08/09 19:26:05 [DEBUG] checking for provider in ".terraform/plugins/linux_amd64"
2020/08/09 19:26:05 [DEBUG] found provider "terraform-provider-digitalocean_v1.22.0"
2020/08/09 19:26:05 [DEBUG] found provider "terraform-provider-helm_v1.2.4_x4"
2020/08/09 19:26:05 [DEBUG] found provider "terraform-provider-kubernetes_v1.12.0_x4"
2020/08/09 19:26:05 [DEBUG] found provider "terraform-provider-local_v1.4.0_x4"
2020/08/09 19:26:05 [DEBUG] found provider "terraform-provider-null_v2.1.2_x4"
2020/08/09 19:26:05 [DEBUG] found valid plugin: "local", "1.4.0", "/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-local_v1.4.0_x4"
2020/08/09 19:26:05 [DEBUG] found valid plugin: "null", "2.1.2", "/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-null_v2.1.2_x4"
2020/08/09 19:26:05 [DEBUG] found valid plugin: "digitalocean", "1.22.0", "/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-digitalocean_v1.22.0"
2020/08/09 19:26:05 [DEBUG] found valid plugin: "helm", "1.2.4", "/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-helm_v1.2.4_x4"
2020/08/09 19:26:05 [DEBUG] found valid plugin: "kubernetes", "1.12.0", "/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-kubernetes_v1.12.0_x4"
2020/08/09 19:26:05 [DEBUG] checking for provisioner in "."
2020/08/09 19:26:05 [DEBUG] checking for provisioner in "/usr/bin"
2020/08/09 19:26:05 [DEBUG] checking for provisioner in ".terraform/plugins/linux_amd64"
2020/08/09 19:26:05 [TRACE] Meta.Backend: backend *s3.Backend does not support operations, so wrapping it in a local backend
2020/08/09 19:26:05 [INFO] backend/local: starting Apply operation
2020/08/09 19:26:05 [TRACE] backend/local: requesting state manager for workspace "default"
2020/08/09 19:26:09 [TRACE] backend/local: requesting state lock for workspace "default"
2020/08/09 19:26:09 [TRACE] backend/local: reading remote state for workspace "default"
2020/08/09 19:26:11 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2020/08/09 19:26:11 [TRACE] backend/local: building context for current working directory
2020/08/09 19:26:11 [TRACE] terraform.NewContext: starting
2020/08/09 19:26:11 [TRACE] terraform.NewContext: resolving provider version selections
2020/08/09 19:26:11 [TRACE] terraform.NewContext: loading provider schemas
2020/08/09 19:26:11 [TRACE] LoadSchemas: retrieving schema for provider type "digitalocean"
2020-08-09T19:26:11.490+0300 [INFO]  plugin: configuring client automatic mTLS
2020-08-09T19:26:11.508+0300 [DEBUG] plugin: starting plugin: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-digitalocean_v1.22.0 args=[/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-digitalocean_v1.22.0]
2020-08-09T19:26:11.508+0300 [DEBUG] plugin: plugin started: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-digitalocean_v1.22.0 pid=4110703
2020-08-09T19:26:11.508+0300 [DEBUG] plugin: waiting for RPC address: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-digitalocean_v1.22.0
2020-08-09T19:26:11.515+0300 [INFO]  plugin.terraform-provider-digitalocean_v1.22.0: configuring server automatic mTLS: timestamp=2020-08-09T19:26:11.515+0300
2020-08-09T19:26:11.532+0300 [DEBUG] plugin: using plugin: version=5
2020-08-09T19:26:11.532+0300 [DEBUG] plugin.terraform-provider-digitalocean_v1.22.0: plugin address: network=unix address=/tmp/plugin848514673 timestamp=2020-08-09T19:26:11.532+0300
2020/08/09 19:26:11 [TRACE] GRPCProvider: GetSchema
2020-08-09T19:26:11.568+0300 [TRACE] plugin.stdio: waiting for stdio data
2020-08-09T19:26:11.568+0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unimplemented desc = unknown service plugin.GRPCStdio"
2020/08/09 19:26:11 [TRACE] GRPCProvider: Close
2020-08-09T19:26:11.575+0300 [DEBUG] plugin: plugin process exited: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-digitalocean_v1.22.0 pid=4110703
2020-08-09T19:26:11.575+0300 [DEBUG] plugin: plugin exited
2020/08/09 19:26:11 [TRACE] LoadSchemas: retrieving schema for provider type "helm"
2020-08-09T19:26:11.575+0300 [INFO]  plugin: configuring client automatic mTLS
2020-08-09T19:26:11.592+0300 [DEBUG] plugin: starting plugin: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-helm_v1.2.4_x4 args=[/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-helm_v1.2.4_x4]
2020-08-09T19:26:11.592+0300 [DEBUG] plugin: plugin started: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-helm_v1.2.4_x4 pid=4110716
2020-08-09T19:26:11.592+0300 [DEBUG] plugin: waiting for RPC address: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-helm_v1.2.4_x4
2020-08-09T19:26:11.618+0300 [INFO]  plugin.terraform-provider-helm_v1.2.4_x4: configuring server automatic mTLS: timestamp=2020-08-09T19:26:11.618+0300
2020-08-09T19:26:11.635+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: plugin address: address=/tmp/plugin886415384 network=unix timestamp=2020-08-09T19:26:11.634+0300
2020-08-09T19:26:11.635+0300 [DEBUG] plugin: using plugin: version=5
2020/08/09 19:26:11 [TRACE] GRPCProvider: GetSchema
2020-08-09T19:26:11.669+0300 [TRACE] plugin.stdio: waiting for stdio data
2020-08-09T19:26:11.669+0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unimplemented desc = unknown service plugin.GRPCStdio"
2020/08/09 19:26:11 [TRACE] GRPCProvider: Close
2020-08-09T19:26:11.673+0300 [DEBUG] plugin: plugin process exited: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-helm_v1.2.4_x4 pid=4110716
2020-08-09T19:26:11.673+0300 [DEBUG] plugin: plugin exited
2020/08/09 19:26:11 [TRACE] LoadSchemas: retrieving schema for provider type "kubernetes"
2020-08-09T19:26:11.673+0300 [INFO]  plugin: configuring client automatic mTLS
2020-08-09T19:26:11.690+0300 [DEBUG] plugin: starting plugin: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-kubernetes_v1.12.0_x4 args=[/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-kubernetes_v1.12.0_x4]
2020-08-09T19:26:11.690+0300 [DEBUG] plugin: plugin started: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-kubernetes_v1.12.0_x4 pid=4110733
2020-08-09T19:26:11.690+0300 [DEBUG] plugin: waiting for RPC address: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-kubernetes_v1.12.0_x4
2020-08-09T19:26:11.714+0300 [INFO]  plugin.terraform-provider-kubernetes_v1.12.0_x4: configuring server automatic mTLS: timestamp=2020-08-09T19:26:11.713+0300
2020-08-09T19:26:11.732+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: plugin address: address=/tmp/plugin091037009 network=unix timestamp=2020-08-09T19:26:11.732+0300
2020-08-09T19:26:11.732+0300 [DEBUG] plugin: using plugin: version=5
2020/08/09 19:26:11 [TRACE] GRPCProvider: GetSchema
2020-08-09T19:26:11.769+0300 [TRACE] plugin.stdio: waiting for stdio data
2020-08-09T19:26:11.769+0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unimplemented desc = unknown service plugin.GRPCStdio"
2020/08/09 19:26:11 [TRACE] GRPCProvider: Close
2020-08-09T19:26:11.796+0300 [DEBUG] plugin: plugin process exited: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-kubernetes_v1.12.0_x4 pid=4110733
2020-08-09T19:26:11.796+0300 [DEBUG] plugin: plugin exited
2020/08/09 19:26:11 [TRACE] LoadSchemas: retrieving schema for provider type "local"
2020-08-09T19:26:11.796+0300 [INFO]  plugin: configuring client automatic mTLS
2020-08-09T19:26:11.812+0300 [DEBUG] plugin: starting plugin: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-local_v1.4.0_x4 args=[/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-local_v1.4.0_x4]
2020-08-09T19:26:11.812+0300 [DEBUG] plugin: plugin started: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-local_v1.4.0_x4 pid=4110747
2020-08-09T19:26:11.812+0300 [DEBUG] plugin: waiting for RPC address: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-local_v1.4.0_x4
2020-08-09T19:26:11.818+0300 [INFO]  plugin.terraform-provider-local_v1.4.0_x4: configuring server automatic mTLS: timestamp=2020-08-09T19:26:11.818+0300
2020-08-09T19:26:11.837+0300 [DEBUG] plugin.terraform-provider-local_v1.4.0_x4: plugin address: address=/tmp/plugin448122201 network=unix timestamp=2020-08-09T19:26:11.837+0300
2020-08-09T19:26:11.837+0300 [DEBUG] plugin: using plugin: version=5
2020/08/09 19:26:11 [TRACE] GRPCProvider: GetSchema
2020-08-09T19:26:11.884+0300 [TRACE] plugin.stdio: waiting for stdio data
2020-08-09T19:26:11.884+0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unimplemented desc = unknown service plugin.GRPCStdio"
2020/08/09 19:26:11 [TRACE] GRPCProvider: Close
2020-08-09T19:26:11.887+0300 [DEBUG] plugin: plugin process exited: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-local_v1.4.0_x4 pid=4110747
2020-08-09T19:26:11.887+0300 [DEBUG] plugin: plugin exited
2020/08/09 19:26:11 [TRACE] LoadSchemas: retrieving schema for provider type "null"
2020-08-09T19:26:11.887+0300 [INFO]  plugin: configuring client automatic mTLS
2020-08-09T19:26:11.903+0300 [DEBUG] plugin: starting plugin: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-null_v2.1.2_x4 args=[/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-null_v2.1.2_x4]
2020-08-09T19:26:11.903+0300 [DEBUG] plugin: plugin started: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-null_v2.1.2_x4 pid=4110786
2020-08-09T19:26:11.903+0300 [DEBUG] plugin: waiting for RPC address: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-null_v2.1.2_x4
2020-08-09T19:26:11.908+0300 [INFO]  plugin.terraform-provider-null_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-08-09T19:26:11.908+0300
2020-08-09T19:26:11.926+0300 [DEBUG] plugin.terraform-provider-null_v2.1.2_x4: plugin address: address=/tmp/plugin802124014 network=unix timestamp=2020-08-09T19:26:11.926+0300
2020-08-09T19:26:11.926+0300 [DEBUG] plugin: using plugin: version=5
2020/08/09 19:26:11 [TRACE] GRPCProvider: GetSchema
2020-08-09T19:26:11.962+0300 [TRACE] plugin.stdio: waiting for stdio data
2020-08-09T19:26:11.962+0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unimplemented desc = unknown service plugin.GRPCStdio"
2020/08/09 19:26:11 [TRACE] GRPCProvider: Close
2020-08-09T19:26:11.964+0300 [DEBUG] plugin: plugin process exited: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-null_v2.1.2_x4 pid=4110786
2020-08-09T19:26:11.964+0300 [DEBUG] plugin: plugin exited
2020/08/09 19:26:11 [TRACE] LoadSchemas: retrieving schema for provisioner "local-exec"
2020-08-09T19:26:11.964+0300 [DEBUG] plugin: starting plugin: path=/usr/bin/terraform args=[/usr/bin/terraform, internal-plugin, provisioner, local-exec]
2020-08-09T19:26:11.964+0300 [DEBUG] plugin: plugin started: path=/usr/bin/terraform pid=4110806
2020-08-09T19:26:11.964+0300 [DEBUG] plugin: waiting for RPC address: path=/usr/bin/terraform
2020-08-09T19:26:11.997+0300 [DEBUG] plugin: using plugin: version=5
2020-08-09T19:26:11.998+0300 [TRACE] plugin.stdio: waiting for stdio data
2020-08-09T19:26:11.998+0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-08-09T19:26:12.003+0300 [DEBUG] plugin: plugin process exited: path=/usr/bin/terraform pid=4110806
2020-08-09T19:26:12.003+0300 [DEBUG] plugin: plugin exited
2020/08/09 19:26:12 [TRACE] terraform.NewContext: complete
2020/08/09 19:26:12 [TRACE] backend/local: finished building terraform.Context
2020/08/09 19:26:12 [TRACE] backend/local: requesting interactive input, if necessary
2020/08/09 19:26:12 [TRACE] Context.Input: Prompting for provider arguments
2020/08/09 19:26:12 [TRACE] Context.Input: Provider provider.null implied by resource block at cert-manager.tf:42,1-46
2020/08/09 19:26:12 [TRACE] Context.Input: Provider provider.kubernetes implied by resource block at cert-manager.tf:60,1-56
2020/08/09 19:26:12 [TRACE] Context.Input: Provider provider.helm implied by resource block at postgres-ha.tf:7,1-38
2020/08/09 19:26:12 [TRACE] Context.Input: Provider provider.local implied by data block at rio.tf:18,1-38
2020/08/09 19:26:12 [TRACE] Context.Input: Input for provider.helm: map[string]cty.Value{}
2020/08/09 19:26:12 [TRACE] Context.Input: Input for provider.local: map[string]cty.Value{}
2020/08/09 19:26:12 [TRACE] Context.Input: Input for provider.null: map[string]cty.Value{}
2020/08/09 19:26:12 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2020/08/09 19:26:12 [TRACE] backend/local: running validation operation
2020/08/09 19:26:12 [INFO] terraform: building graph: GraphTypeValidate
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/08/09 19:26:12 [TRACE] ConfigTransformer: Starting for path: 
2020/08/09 19:26:12 [TRACE] ConfigTransformer: Starting for path: cluster
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodeValidatableResource
  data.helm_repository.incubator - *terraform.NodeValidatableResource
  data.helm_repository.jetstack - *terraform.NodeValidatableResource
  data.helm_repository.sentry - *terraform.NodeValidatableResource
  data.helm_repository.stable - *terraform.NodeValidatableResource
  data.helm_repository.timescale - *terraform.NodeValidatableResource
  data.local_file.cert_manager_setup - *terraform.NodeValidatableResource
  data.local_file.rio-app-domains - *terraform.NodeValidatableResource
  data.local_file.rio-custom-domain - *terraform.NodeValidatableResource
  data.local_file.rio-yaml - *terraform.NodeValidatableResource
  helm_release.cert-manager - *terraform.NodeValidatableResource
  helm_release.docker-registry - *terraform.NodeValidatableResource
  helm_release.metrics-server - *terraform.NodeValidatableResource
  helm_release.nginx-ingress - *terraform.NodeValidatableResource
  helm_release.postgres-ha - *terraform.NodeValidatableResource
  helm_release.prometheus-operator - *terraform.NodeValidatableResource
  helm_release.redis - *terraform.NodeValidatableResource
  helm_release.sentry - *terraform.NodeValidatableResource
  helm_release.sentry-k8s-erros - *terraform.NodeValidatableResource
  helm_release.timescaledb - *terraform.NodeValidatableResource
  kubernetes_config_map.buildkitd-config - *terraform.NodeValidatableResource
  kubernetes_deployment.buildkitd - *terraform.NodeValidatableResource
  kubernetes_ingress.docker-registry-ingress - *terraform.NodeValidatableResource
  kubernetes_ingress.grafana-ingress - *terraform.NodeValidatableResource
  kubernetes_ingress.rio-ingress - *terraform.NodeValidatableResource
  kubernetes_ingress.sentry-ingress - *terraform.NodeValidatableResource
  kubernetes_namespace.cert-manager - *terraform.NodeValidatableResource
  kubernetes_namespace.docker - *terraform.NodeValidatableResource
  kubernetes_namespace.metrics-server - *terraform.NodeValidatableResource
  kubernetes_namespace.monitoring - *terraform.NodeValidatableResource
  kubernetes_namespace.nginx-ingress - *terraform.NodeValidatableResource
  kubernetes_namespace.postgres-ha - *terraform.NodeValidatableResource
  kubernetes_namespace.redis - *terraform.NodeValidatableResource
  kubernetes_namespace.rio - *terraform.NodeValidatableResource
  kubernetes_namespace.sentry - *terraform.NodeValidatableResource
  kubernetes_namespace.timescale - *terraform.NodeValidatableResource
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeValidatableResource
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeValidatableResource
  kubernetes_secret.docker-config-json - *terraform.NodeValidatableResource
  kubernetes_secret.docker-registry-auth - *terraform.NodeValidatableResource
  kubernetes_secret.timescale-certificates - *terraform.NodeValidatableResource
  kubernetes_secret.timescale-credentials - *terraform.NodeValidatableResource
  kubernetes_service.buildkitd - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeValidatableResource
  null_resource.cert-manager-setup - *terraform.NodeValidatableResource
  null_resource.create-timescaledb-setup - *terraform.NodeValidatableResource
  null_resource.rio-app-domains - *terraform.NodeValidatableResource
  null_resource.rio-custom-domain - *terraform.NodeValidatableResource
  null_resource.rio-setup - *terraform.NodeValidatableResource
  ------
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodeValidatableResource
  data.helm_repository.incubator - *terraform.NodeValidatableResource
  data.helm_repository.jetstack - *terraform.NodeValidatableResource
  data.helm_repository.sentry - *terraform.NodeValidatableResource
  data.helm_repository.stable - *terraform.NodeValidatableResource
  data.helm_repository.timescale - *terraform.NodeValidatableResource
  data.local_file.cert_manager_setup - *terraform.NodeValidatableResource
  data.local_file.rio-app-domains - *terraform.NodeValidatableResource
  data.local_file.rio-custom-domain - *terraform.NodeValidatableResource
  data.local_file.rio-yaml - *terraform.NodeValidatableResource
  helm_release.cert-manager - *terraform.NodeValidatableResource
  helm_release.docker-registry - *terraform.NodeValidatableResource
  helm_release.metrics-server - *terraform.NodeValidatableResource
  helm_release.nginx-ingress - *terraform.NodeValidatableResource
  helm_release.postgres-ha - *terraform.NodeValidatableResource
  helm_release.prometheus-operator - *terraform.NodeValidatableResource
  helm_release.redis - *terraform.NodeValidatableResource
  helm_release.sentry - *terraform.NodeValidatableResource
  helm_release.sentry-k8s-erros - *terraform.NodeValidatableResource
  helm_release.timescaledb - *terraform.NodeValidatableResource
  kubernetes_config_map.buildkitd-config - *terraform.NodeValidatableResource
  kubernetes_deployment.buildkitd - *terraform.NodeValidatableResource
  kubernetes_ingress.docker-registry-ingress - *terraform.NodeValidatableResource
  kubernetes_ingress.grafana-ingress - *terraform.NodeValidatableResource
  kubernetes_ingress.rio-ingress - *terraform.NodeValidatableResource
  kubernetes_ingress.sentry-ingress - *terraform.NodeValidatableResource
  kubernetes_namespace.cert-manager - *terraform.NodeValidatableResource
  kubernetes_namespace.docker - *terraform.NodeValidatableResource
  kubernetes_namespace.metrics-server - *terraform.NodeValidatableResource
  kubernetes_namespace.monitoring - *terraform.NodeValidatableResource
  kubernetes_namespace.nginx-ingress - *terraform.NodeValidatableResource
  kubernetes_namespace.postgres-ha - *terraform.NodeValidatableResource
  kubernetes_namespace.redis - *terraform.NodeValidatableResource
  kubernetes_namespace.rio - *terraform.NodeValidatableResource
  kubernetes_namespace.sentry - *terraform.NodeValidatableResource
  kubernetes_namespace.timescale - *terraform.NodeValidatableResource
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeValidatableResource
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeValidatableResource
  kubernetes_secret.docker-config-json - *terraform.NodeValidatableResource
  kubernetes_secret.docker-registry-auth - *terraform.NodeValidatableResource
  kubernetes_secret.timescale-certificates - *terraform.NodeValidatableResource
  kubernetes_secret.timescale-credentials - *terraform.NodeValidatableResource
  kubernetes_service.buildkitd - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeValidatableResource
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  null_resource.cert-manager-setup - *terraform.NodeValidatableResource
  null_resource.create-timescaledb-setup - *terraform.NodeValidatableResource
  null_resource.rio-app-domains - *terraform.NodeValidatableResource
  null_resource.rio-custom-domain - *terraform.NodeValidatableResource
  null_resource.rio-setup - *terraform.NodeValidatableResource
  ------
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.StateTransformer
2020/08/09 19:26:12 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.redis" (*terraform.NodeValidatableResource) config from redis.tf:1,1-40
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.metrics-server" (*terraform.NodeValidatableResource) config from metrics-server.tf:7,1-41
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_persistent_volume_claim.image-proxy" (*terraform.NodeValidatableResource) config from rio.tf:147,1-60
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.cert-manager" (*terraform.NodeValidatableResource) config from cert-manager.tf:24,1-39
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.docker-registry" (*terraform.NodeValidatableResource) config from docker-registry.tf:7,1-42
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.buildkitd" (*terraform.NodeValidatableResource) config from buildkitd.tf:100,1-42
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.timescaledb" (*terraform.NodeValidatableResource) config from timescaledb.tf:12,1-38
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "data.helm_repository.timescale" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"timescaledb.tf", Start:hcl.Pos{Line:7, Column:1, Byte:89}, End:hcl.Pos{Line:7, Column:35, Byte:123}}
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.timescale-credentials" (*terraform.NodeValidatableResource) config from timescaledb.tf:23,1-53
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "module.cluster.digitalocean_kubernetes_node_pool.workers" (*terraform.NodeValidatableResource) config from cluster/main.tf:39,1-55
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_config_map.buildkitd-config" (*terraform.NodeValidatableResource) config from buildkitd.tf:90,1-52
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "null_resource.rio-custom-domain" (*terraform.NodeValidatableResource) config from rio.tf:45,1-45
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_ingress.docker-registry-ingress" (*terraform.NodeValidatableResource) config from docker-registry.tf:47,1-56
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.nginx-ingress" (*terraform.NodeValidatableResource) config from nginx-ingress.tf:1,1-48
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.postgres-ha" (*terraform.NodeValidatableResource) config from postgres-ha.tf:7,1-38
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "data.local_file.rio-yaml" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"rio.tf", Start:hcl.Pos{Line:14, Column:1, Byte:188}, End:hcl.Pos{Line:14, Column:29, Byte:216}}
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "data.helm_repository.sentry" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"sentry.tf", Start:hcl.Pos{Line:7, Column:1, Byte:83}, End:hcl.Pos{Line:7, Column:32, Byte:114}}
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.rio" (*terraform.NodeValidatableResource) config from rio.tf:1,1-38
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.sentry" (*terraform.NodeValidatableResource) config from sentry.tf:25,1-33
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "null_resource.rio-setup" (*terraform.NodeValidatableResource) config from rio.tf:26,1-37
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.buildkitd" (*terraform.NodeValidatableResource) config from buildkitd.tf:1,1-45
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.sentry" (*terraform.NodeValidatableResource) config from sentry.tf:1,1-41
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.docker-config-json" (*terraform.NodeValidatableResource) config from rio.tf:135,1-50
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "null_resource.cert-manager-setup" (*terraform.NodeValidatableResource) config from cert-manager.tf:42,1-46
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.timescale-certificates" (*terraform.NodeValidatableResource) config from timescaledb.tf:40,1-54
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "module.cluster.digitalocean_kubernetes_cluster.dish" (*terraform.NodeValidatableResource) config from cluster/main.tf:11,1-50
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.docker" (*terraform.NodeValidatableResource) config from docker-registry.tf:1,1-41
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.cert-manager" (*terraform.NodeValidatableResource) config from cert-manager.tf:18,1-47
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "data.helm_repository.bitnami" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:40, Column:1, Byte:1084}, End:hcl.Pos{Line:40, Column:33, Byte:1116}}
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "module.cluster.digitalocean_kubernetes_node_pool.ci" (*terraform.NodeValidatableResource) config from cluster/main.tf:48,1-50
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "null_resource.create-timescaledb-setup" (*terraform.NodeValidatableResource) config from timescaledb.tf:56,1-52
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.redis" (*terraform.NodeValidatableResource) config from redis.tf:7,1-32
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.timescale" (*terraform.NodeValidatableResource) config from timescaledb.tf:1,1-44
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_ingress.rio-ingress" (*terraform.NodeValidatableResource) config from rio.tf:83,1-44
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.monitoring" (*terraform.NodeValidatableResource) config from prometheus.tf:6,1-45
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.sentry-k8s-erros" (*terraform.NodeValidatableResource) config from sentry.tf:12,1-43
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "data.helm_repository.jetstack" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"cert-manager.tf", Start:hcl.Pos{Line:13, Column:1, Byte:219}, End:hcl.Pos{Line:13, Column:34, Byte:252}}
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.postgres-ha" (*terraform.NodeValidatableResource) config from postgres-ha.tf:1,1-46
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.nginx-ingress" (*terraform.NodeValidatableResource) config from nginx-ingress.tf:9,1-40
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_ingress.grafana-ingress" (*terraform.NodeValidatableResource) config from prometheus.tf:28,1-48
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.cloudflare-dns-api-token" (*terraform.NodeValidatableResource) config from cert-manager.tf:60,1-56
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "data.local_file.cert_manager_setup" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"cert-manager.tf", Start:hcl.Pos{Line:9, Column:1, Byte:122}, End:hcl.Pos{Line:9, Column:39, Byte:160}}
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "data.helm_repository.stable" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:30, Column:1, Byte:836}, End:hcl.Pos{Line:30, Column:32, Byte:867}}
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.metrics-server" (*terraform.NodeValidatableResource) config from metrics-server.tf:1,1-49
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "null_resource.rio-app-domains" (*terraform.NodeValidatableResource) config from rio.tf:65,1-43
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "module.cluster.digitalocean_kubernetes_node_pool.ancillary" (*terraform.NodeValidatableResource) config from cluster/main.tf:30,1-57
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_ingress.sentry-ingress" (*terraform.NodeValidatableResource) config from sentry.tf:93,1-47
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "data.helm_repository.incubator" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:35, Column:1, Byte:952}, End:hcl.Pos{Line:35, Column:35, Byte:986}}
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "data.local_file.rio-custom-domain" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"rio.tf", Start:hcl.Pos{Line:18, Column:1, Byte:266}, End:hcl.Pos{Line:18, Column:38, Byte:303}}
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.docker-registry-auth" (*terraform.NodeValidatableResource) config from docker-registry.tf:34,1-52
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "data.local_file.rio-app-domains" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"rio.tf", Start:hcl.Pos{Line:22, Column:1, Byte:367}, End:hcl.Pos{Line:22, Column:36, Byte:402}}
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.prometheus-operator" (*terraform.NodeValidatableResource) config from prometheus.tf:12,1-46
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodeValidatableResource
  data.helm_repository.incubator - *terraform.NodeValidatableResource
  data.helm_repository.jetstack - *terraform.NodeValidatableResource
  data.helm_repository.sentry - *terraform.NodeValidatableResource
  data.helm_repository.stable - *terraform.NodeValidatableResource
  data.helm_repository.timescale - *terraform.NodeValidatableResource
  data.local_file.cert_manager_setup - *terraform.NodeValidatableResource
  data.local_file.rio-app-domains - *terraform.NodeValidatableResource
  data.local_file.rio-custom-domain - *terraform.NodeValidatableResource
  data.local_file.rio-yaml - *terraform.NodeValidatableResource
  helm_release.cert-manager - *terraform.NodeValidatableResource
  helm_release.docker-registry - *terraform.NodeValidatableResource
  helm_release.metrics-server - *terraform.NodeValidatableResource
  helm_release.nginx-ingress - *terraform.NodeValidatableResource
  helm_release.postgres-ha - *terraform.NodeValidatableResource
  helm_release.prometheus-operator - *terraform.NodeValidatableResource
  helm_release.redis - *terraform.NodeValidatableResource
  helm_release.sentry - *terraform.NodeValidatableResource
  helm_release.sentry-k8s-erros - *terraform.NodeValidatableResource
  helm_release.timescaledb - *terraform.NodeValidatableResource
  kubernetes_config_map.buildkitd-config - *terraform.NodeValidatableResource
  kubernetes_deployment.buildkitd - *terraform.NodeValidatableResource
  kubernetes_ingress.docker-registry-ingress - *terraform.NodeValidatableResource
  kubernetes_ingress.grafana-ingress - *terraform.NodeValidatableResource
  kubernetes_ingress.rio-ingress - *terraform.NodeValidatableResource
  kubernetes_ingress.sentry-ingress - *terraform.NodeValidatableResource
  kubernetes_namespace.cert-manager - *terraform.NodeValidatableResource
  kubernetes_namespace.docker - *terraform.NodeValidatableResource
  kubernetes_namespace.metrics-server - *terraform.NodeValidatableResource
  kubernetes_namespace.monitoring - *terraform.NodeValidatableResource
  kubernetes_namespace.nginx-ingress - *terraform.NodeValidatableResource
  kubernetes_namespace.postgres-ha - *terraform.NodeValidatableResource
  kubernetes_namespace.redis - *terraform.NodeValidatableResource
  kubernetes_namespace.rio - *terraform.NodeValidatableResource
  kubernetes_namespace.sentry - *terraform.NodeValidatableResource
  kubernetes_namespace.timescale - *terraform.NodeValidatableResource
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeValidatableResource
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeValidatableResource
  kubernetes_secret.docker-config-json - *terraform.NodeValidatableResource
  kubernetes_secret.docker-registry-auth - *terraform.NodeValidatableResource
  kubernetes_secret.timescale-certificates - *terraform.NodeValidatableResource
  kubernetes_secret.timescale-credentials - *terraform.NodeValidatableResource
  kubernetes_service.buildkitd - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeValidatableResource
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  null_resource.cert-manager-setup - *terraform.NodeValidatableResource
  null_resource.create-timescaledb-setup - *terraform.NodeValidatableResource
  null_resource.rio-app-domains - *terraform.NodeValidatableResource
  null_resource.rio-custom-domain - *terraform.NodeValidatableResource
  null_resource.rio-setup - *terraform.NodeValidatableResource
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/08/09 19:26:12 [TRACE] MissingProviderTransformer: added implicit provisioner local-exec, first implied by null_resource.rio-setup
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodeValidatableResource
  data.helm_repository.incubator - *terraform.NodeValidatableResource
  data.helm_repository.jetstack - *terraform.NodeValidatableResource
  data.helm_repository.sentry - *terraform.NodeValidatableResource
  data.helm_repository.stable - *terraform.NodeValidatableResource
  data.helm_repository.timescale - *terraform.NodeValidatableResource
  data.local_file.cert_manager_setup - *terraform.NodeValidatableResource
  data.local_file.rio-app-domains - *terraform.NodeValidatableResource
  data.local_file.rio-custom-domain - *terraform.NodeValidatableResource
  data.local_file.rio-yaml - *terraform.NodeValidatableResource
  helm_release.cert-manager - *terraform.NodeValidatableResource
  helm_release.docker-registry - *terraform.NodeValidatableResource
  helm_release.metrics-server - *terraform.NodeValidatableResource
  helm_release.nginx-ingress - *terraform.NodeValidatableResource
  helm_release.postgres-ha - *terraform.NodeValidatableResource
  helm_release.prometheus-operator - *terraform.NodeValidatableResource
  helm_release.redis - *terraform.NodeValidatableResource
  helm_release.sentry - *terraform.NodeValidatableResource
  helm_release.sentry-k8s-erros - *terraform.NodeValidatableResource
  helm_release.timescaledb - *terraform.NodeValidatableResource
  kubernetes_config_map.buildkitd-config - *terraform.NodeValidatableResource
  kubernetes_deployment.buildkitd - *terraform.NodeValidatableResource
  kubernetes_ingress.docker-registry-ingress - *terraform.NodeValidatableResource
  kubernetes_ingress.grafana-ingress - *terraform.NodeValidatableResource
  kubernetes_ingress.rio-ingress - *terraform.NodeValidatableResource
  kubernetes_ingress.sentry-ingress - *terraform.NodeValidatableResource
  kubernetes_namespace.cert-manager - *terraform.NodeValidatableResource
  kubernetes_namespace.docker - *terraform.NodeValidatableResource
  kubernetes_namespace.metrics-server - *terraform.NodeValidatableResource
  kubernetes_namespace.monitoring - *terraform.NodeValidatableResource
  kubernetes_namespace.nginx-ingress - *terraform.NodeValidatableResource
  kubernetes_namespace.postgres-ha - *terraform.NodeValidatableResource
  kubernetes_namespace.redis - *terraform.NodeValidatableResource
  kubernetes_namespace.rio - *terraform.NodeValidatableResource
  kubernetes_namespace.sentry - *terraform.NodeValidatableResource
  kubernetes_namespace.timescale - *terraform.NodeValidatableResource
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeValidatableResource
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeValidatableResource
  kubernetes_secret.docker-config-json - *terraform.NodeValidatableResource
  kubernetes_secret.docker-registry-auth - *terraform.NodeValidatableResource
  kubernetes_secret.timescale-certificates - *terraform.NodeValidatableResource
  kubernetes_secret.timescale-credentials - *terraform.NodeValidatableResource
  kubernetes_service.buildkitd - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeValidatableResource
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  null_resource.cert-manager-setup - *terraform.NodeValidatableResource
  null_resource.create-timescaledb-setup - *terraform.NodeValidatableResource
  null_resource.rio-app-domains - *terraform.NodeValidatableResource
  null_resource.rio-custom-domain - *terraform.NodeValidatableResource
  null_resource.rio-setup - *terraform.NodeValidatableResource
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/08/09 19:26:12 [TRACE] ProvisionerTransformer: null_resource.rio-custom-domain is provisioned by local-exec ("provisioner.local-exec")
2020/08/09 19:26:12 [TRACE] ProvisionerTransformer: null_resource.rio-setup is provisioned by local-exec ("provisioner.local-exec")
2020/08/09 19:26:12 [TRACE] ProvisionerTransformer: null_resource.cert-manager-setup is provisioned by local-exec ("provisioner.local-exec")
2020/08/09 19:26:12 [TRACE] ProvisionerTransformer: null_resource.create-timescaledb-setup is provisioned by local-exec ("provisioner.local-exec")
2020/08/09 19:26:12 [TRACE] ProvisionerTransformer: null_resource.rio-app-domains is provisioned by local-exec ("provisioner.local-exec")
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.ProvisionerTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodeValidatableResource
  data.helm_repository.incubator - *terraform.NodeValidatableResource
  data.helm_repository.jetstack - *terraform.NodeValidatableResource
  data.helm_repository.sentry - *terraform.NodeValidatableResource
  data.helm_repository.stable - *terraform.NodeValidatableResource
  data.helm_repository.timescale - *terraform.NodeValidatableResource
  data.local_file.cert_manager_setup - *terraform.NodeValidatableResource
  data.local_file.rio-app-domains - *terraform.NodeValidatableResource
  data.local_file.rio-custom-domain - *terraform.NodeValidatableResource
  data.local_file.rio-yaml - *terraform.NodeValidatableResource
  helm_release.cert-manager - *terraform.NodeValidatableResource
  helm_release.docker-registry - *terraform.NodeValidatableResource
  helm_release.metrics-server - *terraform.NodeValidatableResource
  helm_release.nginx-ingress - *terraform.NodeValidatableResource
  helm_release.postgres-ha - *terraform.NodeValidatableResource
  helm_release.prometheus-operator - *terraform.NodeValidatableResource
  helm_release.redis - *terraform.NodeValidatableResource
  helm_release.sentry - *terraform.NodeValidatableResource
  helm_release.sentry-k8s-erros - *terraform.NodeValidatableResource
  helm_release.timescaledb - *terraform.NodeValidatableResource
  kubernetes_config_map.buildkitd-config - *terraform.NodeValidatableResource
  kubernetes_deployment.buildkitd - *terraform.NodeValidatableResource
  kubernetes_ingress.docker-registry-ingress - *terraform.NodeValidatableResource
  kubernetes_ingress.grafana-ingress - *terraform.NodeValidatableResource
  kubernetes_ingress.rio-ingress - *terraform.NodeValidatableResource
  kubernetes_ingress.sentry-ingress - *terraform.NodeValidatableResource
  kubernetes_namespace.cert-manager - *terraform.NodeValidatableResource
  kubernetes_namespace.docker - *terraform.NodeValidatableResource
  kubernetes_namespace.metrics-server - *terraform.NodeValidatableResource
  kubernetes_namespace.monitoring - *terraform.NodeValidatableResource
  kubernetes_namespace.nginx-ingress - *terraform.NodeValidatableResource
  kubernetes_namespace.postgres-ha - *terraform.NodeValidatableResource
  kubernetes_namespace.redis - *terraform.NodeValidatableResource
  kubernetes_namespace.rio - *terraform.NodeValidatableResource
  kubernetes_namespace.sentry - *terraform.NodeValidatableResource
  kubernetes_namespace.timescale - *terraform.NodeValidatableResource
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeValidatableResource
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeValidatableResource
  kubernetes_secret.docker-config-json - *terraform.NodeValidatableResource
  kubernetes_secret.docker-registry-auth - *terraform.NodeValidatableResource
  kubernetes_secret.timescale-certificates - *terraform.NodeValidatableResource
  kubernetes_secret.timescale-credentials - *terraform.NodeValidatableResource
  kubernetes_service.buildkitd - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeValidatableResource
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  null_resource.cert-manager-setup - *terraform.NodeValidatableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup - *terraform.NodeValidatableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains - *terraform.NodeValidatableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain - *terraform.NodeValidatableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup - *terraform.NodeValidatableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodeValidatableResource
  data.helm_repository.incubator - *terraform.NodeValidatableResource
  data.helm_repository.jetstack - *terraform.NodeValidatableResource
  data.helm_repository.sentry - *terraform.NodeValidatableResource
  data.helm_repository.stable - *terraform.NodeValidatableResource
  data.helm_repository.timescale - *terraform.NodeValidatableResource
  data.local_file.cert_manager_setup - *terraform.NodeValidatableResource
  data.local_file.rio-app-domains - *terraform.NodeValidatableResource
  data.local_file.rio-custom-domain - *terraform.NodeValidatableResource
  data.local_file.rio-yaml - *terraform.NodeValidatableResource
  helm_release.cert-manager - *terraform.NodeValidatableResource
  helm_release.docker-registry - *terraform.NodeValidatableResource
  helm_release.metrics-server - *terraform.NodeValidatableResource
  helm_release.nginx-ingress - *terraform.NodeValidatableResource
  helm_release.postgres-ha - *terraform.NodeValidatableResource
  helm_release.prometheus-operator - *terraform.NodeValidatableResource
  helm_release.redis - *terraform.NodeValidatableResource
  helm_release.sentry - *terraform.NodeValidatableResource
  helm_release.sentry-k8s-erros - *terraform.NodeValidatableResource
  helm_release.timescaledb - *terraform.NodeValidatableResource
  kubernetes_config_map.buildkitd-config - *terraform.NodeValidatableResource
  kubernetes_deployment.buildkitd - *terraform.NodeValidatableResource
  kubernetes_ingress.docker-registry-ingress - *terraform.NodeValidatableResource
  kubernetes_ingress.grafana-ingress - *terraform.NodeValidatableResource
  kubernetes_ingress.rio-ingress - *terraform.NodeValidatableResource
  kubernetes_ingress.sentry-ingress - *terraform.NodeValidatableResource
  kubernetes_namespace.cert-manager - *terraform.NodeValidatableResource
  kubernetes_namespace.docker - *terraform.NodeValidatableResource
  kubernetes_namespace.metrics-server - *terraform.NodeValidatableResource
  kubernetes_namespace.monitoring - *terraform.NodeValidatableResource
  kubernetes_namespace.nginx-ingress - *terraform.NodeValidatableResource
  kubernetes_namespace.postgres-ha - *terraform.NodeValidatableResource
  kubernetes_namespace.redis - *terraform.NodeValidatableResource
  kubernetes_namespace.rio - *terraform.NodeValidatableResource
  kubernetes_namespace.sentry - *terraform.NodeValidatableResource
  kubernetes_namespace.timescale - *terraform.NodeValidatableResource
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeValidatableResource
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeValidatableResource
  kubernetes_secret.docker-config-json - *terraform.NodeValidatableResource
  kubernetes_secret.docker-registry-auth - *terraform.NodeValidatableResource
  kubernetes_secret.timescale-certificates - *terraform.NodeValidatableResource
  kubernetes_secret.timescale-credentials - *terraform.NodeValidatableResource
  kubernetes_service.buildkitd - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeValidatableResource
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  null_resource.cert-manager-setup - *terraform.NodeValidatableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup - *terraform.NodeValidatableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains - *terraform.NodeValidatableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain - *terraform.NodeValidatableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup - *terraform.NodeValidatableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/08/09 19:26:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/08/09 19:26:12 [TRACE] ProviderConfigTransformer: attaching to "module.cluster.provider.digitalocean" provider configuration from cluster/main.tf:5,1-24
2020/08/09 19:26:12 [TRACE] ProviderConfigTransformer: attaching to "module.cluster.provider.kubernetes" provider configuration from cluster/main.tf:63,1-22
2020/08/09 19:26:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodeValidatableResource
  data.helm_repository.incubator - *terraform.NodeValidatableResource
  data.helm_repository.jetstack - *terraform.NodeValidatableResource
  data.helm_repository.sentry - *terraform.NodeValidatableResource
  data.helm_repository.stable - *terraform.NodeValidatableResource
  data.helm_repository.timescale - *terraform.NodeValidatableResource
  data.local_file.cert_manager_setup - *terraform.NodeValidatableResource
  data.local_file.rio-app-domains - *terraform.NodeValidatableResource
  data.local_file.rio-custom-domain - *terraform.NodeValidatableResource
  data.local_file.rio-yaml - *terraform.NodeValidatableResource
  helm_release.cert-manager - *terraform.NodeValidatableResource
  helm_release.docker-registry - *terraform.NodeValidatableResource
  helm_release.metrics-server - *terraform.NodeValidatableResource
  helm_release.nginx-ingress - *terraform.NodeValidatableResource
  helm_release.postgres-ha - *terraform.NodeValidatableResource
  helm_release.prometheus-operator - *terraform.NodeValidatableResource
  helm_release.redis - *terraform.NodeValidatableResource
  helm_release.sentry - *terraform.NodeValidatableResource
  helm_release.sentry-k8s-erros - *terraform.NodeValidatableResource
  helm_release.timescaledb - *terraform.NodeValidatableResource
  kubernetes_config_map.buildkitd-config - *terraform.NodeValidatableResource
  kubernetes_deployment.buildkitd - *terraform.NodeValidatableResource
  kubernetes_ingress.docker-registry-ingress - *terraform.NodeValidatableResource
  kubernetes_ingress.grafana-ingress - *terraform.NodeValidatableResource
  kubernetes_ingress.rio-ingress - *terraform.NodeValidatableResource
  kubernetes_ingress.sentry-ingress - *terraform.NodeValidatableResource
  kubernetes_namespace.cert-manager - *terraform.NodeValidatableResource
  kubernetes_namespace.docker - *terraform.NodeValidatableResource
  kubernetes_namespace.metrics-server - *terraform.NodeValidatableResource
  kubernetes_namespace.monitoring - *terraform.NodeValidatableResource
  kubernetes_namespace.nginx-ingress - *terraform.NodeValidatableResource
  kubernetes_namespace.postgres-ha - *terraform.NodeValidatableResource
  kubernetes_namespace.redis - *terraform.NodeValidatableResource
  kubernetes_namespace.rio - *terraform.NodeValidatableResource
  kubernetes_namespace.sentry - *terraform.NodeValidatableResource
  kubernetes_namespace.timescale - *terraform.NodeValidatableResource
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeValidatableResource
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeValidatableResource
  kubernetes_secret.docker-config-json - *terraform.NodeValidatableResource
  kubernetes_secret.docker-registry-auth - *terraform.NodeValidatableResource
  kubernetes_secret.timescale-certificates - *terraform.NodeValidatableResource
  kubernetes_secret.timescale-credentials - *terraform.NodeValidatableResource
  kubernetes_service.buildkitd - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeValidatableResource
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.provider.kubernetes - *terraform.NodeApplyableProvider
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  null_resource.cert-manager-setup - *terraform.NodeValidatableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup - *terraform.NodeValidatableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains - *terraform.NodeValidatableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain - *terraform.NodeValidatableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup - *terraform.NodeValidatableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/08/09 19:26:12 [DEBUG] adding implicit provider configuration provider.null, implied first by null_resource.create-timescaledb-setup
2020/08/09 19:26:12 [DEBUG] adding implicit provider configuration provider.helm, implied first by helm_release.redis
2020/08/09 19:26:12 [DEBUG] adding implicit provider configuration provider.kubernetes, implied first by kubernetes_namespace.timescale
2020/08/09 19:26:12 [DEBUG] adding implicit provider configuration provider.local, implied first by data.local_file.cert_manager_setup
2020/08/09 19:26:12 [DEBUG] adding implicit provider configuration provider.digitalocean, implied first by module.cluster.digitalocean_kubernetes_node_pool.ancillary
2020/08/09 19:26:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodeValidatableResource
  data.helm_repository.incubator - *terraform.NodeValidatableResource
  data.helm_repository.jetstack - *terraform.NodeValidatableResource
  data.helm_repository.sentry - *terraform.NodeValidatableResource
  data.helm_repository.stable - *terraform.NodeValidatableResource
  data.helm_repository.timescale - *terraform.NodeValidatableResource
  data.local_file.cert_manager_setup - *terraform.NodeValidatableResource
  data.local_file.rio-app-domains - *terraform.NodeValidatableResource
  data.local_file.rio-custom-domain - *terraform.NodeValidatableResource
  data.local_file.rio-yaml - *terraform.NodeValidatableResource
  helm_release.cert-manager - *terraform.NodeValidatableResource
  helm_release.docker-registry - *terraform.NodeValidatableResource
  helm_release.metrics-server - *terraform.NodeValidatableResource
  helm_release.nginx-ingress - *terraform.NodeValidatableResource
  helm_release.postgres-ha - *terraform.NodeValidatableResource
  helm_release.prometheus-operator - *terraform.NodeValidatableResource
  helm_release.redis - *terraform.NodeValidatableResource
  helm_release.sentry - *terraform.NodeValidatableResource
  helm_release.sentry-k8s-erros - *terraform.NodeValidatableResource
  helm_release.timescaledb - *terraform.NodeValidatableResource
  kubernetes_config_map.buildkitd-config - *terraform.NodeValidatableResource
  kubernetes_deployment.buildkitd - *terraform.NodeValidatableResource
  kubernetes_ingress.docker-registry-ingress - *terraform.NodeValidatableResource
  kubernetes_ingress.grafana-ingress - *terraform.NodeValidatableResource
  kubernetes_ingress.rio-ingress - *terraform.NodeValidatableResource
  kubernetes_ingress.sentry-ingress - *terraform.NodeValidatableResource
  kubernetes_namespace.cert-manager - *terraform.NodeValidatableResource
  kubernetes_namespace.docker - *terraform.NodeValidatableResource
  kubernetes_namespace.metrics-server - *terraform.NodeValidatableResource
  kubernetes_namespace.monitoring - *terraform.NodeValidatableResource
  kubernetes_namespace.nginx-ingress - *terraform.NodeValidatableResource
  kubernetes_namespace.postgres-ha - *terraform.NodeValidatableResource
  kubernetes_namespace.redis - *terraform.NodeValidatableResource
  kubernetes_namespace.rio - *terraform.NodeValidatableResource
  kubernetes_namespace.sentry - *terraform.NodeValidatableResource
  kubernetes_namespace.timescale - *terraform.NodeValidatableResource
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeValidatableResource
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeValidatableResource
  kubernetes_secret.docker-config-json - *terraform.NodeValidatableResource
  kubernetes_secret.docker-registry-auth - *terraform.NodeValidatableResource
  kubernetes_secret.timescale-certificates - *terraform.NodeValidatableResource
  kubernetes_secret.timescale-credentials - *terraform.NodeValidatableResource
  kubernetes_service.buildkitd - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeValidatableResource
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.provider.kubernetes - *terraform.NodeApplyableProvider
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  null_resource.cert-manager-setup - *terraform.NodeValidatableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup - *terraform.NodeValidatableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains - *terraform.NodeValidatableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain - *terraform.NodeValidatableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup - *terraform.NodeValidatableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  provider.digitalocean - *terraform.NodeApplyableProvider
  provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_ingress.sentry-ingress is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_namespace.metrics-server is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: null_resource.rio-app-domains is provided by provider.null or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: module.cluster.digitalocean_kubernetes_node_pool.ancillary is provided by module.cluster.provider.digitalocean or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_secret.docker-registry-auth is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: data.helm_repository.incubator is provided by provider.helm or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: data.local_file.rio-custom-domain is provided by provider.local or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: data.local_file.rio-app-domains is provided by provider.local or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: helm_release.prometheus-operator is provided by provider.helm or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_namespace.redis is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: helm_release.docker-registry is provided by provider.helm or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: helm_release.metrics-server is provided by provider.helm or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_persistent_volume_claim.image-proxy is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: helm_release.cert-manager is provided by provider.helm or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_service.buildkitd is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: helm_release.timescaledb is provided by provider.helm or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: data.helm_repository.timescale is provided by provider.helm or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_config_map.buildkitd-config is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_secret.timescale-credentials is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: module.cluster.digitalocean_kubernetes_node_pool.workers is provided by module.cluster.provider.digitalocean or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_namespace.rio is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: null_resource.rio-custom-domain is provided by provider.null or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_ingress.docker-registry-ingress is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_namespace.nginx-ingress is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: helm_release.postgres-ha is provided by provider.helm or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: data.local_file.rio-yaml is provided by provider.local or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: data.helm_repository.sentry is provided by provider.helm or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_namespace.sentry is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: helm_release.sentry is provided by provider.helm or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: null_resource.rio-setup is provided by provider.null or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_deployment.buildkitd is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_secret.timescale-certificates is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_secret.docker-config-json is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: null_resource.cert-manager-setup is provided by provider.null or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: module.cluster.digitalocean_kubernetes_cluster.dish is provided by module.cluster.provider.digitalocean or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_namespace.docker is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_namespace.cert-manager is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: data.helm_repository.bitnami is provided by provider.helm or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: module.cluster.digitalocean_kubernetes_node_pool.ci is provided by module.cluster.provider.digitalocean or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: null_resource.create-timescaledb-setup is provided by provider.null or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: helm_release.redis is provided by provider.helm or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_namespace.timescale is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_namespace.postgres-ha is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_ingress.rio-ingress is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_namespace.monitoring is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: helm_release.sentry-k8s-erros is provided by provider.helm or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: data.helm_repository.jetstack is provided by provider.helm or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: helm_release.nginx-ingress is provided by provider.helm or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_ingress.grafana-ingress is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_secret.cloudflare-dns-api-token is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: data.local_file.cert_manager_setup is provided by provider.local or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: data.helm_repository.stable is provided by provider.helm or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_config_map.buildkitd-config
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_config_map.buildkitd-config" (*terraform.NodeValidatableResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.postgres-ha
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "helm_release.postgres-ha" (*terraform.NodeValidatableResource) needs provider.helm
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.metrics-server
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "helm_release.metrics-server" (*terraform.NodeValidatableResource) needs provider.helm
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for module.cluster.provider.digitalocean serving module.cluster.digitalocean_kubernetes_node_pool.ancillary
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "module.cluster.digitalocean_kubernetes_node_pool.ancillary" (*terraform.NodeValidatableResource) needs module.cluster.provider.digitalocean
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.redis
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_namespace.redis" (*terraform.NodeValidatableResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.local serving data.local_file.rio-yaml
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "data.local_file.rio-yaml" (*terraform.NodeValidatableResource) needs provider.local
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.null serving null_resource.cert-manager-setup
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "null_resource.cert-manager-setup" (*terraform.NodeValidatableResource) needs provider.null
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for module.cluster.provider.digitalocean serving module.cluster.digitalocean_kubernetes_node_pool.ci
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "module.cluster.digitalocean_kubernetes_node_pool.ci" (*terraform.NodeValidatableResource) needs module.cluster.provider.digitalocean
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_ingress.rio-ingress
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_ingress.rio-ingress" (*terraform.NodeValidatableResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.metrics-server
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_namespace.metrics-server" (*terraform.NodeValidatableResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.helm serving data.helm_repository.timescale
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "data.helm_repository.timescale" (*terraform.NodeValidatableResource) needs provider.helm
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_ingress.docker-registry-ingress
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_ingress.docker-registry-ingress" (*terraform.NodeValidatableResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.sentry
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "helm_release.sentry" (*terraform.NodeValidatableResource) needs provider.helm
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_deployment.buildkitd
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_deployment.buildkitd" (*terraform.NodeValidatableResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_secret.timescale-certificates
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_secret.timescale-certificates" (*terraform.NodeValidatableResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for module.cluster.provider.digitalocean serving module.cluster.digitalocean_kubernetes_cluster.dish
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "module.cluster.digitalocean_kubernetes_cluster.dish" (*terraform.NodeValidatableResource) needs module.cluster.provider.digitalocean
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.sentry-k8s-erros
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "helm_release.sentry-k8s-erros" (*terraform.NodeValidatableResource) needs provider.helm
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_ingress.sentry-ingress
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_ingress.sentry-ingress" (*terraform.NodeValidatableResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.docker-registry
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "helm_release.docker-registry" (*terraform.NodeValidatableResource) needs provider.helm
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_persistent_volume_claim.image-proxy
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_persistent_volume_claim.image-proxy" (*terraform.NodeValidatableResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.helm serving data.helm_repository.sentry
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "data.helm_repository.sentry" (*terraform.NodeValidatableResource) needs provider.helm
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_secret.docker-config-json
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_secret.docker-config-json" (*terraform.NodeValidatableResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.null serving null_resource.create-timescaledb-setup
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "null_resource.create-timescaledb-setup" (*terraform.NodeValidatableResource) needs provider.null
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.timescale
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_namespace.timescale" (*terraform.NodeValidatableResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.postgres-ha
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_namespace.postgres-ha" (*terraform.NodeValidatableResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_secret.docker-registry-auth
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_secret.docker-registry-auth" (*terraform.NodeValidatableResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.local serving data.local_file.cert_manager_setup
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "data.local_file.cert_manager_setup" (*terraform.NodeValidatableResource) needs provider.local
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.local serving data.local_file.rio-custom-domain
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "data.local_file.rio-custom-domain" (*terraform.NodeValidatableResource) needs provider.local
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.local serving data.local_file.rio-app-domains
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "data.local_file.rio-app-domains" (*terraform.NodeValidatableResource) needs provider.local
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_service.buildkitd
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_service.buildkitd" (*terraform.NodeValidatableResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_secret.timescale-credentials
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_secret.timescale-credentials" (*terraform.NodeValidatableResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.null serving null_resource.rio-setup
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "null_resource.rio-setup" (*terraform.NodeValidatableResource) needs provider.null
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.nginx-ingress
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "helm_release.nginx-ingress" (*terraform.NodeValidatableResource) needs provider.helm
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_ingress.grafana-ingress
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_ingress.grafana-ingress" (*terraform.NodeValidatableResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.null serving null_resource.rio-app-domains
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "null_resource.rio-app-domains" (*terraform.NodeValidatableResource) needs provider.null
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_secret.cloudflare-dns-api-token
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_secret.cloudflare-dns-api-token" (*terraform.NodeValidatableResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.cert-manager
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_namespace.cert-manager" (*terraform.NodeValidatableResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.helm serving data.helm_repository.bitnami
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "data.helm_repository.bitnami" (*terraform.NodeValidatableResource) needs provider.helm
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.helm serving data.helm_repository.jetstack
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "data.helm_repository.jetstack" (*terraform.NodeValidatableResource) needs provider.helm
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.docker
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_namespace.docker" (*terraform.NodeValidatableResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for module.cluster.provider.digitalocean serving module.cluster.digitalocean_kubernetes_node_pool.workers
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "module.cluster.digitalocean_kubernetes_node_pool.workers" (*terraform.NodeValidatableResource) needs module.cluster.provider.digitalocean
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.rio
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_namespace.rio" (*terraform.NodeValidatableResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.null serving null_resource.rio-custom-domain
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "null_resource.rio-custom-domain" (*terraform.NodeValidatableResource) needs provider.null
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.nginx-ingress
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_namespace.nginx-ingress" (*terraform.NodeValidatableResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.sentry
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_namespace.sentry" (*terraform.NodeValidatableResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.redis
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "helm_release.redis" (*terraform.NodeValidatableResource) needs provider.helm
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.monitoring
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_namespace.monitoring" (*terraform.NodeValidatableResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.prometheus-operator
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "helm_release.prometheus-operator" (*terraform.NodeValidatableResource) needs provider.helm
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.cert-manager
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "helm_release.cert-manager" (*terraform.NodeValidatableResource) needs provider.helm
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.timescaledb
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "helm_release.timescaledb" (*terraform.NodeValidatableResource) needs provider.helm
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.helm serving data.helm_repository.stable
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "data.helm_repository.stable" (*terraform.NodeValidatableResource) needs provider.helm
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.helm serving data.helm_repository.incubator
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "data.helm_repository.incubator" (*terraform.NodeValidatableResource) needs provider.helm
2020/08/09 19:26:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.docker-registry - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.prometheus-operator - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.redis - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry-k8s-erros - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.timescaledb - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_deployment.buildkitd - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.grafana-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.rio-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.sentry-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.cert-manager - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-config-json - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-registry-auth - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-certificates - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-credentials - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_service.buildkitd - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.provider.kubernetes - *terraform.NodeApplyableProvider
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  null_resource.cert-manager-setup - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  provider.digitalocean - *terraform.NodeApplyableProvider
  provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/08/09 19:26:12 [DEBUG] pruning unused module.cluster.provider.kubernetes
2020/08/09 19:26:12 [DEBUG] pruning unused provider.digitalocean
2020/08/09 19:26:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.docker-registry - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.prometheus-operator - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.redis - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry-k8s-erros - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.timescaledb - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_deployment.buildkitd - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.grafana-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.rio-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.sentry-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.cert-manager - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-config-json - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-registry-auth - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-certificates - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-credentials - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_service.buildkitd - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  null_resource.cert-manager-setup - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/08/09 19:26:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  data.helm_repository.bitnami - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.docker-registry - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.prometheus-operator - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.redis - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry-k8s-erros - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.timescaledb - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_deployment.buildkitd - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.grafana-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.rio-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.sentry-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.cert-manager - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-config-json - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-registry-auth - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-certificates - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-credentials - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_service.buildkitd - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  null_resource.cert-manager-setup - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to data.helm_repository.stable
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching provider config schema to module.cluster.provider.digitalocean
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.nginx-ingress
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_ingress.grafana-ingress
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.cloudflare-dns-api-token
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to data.local_file.cert_manager_setup
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_ingress.sentry-ingress
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.metrics-server
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to null_resource.rio-app-domains
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to null_resource.rio-app-domains
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to module.cluster.digitalocean_kubernetes_node_pool.ancillary
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.local
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.docker-registry-auth
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to data.helm_repository.incubator
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to data.local_file.rio-custom-domain
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to data.local_file.rio-app-domains
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.prometheus-operator
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.redis
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.docker-registry
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.metrics-server
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_persistent_volume_claim.image-proxy
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.cert-manager
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.kubernetes
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.buildkitd
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.timescaledb
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to data.helm_repository.timescale
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.helm
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_config_map.buildkitd-config
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.timescale-credentials
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to module.cluster.digitalocean_kubernetes_node_pool.workers
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.postgres-ha
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to data.local_file.rio-yaml
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to data.helm_repository.sentry
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.rio
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to null_resource.rio-custom-domain
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to null_resource.rio-custom-domain
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_ingress.docker-registry-ingress
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.nginx-ingress
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.sentry
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.sentry
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to null_resource.rio-setup
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to null_resource.rio-setup
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.buildkitd
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.timescale-certificates
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.docker-config-json
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to null_resource.cert-manager-setup
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to null_resource.cert-manager-setup
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to module.cluster.digitalocean_kubernetes_cluster.dish
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.docker
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.cert-manager
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to data.helm_repository.bitnami
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to module.cluster.digitalocean_kubernetes_node_pool.ci
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.null
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to null_resource.create-timescaledb-setup
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to null_resource.create-timescaledb-setup
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.redis
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.timescale
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to data.helm_repository.jetstack
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.postgres-ha
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_ingress.rio-ingress
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.monitoring
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.sentry-k8s-erros
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "module.cluster.digitalocean_kubernetes_cluster.dish" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.DO_DISH_KEY" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "provisioner.local-exec" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "module.cluster.var.DO_DISH_KEY" references: [var.DO_DISH_KEY]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_namespace.docker" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_namespace.cert-manager" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "data.helm_repository.bitnami" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "module.cluster.digitalocean_kubernetes_node_pool.ci" references: [module.cluster.digitalocean_kubernetes_cluster.dish]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.cert_manager_version" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "null_resource.create-timescaledb-setup" references: [helm_release.timescaledb]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "helm_release.redis" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_namespace.timescale" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.POSTGRES_PASSWORD" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "provider.null" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.GMAIL_APP_PASSWORD" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_namespace.postgres-ha" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_ingress.rio-ingress" references: [helm_release.cert-manager var.dish_domain var.dish_domain var.dish_domain var.dish_domain]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_namespace.monitoring" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "helm_release.sentry-k8s-erros" references: [var.K8S_DSN]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "data.helm_repository.jetstack" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "module.cluster.provider.digitalocean" references: [module.cluster.var.DO_DISH_KEY]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "helm_release.nginx-ingress" references: [data.helm_repository.stable]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_ingress.grafana-ingress" references: [var.dish_domain var.dish_domain]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_secret.cloudflare-dns-api-token" references: [helm_release.cert-manager var.CLOUDFLARE_DNS_API_TOKEN]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "data.local_file.cert_manager_setup" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "data.helm_repository.stable" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_ingress.sentry-ingress" references: [var.dish_domain var.dish_domain]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_namespace.metrics-server" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "null_resource.rio-app-domains" references: [null_resource.rio-setup data.local_file.rio-app-domains data.local_file.rio-app-domains]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "module.cluster.digitalocean_kubernetes_node_pool.ancillary" references: [module.cluster.digitalocean_kubernetes_cluster.dish]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "module.cluster.output.cluster-id" references: [module.cluster.digitalocean_kubernetes_cluster.dish]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.DOCKER_REGISTRY_HTTP_AUTH" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "provider.local" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_secret.docker-registry-auth" references: [var.DOCKER_REGISTRY_HTTP_AUTH]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "data.helm_repository.incubator" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "data.local_file.rio-custom-domain" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.DOCKER_CONFIG_JSON" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.DO_SPACES_ID" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "data.local_file.rio-app-domains" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.SENTRY_PG_PASS" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.TIMESCALE_SU_PASS" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.SENTRY_USER_PASS" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "helm_release.prometheus-operator" references: [var.GRAFANA_PASSWORD]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_namespace.redis" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.POSTGRES_REPMGR_PASSWORD" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.DO_SPACES_SECRET" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.GRAFANA_PASSWORD" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "helm_release.docker-registry" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "helm_release.metrics-server" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_persistent_volume_claim.image-proxy" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "helm_release.cert-manager" references: [var.cert_manager_version data.helm_repository.jetstack]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.TIMESCALE_ADMIN_PASS" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "provider.kubernetes" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_service.buildkitd" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "helm_release.timescaledb" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "data.helm_repository.timescale" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.dish_domain" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_config_map.buildkitd-config" references: [var.DOCKER_CONFIG_JSON]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_secret.timescale-credentials" references: [kubernetes_namespace.timescale var.TIMESCALE_SU_PASS var.TIMESCALE_REPLICATION_PASS var.TIMESCALE_ADMIN_PASS]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "module.cluster.digitalocean_kubernetes_node_pool.workers" references: [module.cluster.digitalocean_kubernetes_cluster.dish]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.K8S_DSN" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "provider.helm" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "data.local_file.rio-yaml" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "data.helm_repository.sentry" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_namespace.rio" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "null_resource.rio-custom-domain" references: [null_resource.rio-setup data.local_file.rio-custom-domain data.local_file.rio-custom-domain]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_ingress.docker-registry-ingress" references: [var.dish_domain var.dish_domain]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_namespace.nginx-ingress" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "helm_release.postgres-ha" references: [var.POSTGRES_PASSWORD var.POSTGRES_REPMGR_PASSWORD]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_namespace.sentry" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "helm_release.sentry" references: [var.SENTRY_PG_PASS var.SENTRY_USER_PASS var.GMAIL_APP_PASSWORD]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "null_resource.rio-setup" references: [helm_release.cert-manager data.local_file.rio-yaml data.local_file.rio-yaml]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_deployment.buildkitd" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.CLOUDFLARE_DNS_API_TOKEN" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_secret.timescale-certificates" references: [kubernetes_namespace.timescale]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_secret.docker-config-json" references: [var.DOCKER_CONFIG_JSON]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "null_resource.cert-manager-setup" references: [helm_release.cert-manager data.local_file.cert_manager_setup data.local_file.cert_manager_setup]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.TIMESCALE_REPLICATION_PASS" references: []
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager - *terraform.NodeValidatableResource
    data.helm_repository.jetstack - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.cert_manager_version - *terraform.NodeRootVariable
  helm_release.docker-registry - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress - *terraform.NodeValidatableResource
    data.helm_repository.stable - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  helm_release.prometheus-operator - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  helm_release.redis - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
    var.SENTRY_PG_PASS - *terraform.NodeRootVariable
    var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  helm_release.sentry-k8s-erros - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.K8S_DSN - *terraform.NodeRootVariable
  helm_release.timescaledb - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  kubernetes_deployment.buildkitd - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.grafana-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.rio-ingress - *terraform.NodeValidatableResource
    helm_release.cert-manager - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.sentry-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_namespace.cert-manager - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeValidatableResource
    helm_release.cert-manager - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  kubernetes_secret.docker-config-json - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  kubernetes_secret.docker-registry-auth - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  kubernetes_secret.timescale-certificates - *terraform.NodeValidatableResource
    kubernetes_namespace.timescale - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-credentials - *terraform.NodeValidatableResource
    kubernetes_namespace.timescale - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  kubernetes_service.buildkitd - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
  null_resource.cert-manager-setup - *terraform.NodeValidatableResource
    data.local_file.cert_manager_setup - *terraform.NodeValidatableResource
    helm_release.cert-manager - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup - *terraform.NodeValidatableResource
    helm_release.timescaledb - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains - *terraform.NodeValidatableResource
    data.local_file.rio-app-domains - *terraform.NodeValidatableResource
    null_resource.rio-setup - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain - *terraform.NodeValidatableResource
    data.local_file.rio-custom-domain - *terraform.NodeValidatableResource
    null_resource.rio-setup - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup - *terraform.NodeValidatableResource
    data.local_file.rio-yaml - *terraform.NodeValidatableResource
    helm_release.cert-manager - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager - *terraform.NodeValidatableResource
    data.helm_repository.jetstack - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.cert_manager_version - *terraform.NodeRootVariable
  helm_release.docker-registry - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress - *terraform.NodeValidatableResource
    data.helm_repository.stable - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  helm_release.prometheus-operator - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  helm_release.redis - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
    var.SENTRY_PG_PASS - *terraform.NodeRootVariable
    var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  helm_release.sentry-k8s-erros - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.K8S_DSN - *terraform.NodeRootVariable
  helm_release.timescaledb - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  kubernetes_deployment.buildkitd - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.grafana-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.rio-ingress - *terraform.NodeValidatableResource
    helm_release.cert-manager - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.sentry-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_namespace.cert-manager - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeValidatableResource
    helm_release.cert-manager - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  kubernetes_secret.docker-config-json - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  kubernetes_secret.docker-registry-auth - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  kubernetes_secret.timescale-certificates - *terraform.NodeValidatableResource
    kubernetes_namespace.timescale - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-credentials - *terraform.NodeValidatableResource
    kubernetes_namespace.timescale - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  kubernetes_service.buildkitd - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    data.helm_repository.bitnami - *terraform.NodeValidatableResource
    data.helm_repository.incubator - *terraform.NodeValidatableResource
    data.helm_repository.jetstack - *terraform.NodeValidatableResource
    data.helm_repository.sentry - *terraform.NodeValidatableResource
    data.helm_repository.stable - *terraform.NodeValidatableResource
    data.helm_repository.timescale - *terraform.NodeValidatableResource
    data.local_file.cert_manager_setup - *terraform.NodeValidatableResource
    data.local_file.rio-app-domains - *terraform.NodeValidatableResource
    data.local_file.rio-custom-domain - *terraform.NodeValidatableResource
    data.local_file.rio-yaml - *terraform.NodeValidatableResource
    helm_release.cert-manager - *terraform.NodeValidatableResource
    helm_release.docker-registry - *terraform.NodeValidatableResource
    helm_release.metrics-server - *terraform.NodeValidatableResource
    helm_release.nginx-ingress - *terraform.NodeValidatableResource
    helm_release.postgres-ha - *terraform.NodeValidatableResource
    helm_release.prometheus-operator - *terraform.NodeValidatableResource
    helm_release.redis - *terraform.NodeValidatableResource
    helm_release.sentry - *terraform.NodeValidatableResource
    helm_release.sentry-k8s-erros - *terraform.NodeValidatableResource
    helm_release.timescaledb - *terraform.NodeValidatableResource
    kubernetes_config_map.buildkitd-config - *terraform.NodeValidatableResource
    kubernetes_deployment.buildkitd - *terraform.NodeValidatableResource
    kubernetes_ingress.docker-registry-ingress - *terraform.NodeValidatableResource
    kubernetes_ingress.grafana-ingress - *terraform.NodeValidatableResource
    kubernetes_ingress.rio-ingress - *terraform.NodeValidatableResource
    kubernetes_ingress.sentry-ingress - *terraform.NodeValidatableResource
    kubernetes_namespace.cert-manager - *terraform.NodeValidatableResource
    kubernetes_namespace.docker - *terraform.NodeValidatableResource
    kubernetes_namespace.metrics-server - *terraform.NodeValidatableResource
    kubernetes_namespace.monitoring - *terraform.NodeValidatableResource
    kubernetes_namespace.nginx-ingress - *terraform.NodeValidatableResource
    kubernetes_namespace.postgres-ha - *terraform.NodeValidatableResource
    kubernetes_namespace.redis - *terraform.NodeValidatableResource
    kubernetes_namespace.rio - *terraform.NodeValidatableResource
    kubernetes_namespace.sentry - *terraform.NodeValidatableResource
    kubernetes_namespace.timescale - *terraform.NodeValidatableResource
    kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeValidatableResource
    kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeValidatableResource
    kubernetes_secret.docker-config-json - *terraform.NodeValidatableResource
    kubernetes_secret.docker-registry-auth - *terraform.NodeValidatableResource
    kubernetes_secret.timescale-certificates - *terraform.NodeValidatableResource
    kubernetes_secret.timescale-credentials - *terraform.NodeValidatableResource
    kubernetes_service.buildkitd - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeValidatableResource
    module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    null_resource.cert-manager-setup - *terraform.NodeValidatableResource
    null_resource.create-timescaledb-setup - *terraform.NodeValidatableResource
    null_resource.rio-app-domains - *terraform.NodeValidatableResource
    null_resource.rio-custom-domain - *terraform.NodeValidatableResource
    null_resource.rio-setup - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    provider.kubernetes - *terraform.NodeApplyableProvider
    provider.local - *terraform.NodeApplyableProvider
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
    var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
    var.DO_SPACES_ID - *terraform.NodeRootVariable
    var.DO_SPACES_SECRET - *terraform.NodeRootVariable
    var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
    var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
    var.K8S_DSN - *terraform.NodeRootVariable
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
    var.SENTRY_PG_PASS - *terraform.NodeRootVariable
    var.SENTRY_USER_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
    var.cert_manager_version - *terraform.NodeRootVariable
    var.dish_domain - *terraform.NodeRootVariable
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
  null_resource.cert-manager-setup - *terraform.NodeValidatableResource
    data.local_file.cert_manager_setup - *terraform.NodeValidatableResource
    helm_release.cert-manager - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup - *terraform.NodeValidatableResource
    helm_release.timescaledb - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains - *terraform.NodeValidatableResource
    data.local_file.rio-app-domains - *terraform.NodeValidatableResource
    null_resource.rio-setup - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain - *terraform.NodeValidatableResource
    data.local_file.rio-custom-domain - *terraform.NodeValidatableResource
    null_resource.rio-setup - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup - *terraform.NodeValidatableResource
    data.local_file.rio-yaml - *terraform.NodeValidatableResource
    helm_release.cert-manager - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager - *terraform.NodeValidatableResource
    data.helm_repository.jetstack - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.cert_manager_version - *terraform.NodeRootVariable
  helm_release.docker-registry - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress - *terraform.NodeValidatableResource
    data.helm_repository.stable - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  helm_release.prometheus-operator - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  helm_release.redis - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
    var.SENTRY_PG_PASS - *terraform.NodeRootVariable
    var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  helm_release.sentry-k8s-erros - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.K8S_DSN - *terraform.NodeRootVariable
  helm_release.timescaledb - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  kubernetes_deployment.buildkitd - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.grafana-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.rio-ingress - *terraform.NodeValidatableResource
    helm_release.cert-manager - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.sentry-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_namespace.cert-manager - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeValidatableResource
    helm_release.cert-manager - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  kubernetes_secret.docker-config-json - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  kubernetes_secret.docker-registry-auth - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  kubernetes_secret.timescale-certificates - *terraform.NodeValidatableResource
    kubernetes_namespace.timescale - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-credentials - *terraform.NodeValidatableResource
    kubernetes_namespace.timescale - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  kubernetes_service.buildkitd - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    data.helm_repository.bitnami - *terraform.NodeValidatableResource
    data.helm_repository.incubator - *terraform.NodeValidatableResource
    data.helm_repository.jetstack - *terraform.NodeValidatableResource
    data.helm_repository.sentry - *terraform.NodeValidatableResource
    data.helm_repository.stable - *terraform.NodeValidatableResource
    data.helm_repository.timescale - *terraform.NodeValidatableResource
    data.local_file.cert_manager_setup - *terraform.NodeValidatableResource
    data.local_file.rio-app-domains - *terraform.NodeValidatableResource
    data.local_file.rio-custom-domain - *terraform.NodeValidatableResource
    data.local_file.rio-yaml - *terraform.NodeValidatableResource
    helm_release.cert-manager - *terraform.NodeValidatableResource
    helm_release.docker-registry - *terraform.NodeValidatableResource
    helm_release.metrics-server - *terraform.NodeValidatableResource
    helm_release.nginx-ingress - *terraform.NodeValidatableResource
    helm_release.postgres-ha - *terraform.NodeValidatableResource
    helm_release.prometheus-operator - *terraform.NodeValidatableResource
    helm_release.redis - *terraform.NodeValidatableResource
    helm_release.sentry - *terraform.NodeValidatableResource
    helm_release.sentry-k8s-erros - *terraform.NodeValidatableResource
    helm_release.timescaledb - *terraform.NodeValidatableResource
    kubernetes_config_map.buildkitd-config - *terraform.NodeValidatableResource
    kubernetes_deployment.buildkitd - *terraform.NodeValidatableResource
    kubernetes_ingress.docker-registry-ingress - *terraform.NodeValidatableResource
    kubernetes_ingress.grafana-ingress - *terraform.NodeValidatableResource
    kubernetes_ingress.rio-ingress - *terraform.NodeValidatableResource
    kubernetes_ingress.sentry-ingress - *terraform.NodeValidatableResource
    kubernetes_namespace.cert-manager - *terraform.NodeValidatableResource
    kubernetes_namespace.docker - *terraform.NodeValidatableResource
    kubernetes_namespace.metrics-server - *terraform.NodeValidatableResource
    kubernetes_namespace.monitoring - *terraform.NodeValidatableResource
    kubernetes_namespace.nginx-ingress - *terraform.NodeValidatableResource
    kubernetes_namespace.postgres-ha - *terraform.NodeValidatableResource
    kubernetes_namespace.redis - *terraform.NodeValidatableResource
    kubernetes_namespace.rio - *terraform.NodeValidatableResource
    kubernetes_namespace.sentry - *terraform.NodeValidatableResource
    kubernetes_namespace.timescale - *terraform.NodeValidatableResource
    kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeValidatableResource
    kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeValidatableResource
    kubernetes_secret.docker-config-json - *terraform.NodeValidatableResource
    kubernetes_secret.docker-registry-auth - *terraform.NodeValidatableResource
    kubernetes_secret.timescale-certificates - *terraform.NodeValidatableResource
    kubernetes_secret.timescale-credentials - *terraform.NodeValidatableResource
    kubernetes_service.buildkitd - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeValidatableResource
    module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    null_resource.cert-manager-setup - *terraform.NodeValidatableResource
    null_resource.create-timescaledb-setup - *terraform.NodeValidatableResource
    null_resource.rio-app-domains - *terraform.NodeValidatableResource
    null_resource.rio-custom-domain - *terraform.NodeValidatableResource
    null_resource.rio-setup - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    provider.kubernetes - *terraform.NodeApplyableProvider
    provider.local - *terraform.NodeApplyableProvider
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
    var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
    var.DO_SPACES_ID - *terraform.NodeRootVariable
    var.DO_SPACES_SECRET - *terraform.NodeRootVariable
    var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
    var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
    var.K8S_DSN - *terraform.NodeRootVariable
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
    var.SENTRY_PG_PASS - *terraform.NodeRootVariable
    var.SENTRY_USER_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
    var.cert_manager_version - *terraform.NodeRootVariable
    var.dish_domain - *terraform.NodeRootVariable
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  module.cluster.provider.digitalocean (close) - *terraform.graphNodeCloseProvider
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
  null_resource.cert-manager-setup - *terraform.NodeValidatableResource
    data.local_file.cert_manager_setup - *terraform.NodeValidatableResource
    helm_release.cert-manager - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup - *terraform.NodeValidatableResource
    helm_release.timescaledb - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains - *terraform.NodeValidatableResource
    data.local_file.rio-app-domains - *terraform.NodeValidatableResource
    null_resource.rio-setup - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain - *terraform.NodeValidatableResource
    data.local_file.rio-custom-domain - *terraform.NodeValidatableResource
    null_resource.rio-setup - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup - *terraform.NodeValidatableResource
    data.local_file.rio-yaml - *terraform.NodeValidatableResource
    helm_release.cert-manager - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  provider.helm - *terraform.NodeApplyableProvider
  provider.helm (close) - *terraform.graphNodeCloseProvider
    data.helm_repository.bitnami - *terraform.NodeValidatableResource
    data.helm_repository.incubator - *terraform.NodeValidatableResource
    data.helm_repository.jetstack - *terraform.NodeValidatableResource
    data.helm_repository.sentry - *terraform.NodeValidatableResource
    data.helm_repository.stable - *terraform.NodeValidatableResource
    data.helm_repository.timescale - *terraform.NodeValidatableResource
    helm_release.cert-manager - *terraform.NodeValidatableResource
    helm_release.docker-registry - *terraform.NodeValidatableResource
    helm_release.metrics-server - *terraform.NodeValidatableResource
    helm_release.nginx-ingress - *terraform.NodeValidatableResource
    helm_release.postgres-ha - *terraform.NodeValidatableResource
    helm_release.prometheus-operator - *terraform.NodeValidatableResource
    helm_release.redis - *terraform.NodeValidatableResource
    helm_release.sentry - *terraform.NodeValidatableResource
    helm_release.sentry-k8s-erros - *terraform.NodeValidatableResource
    helm_release.timescaledb - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.kubernetes (close) - *terraform.graphNodeCloseProvider
    kubernetes_config_map.buildkitd-config - *terraform.NodeValidatableResource
    kubernetes_deployment.buildkitd - *terraform.NodeValidatableResource
    kubernetes_ingress.docker-registry-ingress - *terraform.NodeValidatableResource
    kubernetes_ingress.grafana-ingress - *terraform.NodeValidatableResource
    kubernetes_ingress.rio-ingress - *terraform.NodeValidatableResource
    kubernetes_ingress.sentry-ingress - *terraform.NodeValidatableResource
    kubernetes_namespace.cert-manager - *terraform.NodeValidatableResource
    kubernetes_namespace.docker - *terraform.NodeValidatableResource
    kubernetes_namespace.metrics-server - *terraform.NodeValidatableResource
    kubernetes_namespace.monitoring - *terraform.NodeValidatableResource
    kubernetes_namespace.nginx-ingress - *terraform.NodeValidatableResource
    kubernetes_namespace.postgres-ha - *terraform.NodeValidatableResource
    kubernetes_namespace.redis - *terraform.NodeValidatableResource
    kubernetes_namespace.rio - *terraform.NodeValidatableResource
    kubernetes_namespace.sentry - *terraform.NodeValidatableResource
    kubernetes_namespace.timescale - *terraform.NodeValidatableResource
    kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeValidatableResource
    kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeValidatableResource
    kubernetes_secret.docker-config-json - *terraform.NodeValidatableResource
    kubernetes_secret.docker-registry-auth - *terraform.NodeValidatableResource
    kubernetes_secret.timescale-certificates - *terraform.NodeValidatableResource
    kubernetes_secret.timescale-credentials - *terraform.NodeValidatableResource
    kubernetes_service.buildkitd - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.local (close) - *terraform.graphNodeCloseProvider
    data.local_file.cert_manager_setup - *terraform.NodeValidatableResource
    data.local_file.rio-app-domains - *terraform.NodeValidatableResource
    data.local_file.rio-custom-domain - *terraform.NodeValidatableResource
    data.local_file.rio-yaml - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  provider.null (close) - *terraform.graphNodeCloseProvider
    null_resource.cert-manager-setup - *terraform.NodeValidatableResource
    null_resource.create-timescaledb-setup - *terraform.NodeValidatableResource
    null_resource.rio-app-domains - *terraform.NodeValidatableResource
    null_resource.rio-custom-domain - *terraform.NodeValidatableResource
    null_resource.rio-setup - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager - *terraform.NodeValidatableResource
    data.helm_repository.jetstack - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.cert_manager_version - *terraform.NodeRootVariable
  helm_release.docker-registry - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress - *terraform.NodeValidatableResource
    data.helm_repository.stable - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  helm_release.prometheus-operator - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  helm_release.redis - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
    var.SENTRY_PG_PASS - *terraform.NodeRootVariable
    var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  helm_release.sentry-k8s-erros - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.K8S_DSN - *terraform.NodeRootVariable
  helm_release.timescaledb - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  kubernetes_deployment.buildkitd - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.grafana-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.rio-ingress - *terraform.NodeValidatableResource
    helm_release.cert-manager - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.sentry-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_namespace.cert-manager - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeValidatableResource
    helm_release.cert-manager - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  kubernetes_secret.docker-config-json - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  kubernetes_secret.docker-registry-auth - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  kubernetes_secret.timescale-certificates - *terraform.NodeValidatableResource
    kubernetes_namespace.timescale - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-credentials - *terraform.NodeValidatableResource
    kubernetes_namespace.timescale - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  kubernetes_service.buildkitd - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    data.helm_repository.bitnami - *terraform.NodeValidatableResource
    data.helm_repository.incubator - *terraform.NodeValidatableResource
    data.helm_repository.jetstack - *terraform.NodeValidatableResource
    data.helm_repository.sentry - *terraform.NodeValidatableResource
    data.helm_repository.stable - *terraform.NodeValidatableResource
    data.helm_repository.timescale - *terraform.NodeValidatableResource
    data.local_file.cert_manager_setup - *terraform.NodeValidatableResource
    data.local_file.rio-app-domains - *terraform.NodeValidatableResource
    data.local_file.rio-custom-domain - *terraform.NodeValidatableResource
    data.local_file.rio-yaml - *terraform.NodeValidatableResource
    helm_release.cert-manager - *terraform.NodeValidatableResource
    helm_release.docker-registry - *terraform.NodeValidatableResource
    helm_release.metrics-server - *terraform.NodeValidatableResource
    helm_release.nginx-ingress - *terraform.NodeValidatableResource
    helm_release.postgres-ha - *terraform.NodeValidatableResource
    helm_release.prometheus-operator - *terraform.NodeValidatableResource
    helm_release.redis - *terraform.NodeValidatableResource
    helm_release.sentry - *terraform.NodeValidatableResource
    helm_release.sentry-k8s-erros - *terraform.NodeValidatableResource
    helm_release.timescaledb - *terraform.NodeValidatableResource
    kubernetes_config_map.buildkitd-config - *terraform.NodeValidatableResource
    kubernetes_deployment.buildkitd - *terraform.NodeValidatableResource
    kubernetes_ingress.docker-registry-ingress - *terraform.NodeValidatableResource
    kubernetes_ingress.grafana-ingress - *terraform.NodeValidatableResource
    kubernetes_ingress.rio-ingress - *terraform.NodeValidatableResource
    kubernetes_ingress.sentry-ingress - *terraform.NodeValidatableResource
    kubernetes_namespace.cert-manager - *terraform.NodeValidatableResource
    kubernetes_namespace.docker - *terraform.NodeValidatableResource
    kubernetes_namespace.metrics-server - *terraform.NodeValidatableResource
    kubernetes_namespace.monitoring - *terraform.NodeValidatableResource
    kubernetes_namespace.nginx-ingress - *terraform.NodeValidatableResource
    kubernetes_namespace.postgres-ha - *terraform.NodeValidatableResource
    kubernetes_namespace.redis - *terraform.NodeValidatableResource
    kubernetes_namespace.rio - *terraform.NodeValidatableResource
    kubernetes_namespace.sentry - *terraform.NodeValidatableResource
    kubernetes_namespace.timescale - *terraform.NodeValidatableResource
    kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeValidatableResource
    kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeValidatableResource
    kubernetes_secret.docker-config-json - *terraform.NodeValidatableResource
    kubernetes_secret.docker-registry-auth - *terraform.NodeValidatableResource
    kubernetes_secret.timescale-certificates - *terraform.NodeValidatableResource
    kubernetes_secret.timescale-credentials - *terraform.NodeValidatableResource
    kubernetes_service.buildkitd - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeValidatableResource
    module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    null_resource.cert-manager-setup - *terraform.NodeValidatableResource
    null_resource.create-timescaledb-setup - *terraform.NodeValidatableResource
    null_resource.rio-app-domains - *terraform.NodeValidatableResource
    null_resource.rio-custom-domain - *terraform.NodeValidatableResource
    null_resource.rio-setup - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    provider.kubernetes - *terraform.NodeApplyableProvider
    provider.local - *terraform.NodeApplyableProvider
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
    var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
    var.DO_SPACES_ID - *terraform.NodeRootVariable
    var.DO_SPACES_SECRET - *terraform.NodeRootVariable
    var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
    var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
    var.K8S_DSN - *terraform.NodeRootVariable
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
    var.SENTRY_PG_PASS - *terraform.NodeRootVariable
    var.SENTRY_USER_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
    var.cert_manager_version - *terraform.NodeRootVariable
    var.dish_domain - *terraform.NodeRootVariable
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  module.cluster.provider.digitalocean (close) - *terraform.graphNodeCloseProvider
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
  null_resource.cert-manager-setup - *terraform.NodeValidatableResource
    data.local_file.cert_manager_setup - *terraform.NodeValidatableResource
    helm_release.cert-manager - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup - *terraform.NodeValidatableResource
    helm_release.timescaledb - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains - *terraform.NodeValidatableResource
    data.local_file.rio-app-domains - *terraform.NodeValidatableResource
    null_resource.rio-setup - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain - *terraform.NodeValidatableResource
    data.local_file.rio-custom-domain - *terraform.NodeValidatableResource
    null_resource.rio-setup - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup - *terraform.NodeValidatableResource
    data.local_file.rio-yaml - *terraform.NodeValidatableResource
    helm_release.cert-manager - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  provider.helm - *terraform.NodeApplyableProvider
  provider.helm (close) - *terraform.graphNodeCloseProvider
    data.helm_repository.bitnami - *terraform.NodeValidatableResource
    data.helm_repository.incubator - *terraform.NodeValidatableResource
    data.helm_repository.jetstack - *terraform.NodeValidatableResource
    data.helm_repository.sentry - *terraform.NodeValidatableResource
    data.helm_repository.stable - *terraform.NodeValidatableResource
    data.helm_repository.timescale - *terraform.NodeValidatableResource
    helm_release.cert-manager - *terraform.NodeValidatableResource
    helm_release.docker-registry - *terraform.NodeValidatableResource
    helm_release.metrics-server - *terraform.NodeValidatableResource
    helm_release.nginx-ingress - *terraform.NodeValidatableResource
    helm_release.postgres-ha - *terraform.NodeValidatableResource
    helm_release.prometheus-operator - *terraform.NodeValidatableResource
    helm_release.redis - *terraform.NodeValidatableResource
    helm_release.sentry - *terraform.NodeValidatableResource
    helm_release.sentry-k8s-erros - *terraform.NodeValidatableResource
    helm_release.timescaledb - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.kubernetes (close) - *terraform.graphNodeCloseProvider
    kubernetes_config_map.buildkitd-config - *terraform.NodeValidatableResource
    kubernetes_deployment.buildkitd - *terraform.NodeValidatableResource
    kubernetes_ingress.docker-registry-ingress - *terraform.NodeValidatableResource
    kubernetes_ingress.grafana-ingress - *terraform.NodeValidatableResource
    kubernetes_ingress.rio-ingress - *terraform.NodeValidatableResource
    kubernetes_ingress.sentry-ingress - *terraform.NodeValidatableResource
    kubernetes_namespace.cert-manager - *terraform.NodeValidatableResource
    kubernetes_namespace.docker - *terraform.NodeValidatableResource
    kubernetes_namespace.metrics-server - *terraform.NodeValidatableResource
    kubernetes_namespace.monitoring - *terraform.NodeValidatableResource
    kubernetes_namespace.nginx-ingress - *terraform.NodeValidatableResource
    kubernetes_namespace.postgres-ha - *terraform.NodeValidatableResource
    kubernetes_namespace.redis - *terraform.NodeValidatableResource
    kubernetes_namespace.rio - *terraform.NodeValidatableResource
    kubernetes_namespace.sentry - *terraform.NodeValidatableResource
    kubernetes_namespace.timescale - *terraform.NodeValidatableResource
    kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeValidatableResource
    kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeValidatableResource
    kubernetes_secret.docker-config-json - *terraform.NodeValidatableResource
    kubernetes_secret.docker-registry-auth - *terraform.NodeValidatableResource
    kubernetes_secret.timescale-certificates - *terraform.NodeValidatableResource
    kubernetes_secret.timescale-credentials - *terraform.NodeValidatableResource
    kubernetes_service.buildkitd - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.local (close) - *terraform.graphNodeCloseProvider
    data.local_file.cert_manager_setup - *terraform.NodeValidatableResource
    data.local_file.rio-app-domains - *terraform.NodeValidatableResource
    data.local_file.rio-custom-domain - *terraform.NodeValidatableResource
    data.local_file.rio-yaml - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  provider.null (close) - *terraform.graphNodeCloseProvider
    null_resource.cert-manager-setup - *terraform.NodeValidatableResource
    null_resource.create-timescaledb-setup - *terraform.NodeValidatableResource
    null_resource.rio-app-domains - *terraform.NodeValidatableResource
    null_resource.rio-custom-domain - *terraform.NodeValidatableResource
    null_resource.rio-setup - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    null_resource.cert-manager-setup - *terraform.NodeValidatableResource
    null_resource.create-timescaledb-setup - *terraform.NodeValidatableResource
    null_resource.rio-app-domains - *terraform.NodeValidatableResource
    null_resource.rio-custom-domain - *terraform.NodeValidatableResource
    null_resource.rio-setup - *terraform.NodeValidatableResource
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager - *terraform.NodeValidatableResource
    data.helm_repository.jetstack - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.cert_manager_version - *terraform.NodeRootVariable
  helm_release.docker-registry - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress - *terraform.NodeValidatableResource
    data.helm_repository.stable - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  helm_release.prometheus-operator - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  helm_release.redis - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
    var.SENTRY_PG_PASS - *terraform.NodeRootVariable
    var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  helm_release.sentry-k8s-erros - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.K8S_DSN - *terraform.NodeRootVariable
  helm_release.timescaledb - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  kubernetes_deployment.buildkitd - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.grafana-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.rio-ingress - *terraform.NodeValidatableResource
    helm_release.cert-manager - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.sentry-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_namespace.cert-manager - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeValidatableResource
    helm_release.cert-manager - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  kubernetes_secret.docker-config-json - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  kubernetes_secret.docker-registry-auth - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  kubernetes_secret.timescale-certificates - *terraform.NodeValidatableResource
    kubernetes_namespace.timescale - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-credentials - *terraform.NodeValidatableResource
    kubernetes_namespace.timescale - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  kubernetes_service.buildkitd - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    data.helm_repository.bitnami - *terraform.NodeValidatableResource
    data.helm_repository.incubator - *terraform.NodeValidatableResource
    data.helm_repository.jetstack - *terraform.NodeValidatableResource
    data.helm_repository.sentry - *terraform.NodeValidatableResource
    data.helm_repository.stable - *terraform.NodeValidatableResource
    data.helm_repository.timescale - *terraform.NodeValidatableResource
    data.local_file.cert_manager_setup - *terraform.NodeValidatableResource
    data.local_file.rio-app-domains - *terraform.NodeValidatableResource
    data.local_file.rio-custom-domain - *terraform.NodeValidatableResource
    data.local_file.rio-yaml - *terraform.NodeValidatableResource
    helm_release.cert-manager - *terraform.NodeValidatableResource
    helm_release.docker-registry - *terraform.NodeValidatableResource
    helm_release.metrics-server - *terraform.NodeValidatableResource
    helm_release.nginx-ingress - *terraform.NodeValidatableResource
    helm_release.postgres-ha - *terraform.NodeValidatableResource
    helm_release.prometheus-operator - *terraform.NodeValidatableResource
    helm_release.redis - *terraform.NodeValidatableResource
    helm_release.sentry - *terraform.NodeValidatableResource
    helm_release.sentry-k8s-erros - *terraform.NodeValidatableResource
    helm_release.timescaledb - *terraform.NodeValidatableResource
    kubernetes_config_map.buildkitd-config - *terraform.NodeValidatableResource
    kubernetes_deployment.buildkitd - *terraform.NodeValidatableResource
    kubernetes_ingress.docker-registry-ingress - *terraform.NodeValidatableResource
    kubernetes_ingress.grafana-ingress - *terraform.NodeValidatableResource
    kubernetes_ingress.rio-ingress - *terraform.NodeValidatableResource
    kubernetes_ingress.sentry-ingress - *terraform.NodeValidatableResource
    kubernetes_namespace.cert-manager - *terraform.NodeValidatableResource
    kubernetes_namespace.docker - *terraform.NodeValidatableResource
    kubernetes_namespace.metrics-server - *terraform.NodeValidatableResource
    kubernetes_namespace.monitoring - *terraform.NodeValidatableResource
    kubernetes_namespace.nginx-ingress - *terraform.NodeValidatableResource
    kubernetes_namespace.postgres-ha - *terraform.NodeValidatableResource
    kubernetes_namespace.redis - *terraform.NodeValidatableResource
    kubernetes_namespace.rio - *terraform.NodeValidatableResource
    kubernetes_namespace.sentry - *terraform.NodeValidatableResource
    kubernetes_namespace.timescale - *terraform.NodeValidatableResource
    kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeValidatableResource
    kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeValidatableResource
    kubernetes_secret.docker-config-json - *terraform.NodeValidatableResource
    kubernetes_secret.docker-registry-auth - *terraform.NodeValidatableResource
    kubernetes_secret.timescale-certificates - *terraform.NodeValidatableResource
    kubernetes_secret.timescale-credentials - *terraform.NodeValidatableResource
    kubernetes_service.buildkitd - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeValidatableResource
    module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    null_resource.cert-manager-setup - *terraform.NodeValidatableResource
    null_resource.create-timescaledb-setup - *terraform.NodeValidatableResource
    null_resource.rio-app-domains - *terraform.NodeValidatableResource
    null_resource.rio-custom-domain - *terraform.NodeValidatableResource
    null_resource.rio-setup - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    provider.kubernetes - *terraform.NodeApplyableProvider
    provider.local - *terraform.NodeApplyableProvider
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
    var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
    var.DO_SPACES_ID - *terraform.NodeRootVariable
    var.DO_SPACES_SECRET - *terraform.NodeRootVariable
    var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
    var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
    var.K8S_DSN - *terraform.NodeRootVariable
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
    var.SENTRY_PG_PASS - *terraform.NodeRootVariable
    var.SENTRY_USER_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
    var.cert_manager_version - *terraform.NodeRootVariable
    var.dish_domain - *terraform.NodeRootVariable
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  module.cluster.provider.digitalocean (close) - *terraform.graphNodeCloseProvider
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
  null_resource.cert-manager-setup - *terraform.NodeValidatableResource
    data.local_file.cert_manager_setup - *terraform.NodeValidatableResource
    helm_release.cert-manager - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup - *terraform.NodeValidatableResource
    helm_release.timescaledb - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains - *terraform.NodeValidatableResource
    data.local_file.rio-app-domains - *terraform.NodeValidatableResource
    null_resource.rio-setup - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain - *terraform.NodeValidatableResource
    data.local_file.rio-custom-domain - *terraform.NodeValidatableResource
    null_resource.rio-setup - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup - *terraform.NodeValidatableResource
    data.local_file.rio-yaml - *terraform.NodeValidatableResource
    helm_release.cert-manager - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  provider.helm - *terraform.NodeApplyableProvider
  provider.helm (close) - *terraform.graphNodeCloseProvider
    data.helm_repository.bitnami - *terraform.NodeValidatableResource
    data.helm_repository.incubator - *terraform.NodeValidatableResource
    data.helm_repository.jetstack - *terraform.NodeValidatableResource
    data.helm_repository.sentry - *terraform.NodeValidatableResource
    data.helm_repository.stable - *terraform.NodeValidatableResource
    data.helm_repository.timescale - *terraform.NodeValidatableResource
    helm_release.cert-manager - *terraform.NodeValidatableResource
    helm_release.docker-registry - *terraform.NodeValidatableResource
    helm_release.metrics-server - *terraform.NodeValidatableResource
    helm_release.nginx-ingress - *terraform.NodeValidatableResource
    helm_release.postgres-ha - *terraform.NodeValidatableResource
    helm_release.prometheus-operator - *terraform.NodeValidatableResource
    helm_release.redis - *terraform.NodeValidatableResource
    helm_release.sentry - *terraform.NodeValidatableResource
    helm_release.sentry-k8s-erros - *terraform.NodeValidatableResource
    helm_release.timescaledb - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.kubernetes (close) - *terraform.graphNodeCloseProvider
    kubernetes_config_map.buildkitd-config - *terraform.NodeValidatableResource
    kubernetes_deployment.buildkitd - *terraform.NodeValidatableResource
    kubernetes_ingress.docker-registry-ingress - *terraform.NodeValidatableResource
    kubernetes_ingress.grafana-ingress - *terraform.NodeValidatableResource
    kubernetes_ingress.rio-ingress - *terraform.NodeValidatableResource
    kubernetes_ingress.sentry-ingress - *terraform.NodeValidatableResource
    kubernetes_namespace.cert-manager - *terraform.NodeValidatableResource
    kubernetes_namespace.docker - *terraform.NodeValidatableResource
    kubernetes_namespace.metrics-server - *terraform.NodeValidatableResource
    kubernetes_namespace.monitoring - *terraform.NodeValidatableResource
    kubernetes_namespace.nginx-ingress - *terraform.NodeValidatableResource
    kubernetes_namespace.postgres-ha - *terraform.NodeValidatableResource
    kubernetes_namespace.redis - *terraform.NodeValidatableResource
    kubernetes_namespace.rio - *terraform.NodeValidatableResource
    kubernetes_namespace.sentry - *terraform.NodeValidatableResource
    kubernetes_namespace.timescale - *terraform.NodeValidatableResource
    kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeValidatableResource
    kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeValidatableResource
    kubernetes_secret.docker-config-json - *terraform.NodeValidatableResource
    kubernetes_secret.docker-registry-auth - *terraform.NodeValidatableResource
    kubernetes_secret.timescale-certificates - *terraform.NodeValidatableResource
    kubernetes_secret.timescale-credentials - *terraform.NodeValidatableResource
    kubernetes_service.buildkitd - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.local (close) - *terraform.graphNodeCloseProvider
    data.local_file.cert_manager_setup - *terraform.NodeValidatableResource
    data.local_file.rio-app-domains - *terraform.NodeValidatableResource
    data.local_file.rio-custom-domain - *terraform.NodeValidatableResource
    data.local_file.rio-yaml - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  provider.null (close) - *terraform.graphNodeCloseProvider
    null_resource.cert-manager-setup - *terraform.NodeValidatableResource
    null_resource.create-timescaledb-setup - *terraform.NodeValidatableResource
    null_resource.rio-app-domains - *terraform.NodeValidatableResource
    null_resource.rio-custom-domain - *terraform.NodeValidatableResource
    null_resource.rio-setup - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    null_resource.cert-manager-setup - *terraform.NodeValidatableResource
    null_resource.create-timescaledb-setup - *terraform.NodeValidatableResource
    null_resource.rio-app-domains - *terraform.NodeValidatableResource
    null_resource.rio-custom-domain - *terraform.NodeValidatableResource
    null_resource.rio-setup - *terraform.NodeValidatableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    module.cluster.provider.digitalocean (close) - *terraform.graphNodeCloseProvider
    provider.helm (close) - *terraform.graphNodeCloseProvider
    provider.kubernetes (close) - *terraform.graphNodeCloseProvider
    provider.local (close) - *terraform.graphNodeCloseProvider
    provider.null (close) - *terraform.graphNodeCloseProvider
    provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml - *terraform.NodeValidatableResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager - *terraform.NodeValidatableResource
    data.helm_repository.jetstack - *terraform.NodeValidatableResource
    var.cert_manager_version - *terraform.NodeRootVariable
  helm_release.docker-registry - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress - *terraform.NodeValidatableResource
    data.helm_repository.stable - *terraform.NodeValidatableResource
  helm_release.postgres-ha - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  helm_release.prometheus-operator - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  helm_release.redis - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
    var.SENTRY_PG_PASS - *terraform.NodeRootVariable
    var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  helm_release.sentry-k8s-erros - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.K8S_DSN - *terraform.NodeRootVariable
  helm_release.timescaledb - *terraform.NodeValidatableResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  kubernetes_deployment.buildkitd - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.grafana-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.rio-ingress - *terraform.NodeValidatableResource
    helm_release.cert-manager - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.sentry-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_namespace.cert-manager - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeValidatableResource
    helm_release.cert-manager - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  kubernetes_secret.docker-config-json - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  kubernetes_secret.docker-registry-auth - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  kubernetes_secret.timescale-certificates - *terraform.NodeValidatableResource
    kubernetes_namespace.timescale - *terraform.NodeValidatableResource
  kubernetes_secret.timescale-credentials - *terraform.NodeValidatableResource
    kubernetes_namespace.timescale - *terraform.NodeValidatableResource
    var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  kubernetes_service.buildkitd - *terraform.NodeValidatableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    data.helm_repository.bitnami - *terraform.NodeValidatableResource
    data.helm_repository.incubator - *terraform.NodeValidatableResource
    data.helm_repository.sentry - *terraform.NodeValidatableResource
    data.helm_repository.timescale - *terraform.NodeValidatableResource
    helm_release.docker-registry - *terraform.NodeValidatableResource
    helm_release.metrics-server - *terraform.NodeValidatableResource
    helm_release.nginx-ingress - *terraform.NodeValidatableResource
    helm_release.postgres-ha - *terraform.NodeValidatableResource
    helm_release.prometheus-operator - *terraform.NodeValidatableResource
    helm_release.redis - *terraform.NodeValidatableResource
    helm_release.sentry - *terraform.NodeValidatableResource
    helm_release.sentry-k8s-erros - *terraform.NodeValidatableResource
    kubernetes_config_map.buildkitd-config - *terraform.NodeValidatableResource
    kubernetes_deployment.buildkitd - *terraform.NodeValidatableResource
    kubernetes_ingress.docker-registry-ingress - *terraform.NodeValidatableResource
    kubernetes_ingress.grafana-ingress - *terraform.NodeValidatableResource
    kubernetes_ingress.rio-ingress - *terraform.NodeValidatableResource
    kubernetes_ingress.sentry-ingress - *terraform.NodeValidatableResource
    kubernetes_namespace.cert-manager - *terraform.NodeValidatableResource
    kubernetes_namespace.docker - *terraform.NodeValidatableResource
    kubernetes_namespace.metrics-server - *terraform.NodeValidatableResource
    kubernetes_namespace.monitoring - *terraform.NodeValidatableResource
    kubernetes_namespace.nginx-ingress - *terraform.NodeValidatableResource
    kubernetes_namespace.postgres-ha - *terraform.NodeValidatableResource
    kubernetes_namespace.redis - *terraform.NodeValidatableResource
    kubernetes_namespace.rio - *terraform.NodeValidatableResource
    kubernetes_namespace.sentry - *terraform.NodeValidatableResource
    kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeValidatableResource
    kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeValidatableResource
    kubernetes_secret.docker-config-json - *terraform.NodeValidatableResource
    kubernetes_secret.docker-registry-auth - *terraform.NodeValidatableResource
    kubernetes_secret.timescale-certificates - *terraform.NodeValidatableResource
    kubernetes_secret.timescale-credentials - *terraform.NodeValidatableResource
    kubernetes_service.buildkitd - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeValidatableResource
    module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
    null_resource.cert-manager-setup - *terraform.NodeValidatableResource
    null_resource.create-timescaledb-setup - *terraform.NodeValidatableResource
    null_resource.rio-app-domains - *terraform.NodeValidatableResource
    null_resource.rio-custom-domain - *terraform.NodeValidatableResource
    var.DO_SPACES_ID - *terraform.NodeRootVariable
    var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeValidatableResource
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  module.cluster.provider.digitalocean (close) - *terraform.graphNodeCloseProvider
    module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeValidatableResource
    module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeValidatableResource
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
  null_resource.cert-manager-setup - *terraform.NodeValidatableResource
    data.local_file.cert_manager_setup - *terraform.NodeValidatableResource
    helm_release.cert-manager - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup - *terraform.NodeValidatableResource
    helm_release.timescaledb - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains - *terraform.NodeValidatableResource
    data.local_file.rio-app-domains - *terraform.NodeValidatableResource
    null_resource.rio-setup - *terraform.NodeValidatableResource
  null_resource.rio-custom-domain - *terraform.NodeValidatableResource
    data.local_file.rio-custom-domain - *terraform.NodeValidatableResource
    null_resource.rio-setup - *terraform.NodeValidatableResource
  null_resource.rio-setup - *terraform.NodeValidatableResource
    data.local_file.rio-yaml - *terraform.NodeValidatableResource
    helm_release.cert-manager - *terraform.NodeValidatableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  provider.helm - *terraform.NodeApplyableProvider
  provider.helm (close) - *terraform.graphNodeCloseProvider
    data.helm_repository.bitnami - *terraform.NodeValidatableResource
    data.helm_repository.incubator - *terraform.NodeValidatableResource
    data.helm_repository.sentry - *terraform.NodeValidatableResource
    data.helm_repository.timescale - *terraform.NodeValidatableResource
    helm_release.cert-manager - *terraform.NodeValidatableResource
    helm_release.docker-registry - *terraform.NodeValidatableResource
    helm_release.metrics-server - *terraform.NodeValidatableResource
    helm_release.nginx-ingress - *terraform.NodeValidatableResource
    helm_release.postgres-ha - *terraform.NodeValidatableResource
    helm_release.prometheus-operator - *terraform.NodeValidatableResource
    helm_release.redis - *terraform.NodeValidatableResource
    helm_release.sentry - *terraform.NodeValidatableResource
    helm_release.sentry-k8s-erros - *terraform.NodeValidatableResource
    helm_release.timescaledb - *terraform.NodeValidatableResource
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.kubernetes (close) - *terraform.graphNodeCloseProvider
    kubernetes_config_map.buildkitd-config - *terraform.NodeValidatableResource
    kubernetes_deployment.buildkitd - *terraform.NodeValidatableResource
    kubernetes_ingress.docker-registry-ingress - *terraform.NodeValidatableResource
    kubernetes_ingress.grafana-ingress - *terraform.NodeValidatableResource
    kubernetes_ingress.rio-ingress - *terraform.NodeValidatableResource
    kubernetes_ingress.sentry-ingress - *terraform.NodeValidatableResource
    kubernetes_namespace.cert-manager - *terraform.NodeValidatableResource
    kubernetes_namespace.docker - *terraform.NodeValidatableResource
    kubernetes_namespace.metrics-server - *terraform.NodeValidatableResource
    kubernetes_namespace.monitoring - *terraform.NodeValidatableResource
    kubernetes_namespace.nginx-ingress - *terraform.NodeValidatableResource
    kubernetes_namespace.postgres-ha - *terraform.NodeValidatableResource
    kubernetes_namespace.redis - *terraform.NodeValidatableResource
    kubernetes_namespace.rio - *terraform.NodeValidatableResource
    kubernetes_namespace.sentry - *terraform.NodeValidatableResource
    kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeValidatableResource
    kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeValidatableResource
    kubernetes_secret.docker-config-json - *terraform.NodeValidatableResource
    kubernetes_secret.docker-registry-auth - *terraform.NodeValidatableResource
    kubernetes_secret.timescale-certificates - *terraform.NodeValidatableResource
    kubernetes_secret.timescale-credentials - *terraform.NodeValidatableResource
    kubernetes_service.buildkitd - *terraform.NodeValidatableResource
  provider.local - *terraform.NodeApplyableProvider
  provider.local (close) - *terraform.graphNodeCloseProvider
    data.local_file.cert_manager_setup - *terraform.NodeValidatableResource
    data.local_file.rio-app-domains - *terraform.NodeValidatableResource
    data.local_file.rio-custom-domain - *terraform.NodeValidatableResource
    data.local_file.rio-yaml - *terraform.NodeValidatableResource
  provider.null - *terraform.NodeApplyableProvider
  provider.null (close) - *terraform.graphNodeCloseProvider
    null_resource.cert-manager-setup - *terraform.NodeValidatableResource
    null_resource.create-timescaledb-setup - *terraform.NodeValidatableResource
    null_resource.rio-app-domains - *terraform.NodeValidatableResource
    null_resource.rio-custom-domain - *terraform.NodeValidatableResource
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    null_resource.cert-manager-setup - *terraform.NodeValidatableResource
    null_resource.create-timescaledb-setup - *terraform.NodeValidatableResource
    null_resource.rio-app-domains - *terraform.NodeValidatableResource
    null_resource.rio-custom-domain - *terraform.NodeValidatableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    module.cluster.provider.digitalocean (close) - *terraform.graphNodeCloseProvider
    provider.helm (close) - *terraform.graphNodeCloseProvider
    provider.kubernetes (close) - *terraform.graphNodeCloseProvider
    provider.local (close) - *terraform.graphNodeCloseProvider
    provider.null (close) - *terraform.graphNodeCloseProvider
    provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:12 [DEBUG] Starting graph walk: walkValidate
2020/08/09 19:26:12 [TRACE] dag/walk: updating graph
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.redis"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "null_resource.rio-custom-domain"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_ingress.docker-registry-ingress"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "provider.helm (close)"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "provider.local"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.TIMESCALE_SU_PASS"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.SENTRY_USER_PASS"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.CLOUDFLARE_DNS_API_TOKEN"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "module.cluster.var.DO_DISH_KEY"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "provisioner.local-exec (close)"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "provider.null"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.DOCKER_CONFIG_JSON"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.SENTRY_PG_PASS"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "helm_release.docker-registry"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "null_resource.rio-setup"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "provider.null (close)"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.GRAFANA_PASSWORD"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.sentry"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_deployment.buildkitd"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "data.local_file.rio-app-domains"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_secret.timescale-certificates"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "module.cluster.digitalocean_kubernetes_cluster.dish"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.TIMESCALE_REPLICATION_PASS"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "root"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "helm_release.nginx-ingress"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_ingress.sentry-ingress"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_secret.docker-registry-auth"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "data.local_file.rio-custom-domain"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "data.helm_repository.timescale"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.nginx-ingress"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.monitoring"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "helm_release.sentry-k8s-erros"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "module.cluster.provider.digitalocean"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "data.helm_repository.stable"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "data.helm_repository.incubator"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.DO_SPACES_ID"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "helm_release.timescaledb"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "helm_release.postgres-ha"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.K8S_DSN"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "provisioner.local-exec"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "null_resource.rio-app-domains"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "module.cluster.digitalocean_kubernetes_node_pool.ancillary"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "data.helm_repository.bitnami"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.postgres-ha"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.POSTGRES_REPMGR_PASSWORD"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_persistent_volume_claim.image-proxy"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "helm_release.cert-manager"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.dish_domain"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "provider.helm"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "helm_release.sentry"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "module.cluster.digitalocean_kubernetes_node_pool.ci"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.metrics-server"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "module.cluster.provider.digitalocean (close)"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.TIMESCALE_ADMIN_PASS"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_service.buildkitd"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_config_map.buildkitd-config"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.DOCKER_REGISTRY_HTTP_AUTH"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.DO_DISH_KEY"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_ingress.rio-ingress"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.rio"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "helm_release.prometheus-operator"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "helm_release.metrics-server"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "null_resource.create-timescaledb-setup"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.cert-manager"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.cert_manager_version"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "data.helm_repository.jetstack"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_secret.timescale-credentials"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "data.helm_repository.sentry"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "provider.local (close)"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.GMAIL_APP_PASSWORD"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_secret.cloudflare-dns-api-token"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "data.local_file.cert_manager_setup"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "module.cluster.output.cluster-id"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "module.cluster.digitalocean_kubernetes_node_pool.workers"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "data.local_file.rio-yaml"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.docker"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "helm_release.redis"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.timescale"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.POSTGRES_PASSWORD"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_ingress.grafana-ingress"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "provider.kubernetes (close)"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.DO_SPACES_SECRET"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_secret.docker-config-json"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "null_resource.cert-manager-setup"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.redis"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_namespace.timescale" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "root" waiting on "provider.local (close)"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "helm_release.redis"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "data.local_file.rio-app-domains" waiting on "provider.local"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_secret.cloudflare-dns-api-token"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_namespace.docker"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "module.cluster.output.cluster-id" waiting on "module.cluster.digitalocean_kubernetes_cluster.dish"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "null_resource.rio-app-domains" waiting on "data.local_file.rio-app-domains"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_namespace.postgres-ha"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.DO_SPACES_ID"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_namespace.monitoring"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.cert-manager"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_namespace.redis"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_namespace.sentry" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "data.local_file.rio-yaml" waiting on "provider.local"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provisioner.local-exec (close)" waiting on "null_resource.rio-app-domains"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_secret.timescale-certificates"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "null_resource.cert-manager-setup" waiting on "provisioner.local-exec"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_ingress.rio-ingress" waiting on "var.dish_domain"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.metrics-server"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "data.helm_repository.jetstack" waiting on "provider.helm"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "data.helm_repository.bitnami"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "null_resource.rio-app-domains"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_namespace.rio"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "null_resource.rio-setup" waiting on "helm_release.cert-manager"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_secret.docker-registry-auth" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_secret.timescale-credentials" waiting on "kubernetes_namespace.timescale"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_ingress.grafana-ingress"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.redis" waiting on "provider.helm"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.nginx-ingress" waiting on "data.helm_repository.stable"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "module.cluster.provider.digitalocean (close)" waiting on "module.cluster.digitalocean_kubernetes_node_pool.workers"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_config_map.buildkitd-config"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.nginx-ingress"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.null (close)" waiting on "null_resource.cert-manager-setup"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "data.helm_repository.bitnami" waiting on "provider.helm"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "root" waiting on "provider.null (close)"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_namespace.nginx-ingress" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.nginx-ingress"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_config_map.buildkitd-config"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_ingress.sentry-ingress"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.sentry-k8s-erros"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "root" waiting on "provisioner.local-exec (close)"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "null_resource.cert-manager-setup" waiting on "helm_release.cert-manager"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.timescaledb"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_secret.docker-registry-auth" waiting on "var.DOCKER_REGISTRY_HTTP_AUTH"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "helm_release.postgres-ha"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_secret.docker-config-json"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.local (close)" waiting on "data.local_file.rio-app-domains"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_namespace.metrics-server" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provisioner.local-exec (close)" waiting on "null_resource.create-timescaledb-setup"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_ingress.docker-registry-ingress"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.prometheus-operator" waiting on "provider.helm"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.prometheus-operator"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "null_resource.cert-manager-setup"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "module.cluster.var.DO_DISH_KEY" waiting on "var.DO_DISH_KEY"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_service.buildkitd" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "data.helm_repository.timescale"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_namespace.nginx-ingress"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_ingress.grafana-ingress"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.cluster.digitalocean_kubernetes_node_pool.ci"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "data.helm_repository.bitnami"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_config_map.buildkitd-config" waiting on "var.DOCKER_CONFIG_JSON"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "data.helm_repository.timescale"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.null (close)" waiting on "null_resource.rio-app-domains"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_ingress.docker-registry-ingress" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "null_resource.rio-custom-domain"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_ingress.sentry-ingress" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "data.helm_repository.stable" waiting on "provider.helm"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "null_resource.cert-manager-setup" waiting on "provider.null"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.sentry-k8s-erros" waiting on "var.K8S_DSN"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.postgres-ha"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.postgres-ha" waiting on "var.POSTGRES_PASSWORD"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "null_resource.create-timescaledb-setup"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.docker"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.sentry" waiting on "var.GMAIL_APP_PASSWORD"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.local (close)" waiting on "data.local_file.cert_manager_setup"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_namespace.redis" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.docker-registry" waiting on "provider.helm"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_deployment.buildkitd"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_secret.timescale-credentials" waiting on "var.TIMESCALE_SU_PASS"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_namespace.monitoring" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_namespace.rio" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_secret.timescale-certificates"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.local (close)" waiting on "data.local_file.rio-custom-domain"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_namespace.cert-manager" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_secret.cloudflare-dns-api-token" waiting on "var.CLOUDFLARE_DNS_API_TOKEN"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.DO_SPACES_SECRET"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_ingress.docker-registry-ingress" waiting on "var.dish_domain"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "null_resource.create-timescaledb-setup" waiting on "helm_release.timescaledb"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.monitoring"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.redis"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_ingress.sentry-ingress" waiting on "var.dish_domain"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "data.local_file.rio-custom-domain" waiting on "provider.local"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.cert-manager"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_secret.timescale-certificates" waiting on "kubernetes_namespace.timescale"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.cert-manager" waiting on "var.cert_manager_version"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "data.helm_repository.sentry" waiting on "provider.helm"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.cluster.digitalocean_kubernetes_node_pool.ancillary"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_ingress.rio-ingress"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_secret.docker-config-json" waiting on "var.DOCKER_CONFIG_JSON"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "null_resource.create-timescaledb-setup" waiting on "provider.null"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_namespace.cert-manager"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.cert-manager" waiting on "data.helm_repository.jetstack"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "module.cluster.digitalocean_kubernetes_node_pool.workers" waiting on "module.cluster.digitalocean_kubernetes_cluster.dish"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_secret.docker-config-json" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_ingress.grafana-ingress" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_secret.docker-config-json"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_secret.timescale-credentials"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_ingress.sentry-ingress"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "helm_release.docker-registry"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "helm_release.sentry"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "data.helm_repository.incubator"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_namespace.docker" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provisioner.local-exec (close)" waiting on "null_resource.rio-custom-domain"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_secret.docker-registry-auth"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.cluster.output.cluster-id"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.timescaledb" waiting on "provider.helm"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "module.cluster.digitalocean_kubernetes_node_pool.ancillary" waiting on "module.cluster.digitalocean_kubernetes_cluster.dish"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.sentry"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.sentry"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_secret.cloudflare-dns-api-token"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_deployment.buildkitd"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_secret.timescale-credentials"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "module.cluster.provider.digitalocean (close)" waiting on "module.cluster.digitalocean_kubernetes_node_pool.ancillary"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "helm_release.sentry-k8s-erros"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "module.cluster.digitalocean_kubernetes_cluster.dish" waiting on "module.cluster.provider.digitalocean"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "root" waiting on "provider.helm (close)"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "null_resource.rio-app-domains" waiting on "null_resource.rio-setup"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.null (close)" waiting on "null_resource.rio-custom-domain"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_service.buildkitd"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.local (close)" waiting on "data.local_file.rio-yaml"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "helm_release.nginx-ingress"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "null_resource.cert-manager-setup" waiting on "data.local_file.cert_manager_setup"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "helm_release.prometheus-operator"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "module.cluster.digitalocean_kubernetes_node_pool.ci" waiting on "module.cluster.digitalocean_kubernetes_cluster.dish"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_namespace.postgres-ha" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "data.local_file.cert_manager_setup" waiting on "provider.local"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provisioner.local-exec (close)" waiting on "null_resource.cert-manager-setup"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "data.helm_repository.sentry"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_secret.docker-registry-auth"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.null (close)" waiting on "null_resource.create-timescaledb-setup"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_namespace.metrics-server"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.postgres-ha"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.rio"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.sentry-k8s-erros" waiting on "provider.helm"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_ingress.rio-ingress" waiting on "helm_release.cert-manager"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "root" waiting on "provider.kubernetes (close)"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.docker-registry"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "data.helm_repository.incubator" waiting on "provider.helm"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_secret.cloudflare-dns-api-token" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "module.cluster.provider.digitalocean (close)" waiting on "module.cluster.digitalocean_kubernetes_node_pool.ci"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_deployment.buildkitd" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_ingress.rio-ingress" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.sentry" waiting on "var.SENTRY_USER_PASS"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "helm_release.metrics-server"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_config_map.buildkitd-config" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "module.cluster.provider.digitalocean" waiting on "module.cluster.var.DO_DISH_KEY"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "null_resource.rio-setup" waiting on "data.local_file.rio-yaml"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "root" waiting on "module.cluster.provider.digitalocean (close)"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_namespace.sentry"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.cluster.digitalocean_kubernetes_node_pool.workers"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_service.buildkitd"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.postgres-ha" waiting on "provider.helm"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "data.helm_repository.timescale" waiting on "provider.helm"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_ingress.grafana-ingress" waiting on "var.dish_domain"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_persistent_volume_claim.image-proxy" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "null_resource.rio-custom-domain" waiting on "data.local_file.rio-custom-domain"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "null_resource.rio-setup" waiting on "provider.null"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.postgres-ha" waiting on "var.POSTGRES_REPMGR_PASSWORD"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_ingress.docker-registry-ingress"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "null_resource.create-timescaledb-setup" waiting on "provisioner.local-exec"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.prometheus-operator" waiting on "var.GRAFANA_PASSWORD"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_persistent_volume_claim.image-proxy"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_secret.cloudflare-dns-api-token" waiting on "helm_release.cert-manager"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "null_resource.rio-custom-domain" waiting on "null_resource.rio-setup"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_secret.timescale-credentials" waiting on "var.TIMESCALE_REPLICATION_PASS"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "null_resource.rio-setup" waiting on "provisioner.local-exec"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "data.helm_repository.sentry"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.sentry" waiting on "var.SENTRY_PG_PASS"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_persistent_volume_claim.image-proxy"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.metrics-server" waiting on "provider.helm"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.metrics-server"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_secret.timescale-credentials" waiting on "var.TIMESCALE_ADMIN_PASS"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.sentry" waiting on "provider.helm"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "data.helm_repository.incubator"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_ingress.rio-ingress"
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_secret.cloudflare-dns-api-token", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "helm_release.cert-manager", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "helm_release.timescaledb", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "data.local_file.rio-app-domains", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "helm_release.prometheus-operator", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "module.cluster.var.DO_DISH_KEY", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_secret.timescale-certificates", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "helm_release.metrics-server", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_ingress.docker-registry-ingress", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "helm_release.sentry", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "helm_release.sentry-k8s-erros", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "helm_release.docker-registry", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "data.helm_repository.timescale", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "provider.kubernetes (close)", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "module.cluster.output.cluster-id", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.metrics-server", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.monitoring", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "data.local_file.rio-custom-domain", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.postgres-ha", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "null_resource.rio-app-domains", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.sentry", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_ingress.rio-ingress", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.nginx-ingress", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.rio", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "data.helm_repository.sentry", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_ingress.sentry-ingress", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "helm_release.postgres-ha", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.redis", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "module.cluster.provider.digitalocean (close)", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "data.helm_repository.bitnami", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_service.buildkitd", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "data.helm_repository.stable", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.cert-manager", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "data.local_file.cert_manager_setup", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "helm_release.redis", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "helm_release.nginx-ingress", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "provider.null (close)", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_deployment.buildkitd", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.timescale", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "null_resource.create-timescaledb-setup", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "module.cluster.digitalocean_kubernetes_node_pool.ci", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "provisioner.local-exec (close)", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "module.cluster.digitalocean_kubernetes_node_pool.workers", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "null_resource.rio-custom-domain", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "null_resource.rio-setup", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "data.helm_repository.incubator", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_persistent_volume_claim.image-proxy", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_config_map.buildkitd-config", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "null_resource.cert-manager-setup", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "data.helm_repository.jetstack", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_secret.timescale-credentials", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "module.cluster.digitalocean_kubernetes_node_pool.ancillary", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "data.local_file.rio-yaml", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_secret.docker-registry-auth", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.docker", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_ingress.grafana-ingress", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "module.cluster.digitalocean_kubernetes_cluster.dish", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "module.cluster.provider.digitalocean", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "provider.helm (close)", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "provider.local (close)", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_secret.docker-config-json", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.TIMESCALE_ADMIN_PASS"
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.POSTGRES_PASSWORD"
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "provider.helm"
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.DO_SPACES_ID"
2020/08/09 19:26:12 [TRACE] vertex "var.POSTGRES_PASSWORD": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.K8S_DSN"
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.TIMESCALE_SU_PASS"
2020/08/09 19:26:12 [TRACE] vertex "var.K8S_DSN": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] vertex "var.POSTGRES_PASSWORD": evaluating
2020/08/09 19:26:12 [TRACE] vertex "var.DO_SPACES_ID": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] vertex "var.K8S_DSN": evaluating
2020/08/09 19:26:12 [TRACE] vertex "var.TIMESCALE_SU_PASS": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] vertex "var.DO_SPACES_ID": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: var.POSTGRES_PASSWORD
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: var.DO_SPACES_ID
2020/08/09 19:26:12 [TRACE] vertex "var.TIMESCALE_SU_PASS": evaluating
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.POSTGRES_REPMGR_PASSWORD"
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.DO_DISH_KEY"
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: var.TIMESCALE_SU_PASS
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "provisioner.local-exec"
2020/08/09 19:26:12 [TRACE] vertex "var.DO_DISH_KEY": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] vertex "provisioner.local-exec": starting visit (*terraform.NodeProvisioner)
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: var.TIMESCALE_SU_PASS
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.dish_domain"
2020/08/09 19:26:12 [TRACE] vertex "provider.kubernetes": starting visit (*terraform.NodeApplyableProvider)
2020/08/09 19:26:12 [TRACE] vertex "var.TIMESCALE_SU_PASS": visit complete
2020/08/09 19:26:12 [TRACE] vertex "var.dish_domain": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: var.K8S_DSN
2020/08/09 19:26:12 [TRACE] vertex "var.dish_domain": evaluating
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] vertex "provider.helm": starting visit (*terraform.NodeApplyableProvider)
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: var.K8S_DSN
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] vertex "var.K8S_DSN": visit complete
2020/08/09 19:26:12 [TRACE] vertex "provider.helm": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: var.DO_SPACES_ID
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.cert_manager_version"
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: provider.helm
2020/08/09 19:26:12 [TRACE] vertex "var.cert_manager_version": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] vertex "var.DO_SPACES_ID": visit complete
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.DOCKER_CONFIG_JSON"
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] vertex "var.DOCKER_CONFIG_JSON": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.GMAIL_APP_PASSWORD"
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/08/09 19:26:12 [TRACE] vertex "var.DOCKER_CONFIG_JSON": evaluating
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.SENTRY_PG_PASS"
2020/08/09 19:26:12 [TRACE] vertex "var.GMAIL_APP_PASSWORD": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: var.DOCKER_CONFIG_JSON
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] vertex "var.GMAIL_APP_PASSWORD": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: var.DOCKER_CONFIG_JSON
2020/08/09 19:26:12 [TRACE] vertex "provider.kubernetes": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: var.GMAIL_APP_PASSWORD
2020/08/09 19:26:12 [TRACE] vertex "var.DOCKER_CONFIG_JSON": visit complete
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: provider.kubernetes
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "provider.null"
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: var.GMAIL_APP_PASSWORD
2020/08/09 19:26:12 [TRACE] vertex "provider.null": starting visit (*terraform.NodeApplyableProvider)
2020/08/09 19:26:12 [TRACE] vertex "var.cert_manager_version": evaluating
2020/08/09 19:26:12 [TRACE] vertex "var.GMAIL_APP_PASSWORD": visit complete
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.TIMESCALE_REPLICATION_PASS"
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: var.POSTGRES_PASSWORD
2020/08/09 19:26:12 [TRACE] vertex "var.TIMESCALE_ADMIN_PASS": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] vertex "var.POSTGRES_PASSWORD": visit complete
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.DO_SPACES_SECRET"
2020/08/09 19:26:12 [TRACE] vertex "var.TIMESCALE_ADMIN_PASS": evaluating
2020/08/09 19:26:12 [TRACE] vertex "var.DO_SPACES_SECRET": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] vertex "provider.null": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: var.TIMESCALE_ADMIN_PASS
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: provider.null
2020/08/09 19:26:12 [TRACE] vertex "var.DO_SPACES_SECRET": evaluating
2020-08-09T19:26:12.068+0300 [INFO]  plugin: configuring client automatic mTLS
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: var.DO_SPACES_SECRET
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: var.TIMESCALE_ADMIN_PASS
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "provider.local"
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] vertex "var.TIMESCALE_ADMIN_PASS": visit complete
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: var.DO_SPACES_SECRET
2020/08/09 19:26:12 [TRACE] vertex "var.DO_SPACES_SECRET": visit complete
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: var.dish_domain
2020/08/09 19:26:12 [TRACE] vertex "provider.local": starting visit (*terraform.NodeApplyableProvider)
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: var.dish_domain
2020/08/09 19:26:12 [TRACE] vertex "provider.local": evaluating
2020/08/09 19:26:12 [TRACE] vertex "var.dish_domain": visit complete
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: provider.local
2020/08/09 19:26:12 [TRACE] vertex "var.TIMESCALE_REPLICATION_PASS": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/08/09 19:26:12 [TRACE] vertex "var.TIMESCALE_REPLICATION_PASS": evaluating
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.SENTRY_USER_PASS"
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: var.TIMESCALE_REPLICATION_PASS
2020/08/09 19:26:12 [TRACE] vertex "provisioner.local-exec": evaluating
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.DOCKER_REGISTRY_HTTP_AUTH"
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: var.TIMESCALE_REPLICATION_PASS
2020/08/09 19:26:12 [TRACE] vertex "var.DOCKER_REGISTRY_HTTP_AUTH": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] vertex "var.TIMESCALE_REPLICATION_PASS": visit complete
2020/08/09 19:26:12 [TRACE] vertex "var.DO_DISH_KEY": evaluating
2020/08/09 19:26:12 [TRACE] vertex "var.DOCKER_REGISTRY_HTTP_AUTH": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: var.DO_DISH_KEY
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: provisioner.local-exec
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: var.DO_DISH_KEY
2020/08/09 19:26:12 [TRACE] vertex "var.DO_DISH_KEY": visit complete
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalInitProvisioner
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "module.cluster.var.DO_DISH_KEY"
2020/08/09 19:26:12 [TRACE] vertex "module.cluster.var.DO_DISH_KEY": starting visit (*terraform.NodeApplyableModuleVariable)
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.GRAFANA_PASSWORD"
2020/08/09 19:26:12 [TRACE] vertex "module.cluster.var.DO_DISH_KEY": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: module.cluster.var.DO_DISH_KEY
2020/08/09 19:26:12 [TRACE] vertex "var.GRAFANA_PASSWORD": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: var.DOCKER_REGISTRY_HTTP_AUTH
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: var.DOCKER_REGISTRY_HTTP_AUTH
2020/08/09 19:26:12 [TRACE] vertex "var.DOCKER_REGISTRY_HTTP_AUTH": visit complete
2020/08/09 19:26:12 [TRACE] vertex "var.POSTGRES_REPMGR_PASSWORD": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] vertex "var.POSTGRES_REPMGR_PASSWORD": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: var.POSTGRES_REPMGR_PASSWORD
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.CLOUDFLARE_DNS_API_TOKEN"
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: var.POSTGRES_REPMGR_PASSWORD
2020/08/09 19:26:12 [TRACE] vertex "var.CLOUDFLARE_DNS_API_TOKEN": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] vertex "var.POSTGRES_REPMGR_PASSWORD": visit complete
2020/08/09 19:26:12 [TRACE] vertex "var.CLOUDFLARE_DNS_API_TOKEN": evaluating
2020/08/09 19:26:12 [TRACE] vertex "var.SENTRY_PG_PASS": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: var.CLOUDFLARE_DNS_API_TOKEN
2020/08/09 19:26:12 [TRACE] vertex "var.SENTRY_PG_PASS": evaluating
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: var.SENTRY_PG_PASS
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: var.CLOUDFLARE_DNS_API_TOKEN
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] vertex "var.CLOUDFLARE_DNS_API_TOKEN": visit complete
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: var.SENTRY_PG_PASS
2020/08/09 19:26:12 [TRACE] vertex "var.SENTRY_PG_PASS": visit complete
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: var.cert_manager_version
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020-08-09T19:26:12.069+0300 [DEBUG] plugin: starting plugin: path=/usr/bin/terraform args=[/usr/bin/terraform, internal-plugin, provisioner, local-exec]
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: var.cert_manager_version
2020/08/09 19:26:12 [TRACE] vertex "var.cert_manager_version": visit complete
2020/08/09 19:26:12 [TRACE] vertex "var.SENTRY_USER_PASS": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] vertex "var.SENTRY_USER_PASS": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: var.SENTRY_USER_PASS
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: var.SENTRY_USER_PASS
2020/08/09 19:26:12 [TRACE] vertex "var.SENTRY_USER_PASS": visit complete
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.evalVariableValidations
2020/08/09 19:26:12 [TRACE] vertex "var.GRAFANA_PASSWORD": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: var.GRAFANA_PASSWORD
2020/08/09 19:26:12 [TRACE] evalVariableValidations: not active for module.cluster.var.DO_DISH_KEY, so skipping
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: module.cluster.var.DO_DISH_KEY
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: var.GRAFANA_PASSWORD
2020/08/09 19:26:12 [TRACE] vertex "module.cluster.var.DO_DISH_KEY": visit complete
2020/08/09 19:26:12 [TRACE] vertex "var.GRAFANA_PASSWORD": visit complete
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "module.cluster.provider.digitalocean"
2020/08/09 19:26:12 [TRACE] vertex "module.cluster.provider.digitalocean": starting visit (*terraform.NodeApplyableProvider)
2020/08/09 19:26:12 [TRACE] vertex "module.cluster.provider.digitalocean": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: module.cluster.provider.digitalocean
2020/08/09 19:26:12 [TRACE] module.cluster: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] module.cluster: eval: *terraform.EvalInitProvider
2020-08-09T19:26:12.069+0300 [DEBUG] plugin: plugin started: path=/usr/bin/terraform pid=4110829
2020-08-09T19:26:12.069+0300 [DEBUG] plugin: waiting for RPC address: path=/usr/bin/terraform
2020-08-09T19:26:12.087+0300 [DEBUG] plugin: starting plugin: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-helm_v1.2.4_x4 args=[/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-helm_v1.2.4_x4]
2020-08-09T19:26:12.087+0300 [DEBUG] plugin: plugin started: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-helm_v1.2.4_x4 pid=4110840
2020-08-09T19:26:12.087+0300 [DEBUG] plugin: waiting for RPC address: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-helm_v1.2.4_x4
2020-08-09T19:26:12.103+0300 [DEBUG] plugin: using plugin: version=5
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: provisioner.local-exec
2020/08/09 19:26:12 [TRACE] vertex "provisioner.local-exec": visit complete
2020-08-09T19:26:12.103+0300 [TRACE] plugin.stdio: waiting for stdio data
2020-08-09T19:26:12.113+0300 [INFO]  plugin.terraform-provider-helm_v1.2.4_x4: configuring server automatic mTLS: timestamp=2020-08-09T19:26:12.113+0300
2020-08-09T19:26:12.131+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: plugin address: address=/tmp/plugin386357697 network=unix timestamp=2020-08-09T19:26:12.131+0300
2020-08-09T19:26:12.131+0300 [DEBUG] plugin: using plugin: version=5
2020/08/09 19:26:12 [TRACE] BuiltinEvalContext: Initialized "helm" provider for provider.helm
2020/08/09 19:26:12 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2020/08/09 19:26:12 [TRACE] buildProviderConfig for provider.helm: no configuration at all
2020/08/09 19:26:12 [TRACE] GRPCProvider: GetSchema
2020-08-09T19:26:12.164+0300 [TRACE] plugin.stdio: waiting for stdio data
2020-08-09T19:26:12.164+0300 [INFO]  plugin: configuring client automatic mTLS
2020-08-09T19:26:12.165+0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unimplemented desc = unknown service plugin.GRPCStdio"
2020/08/09 19:26:12 [TRACE] GRPCProvider: PrepareProviderConfig
2020/08/09 19:26:12 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:12 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: provider.helm
2020/08/09 19:26:12 [TRACE] vertex "provider.helm": visit complete
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "helm_release.timescaledb"
2020/08/09 19:26:12 [TRACE] vertex "helm_release.timescaledb": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] vertex "helm_release.timescaledb": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: helm_release.timescaledb
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "data.helm_repository.bitnami"
2020/08/09 19:26:12 [TRACE] vertex "data.helm_repository.bitnami": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "helm_release.sentry"
2020/08/09 19:26:12 [TRACE] vertex "helm_release.sentry": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "data.helm_repository.timescale"
2020/08/09 19:26:12 [TRACE] vertex "helm_release.sentry": evaluating
2020/08/09 19:26:12 [TRACE] vertex "data.helm_repository.timescale": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: helm_release.sentry
2020/08/09 19:26:12 [TRACE] vertex "data.helm_repository.timescale": evaluating
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: data.helm_repository.timescale
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "data.helm_repository.sentry"
2020/08/09 19:26:12 [TRACE] vertex "data.helm_repository.sentry": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "helm_release.docker-registry"
2020/08/09 19:26:12 [TRACE] vertex "data.helm_repository.sentry": evaluating
2020/08/09 19:26:12 [TRACE] vertex "helm_release.docker-registry": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: data.helm_repository.sentry
2020/08/09 19:26:12 [TRACE] vertex "helm_release.docker-registry": evaluating
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: helm_release.docker-registry
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "helm_release.postgres-ha"
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] vertex "helm_release.postgres-ha": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] vertex "helm_release.postgres-ha": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: helm_release.postgres-ha
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "data.helm_repository.jetstack"
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "helm_release.sentry-k8s-erros"
2020/08/09 19:26:12 [TRACE] vertex "data.helm_repository.jetstack": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] vertex "helm_release.sentry-k8s-erros": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] vertex "data.helm_repository.jetstack": evaluating
2020/08/09 19:26:12 [TRACE] vertex "helm_release.sentry-k8s-erros": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: data.helm_repository.jetstack
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: helm_release.sentry-k8s-erros
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "helm_release.metrics-server"
2020/08/09 19:26:12 [TRACE] vertex "helm_release.metrics-server": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] vertex "helm_release.metrics-server": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: helm_release.metrics-server
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "helm_release.prometheus-operator"
2020/08/09 19:26:12 [TRACE] vertex "helm_release.prometheus-operator": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "data.helm_repository.incubator"
2020/08/09 19:26:12 [TRACE] vertex "data.helm_repository.incubator": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] vertex "helm_release.prometheus-operator": evaluating
2020/08/09 19:26:12 [TRACE] vertex "data.helm_repository.incubator": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: helm_release.prometheus-operator
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: data.helm_repository.incubator
2020/08/09 19:26:12 [TRACE] vertex "data.helm_repository.bitnami": evaluating
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "helm_release.redis"
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: data.helm_repository.bitnami
2020/08/09 19:26:12 [TRACE] vertex "helm_release.redis": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] vertex "helm_release.redis": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: helm_release.redis
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "data.helm_repository.stable"
2020/08/09 19:26:12 [TRACE] vertex "data.helm_repository.stable": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] vertex "data.helm_repository.stable": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: data.helm_repository.stable
2020-08-09T19:26:12.183+0300 [DEBUG] plugin: starting plugin: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-null_v2.1.2_x4 args=[/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-null_v2.1.2_x4]
2020-08-09T19:26:12.183+0300 [DEBUG] plugin: plugin started: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-null_v2.1.2_x4 pid=4110867
2020-08-09T19:26:12.183+0300 [DEBUG] plugin: waiting for RPC address: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-null_v2.1.2_x4
2020-08-09T19:26:12.187+0300 [INFO]  plugin.terraform-provider-null_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-08-09T19:26:12.187+0300
2020-08-09T19:26:12.206+0300 [DEBUG] plugin: using plugin: version=5
2020-08-09T19:26:12.206+0300 [DEBUG] plugin.terraform-provider-null_v2.1.2_x4: plugin address: address=/tmp/plugin716824230 network=unix timestamp=2020-08-09T19:26:12.206+0300
2020/08/09 19:26:12 [TRACE] BuiltinEvalContext: Initialized "null" provider for provider.null
2020-08-09T19:26:12.242+0300 [TRACE] plugin.stdio: waiting for stdio data
2020/08/09 19:26:12 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020-08-09T19:26:12.242+0300 [INFO]  plugin: configuring client automatic mTLS
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020-08-09T19:26:12.243+0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unimplemented desc = unknown service plugin.GRPCStdio"
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: helm_release.timescaledb
2020/08/09 19:26:12 [WARN] <root>: eval: *terraform.EvalValidateResource, non-fatal err: This resource is deprecated and will be removed in the next major version. 
Please supply the URL of your repository to helm_release resources directly, using the repository attribute.
See: https://www.terraform.io/docs/providers/helm/r/release.html#example-usage
2020/08/09 19:26:12 [WARN] <root>: eval: *terraform.EvalValidateResource, non-fatal err: This resource is deprecated and will be removed in the next major version. 
Please supply the URL of your repository to helm_release resources directly, using the repository attribute.
See: https://www.terraform.io/docs/providers/helm/r/release.html#example-usage
2020/08/09 19:26:12 [WARN] <root>: eval: *terraform.EvalSequence, non-fatal err: This resource is deprecated and will be removed in the next major version. 
Please supply the URL of your repository to helm_release resources directly, using the repository attribute.
See: https://www.terraform.io/docs/providers/helm/r/release.html#example-usage
2020/08/09 19:26:12 [WARN] <root>: eval: *terraform.EvalSequence, non-fatal err: This resource is deprecated and will be removed in the next major version. 
Please supply the URL of your repository to helm_release resources directly, using the repository attribute.
See: https://www.terraform.io/docs/providers/helm/r/release.html#example-usage
2020/08/09 19:26:12 [TRACE] vertex "helm_release.timescaledb": visit complete
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: data.helm_repository.timescale
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: data.helm_repository.sentry
2020/08/09 19:26:12 [WARN] data.helm_repository.timescale: This resource is deprecated and will be removed in the next major version. 
Please supply the URL of your repository to helm_release resources directly, using the repository attribute.
See: https://www.terraform.io/docs/providers/helm/r/release.html#example-usage
2020/08/09 19:26:12 [TRACE] vertex "data.helm_repository.timescale": visit complete
2020/08/09 19:26:12 [WARN] data.helm_repository.sentry: This resource is deprecated and will be removed in the next major version. 
Please supply the URL of your repository to helm_release resources directly, using the repository attribute.
See: https://www.terraform.io/docs/providers/helm/r/release.html#example-usage
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] vertex "data.helm_repository.sentry": visit complete
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: helm_release.docker-registry
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: helm_release.postgres-ha
2020/08/09 19:26:12 [TRACE] vertex "helm_release.docker-registry": visit complete
2020/08/09 19:26:12 [TRACE] vertex "helm_release.postgres-ha": visit complete
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: helm_release.sentry
2020/08/09 19:26:12 [TRACE] vertex "helm_release.sentry": visit complete
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020-08-09T19:26:12.260+0300 [DEBUG] plugin: starting plugin: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-local_v1.4.0_x4 args=[/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-local_v1.4.0_x4]
2020-08-09T19:26:12.260+0300 [DEBUG] plugin: plugin started: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-local_v1.4.0_x4 pid=4110881
2020-08-09T19:26:12.260+0300 [DEBUG] plugin: waiting for RPC address: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-local_v1.4.0_x4
2020-08-09T19:26:12.266+0300 [INFO]  plugin.terraform-provider-local_v1.4.0_x4: configuring server automatic mTLS: timestamp=2020-08-09T19:26:12.266+0300
2020-08-09T19:26:12.284+0300 [DEBUG] plugin.terraform-provider-local_v1.4.0_x4: plugin address: address=/tmp/plugin936117911 network=unix timestamp=2020-08-09T19:26:12.284+0300
2020-08-09T19:26:12.284+0300 [DEBUG] plugin: using plugin: version=5
2020/08/09 19:26:12 [TRACE] BuiltinEvalContext: Initialized "local" provider for provider.local
2020/08/09 19:26:12 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020-08-09T19:26:12.320+0300 [TRACE] plugin.stdio: waiting for stdio data
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020-08-09T19:26:12.320+0300 [INFO]  plugin: configuring client automatic mTLS
2020-08-09T19:26:12.320+0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unimplemented desc = unknown service plugin.GRPCStdio"
2020-08-09T19:26:12.336+0300 [DEBUG] plugin: starting plugin: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-kubernetes_v1.12.0_x4 args=[/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-kubernetes_v1.12.0_x4]
2020-08-09T19:26:12.337+0300 [DEBUG] plugin: plugin started: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-kubernetes_v1.12.0_x4 pid=4110895
2020-08-09T19:26:12.337+0300 [DEBUG] plugin: waiting for RPC address: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-kubernetes_v1.12.0_x4
2020-08-09T19:26:12.360+0300 [INFO]  plugin.terraform-provider-kubernetes_v1.12.0_x4: configuring server automatic mTLS: timestamp=2020-08-09T19:26:12.360+0300
2020-08-09T19:26:12.379+0300 [DEBUG] plugin: using plugin: version=5
2020-08-09T19:26:12.379+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: plugin address: address=/tmp/plugin419939727 network=unix timestamp=2020-08-09T19:26:12.379+0300
2020/08/09 19:26:12 [TRACE] BuiltinEvalContext: Initialized "kubernetes" provider for provider.kubernetes
2020/08/09 19:26:12 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2020/08/09 19:26:12 [TRACE] buildProviderConfig for provider.kubernetes: no configuration at all
2020/08/09 19:26:12 [TRACE] GRPCProvider: GetSchema
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2020/08/09 19:26:12 [TRACE] buildProviderConfig for provider.null: no configuration at all
2020/08/09 19:26:12 [TRACE] GRPCProvider: GetSchema
2020-08-09T19:26:12.414+0300 [TRACE] plugin.stdio: waiting for stdio data
2020-08-09T19:26:12.414+0300 [INFO]  plugin: configuring client automatic mTLS
2020-08-09T19:26:12.414+0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unimplemented desc = unknown service plugin.GRPCStdio"
2020/08/09 19:26:12 [TRACE] GRPCProvider: PrepareProviderConfig
2020/08/09 19:26:12 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:12 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: provider.null
2020/08/09 19:26:12 [TRACE] vertex "provider.null": visit complete
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "null_resource.create-timescaledb-setup"
2020/08/09 19:26:12 [TRACE] vertex "null_resource.create-timescaledb-setup": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] vertex "null_resource.create-timescaledb-setup": evaluating
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: null_resource.create-timescaledb-setup
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020-08-09T19:26:12.433+0300 [DEBUG] plugin: starting plugin: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-digitalocean_v1.22.0 args=[/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-digitalocean_v1.22.0]
2020-08-09T19:26:12.434+0300 [DEBUG] plugin: plugin started: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-digitalocean_v1.22.0 pid=4110908
2020-08-09T19:26:12.434+0300 [DEBUG] plugin: waiting for RPC address: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-digitalocean_v1.22.0
2020/08/09 19:26:12 [TRACE] GRPCProvider: PrepareProviderConfig
2020-08-09T19:26:12.443+0300 [INFO]  plugin.terraform-provider-digitalocean_v1.22.0: configuring server automatic mTLS: timestamp=2020-08-09T19:26:12.443+0300
2020-08-09T19:26:12.462+0300 [DEBUG] plugin.terraform-provider-digitalocean_v1.22.0: plugin address: network=unix address=/tmp/plugin938961337 timestamp=2020-08-09T19:26:12.462+0300
2020-08-09T19:26:12.462+0300 [DEBUG] plugin: using plugin: version=5
2020/08/09 19:26:12 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:12 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: provider.kubernetes
2020/08/09 19:26:12 [TRACE] vertex "provider.kubernetes": visit complete
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "kubernetes_ingress.docker-registry-ingress"
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_ingress.docker-registry-ingress": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_ingress.docker-registry-ingress": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: kubernetes_ingress.docker-registry-ingress
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "kubernetes_service.buildkitd"
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "kubernetes_deployment.buildkitd"
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_service.buildkitd": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_deployment.buildkitd": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "kubernetes_namespace.docker"
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "kubernetes_secret.docker-registry-auth"
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_namespace.docker": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_secret.docker-registry-auth": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "kubernetes_namespace.cert-manager"
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_secret.docker-registry-auth": evaluating
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_namespace.cert-manager": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: kubernetes_secret.docker-registry-auth
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "kubernetes_persistent_volume_claim.image-proxy"
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_namespace.cert-manager": evaluating
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_persistent_volume_claim.image-proxy": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: kubernetes_namespace.cert-manager
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_persistent_volume_claim.image-proxy": evaluating
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_service.buildkitd": evaluating
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "kubernetes_ingress.grafana-ingress"
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "kubernetes_config_map.buildkitd-config"
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_ingress.grafana-ingress": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_config_map.buildkitd-config": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "kubernetes_namespace.redis"
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_ingress.grafana-ingress": evaluating
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_config_map.buildkitd-config": evaluating
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "kubernetes_namespace.timescale"
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: kubernetes_ingress.grafana-ingress
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: kubernetes_config_map.buildkitd-config
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: kubernetes_persistent_volume_claim.image-proxy
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_namespace.timescale": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "kubernetes_ingress.sentry-ingress"
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_namespace.timescale": evaluating
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "kubernetes_secret.docker-config-json"
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_namespace.redis": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_secret.docker-config-json": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_deployment.buildkitd": evaluating
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_namespace.redis": evaluating
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_secret.docker-config-json": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: kubernetes_deployment.buildkitd
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "kubernetes_namespace.rio"
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: kubernetes_namespace.redis
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: kubernetes_namespace.timescale
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_namespace.rio": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_ingress.sentry-ingress": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_namespace.rio": evaluating
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_ingress.sentry-ingress": evaluating
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "kubernetes_namespace.sentry"
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: kubernetes_ingress.sentry-ingress
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "kubernetes_namespace.nginx-ingress"
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_namespace.sentry": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: kubernetes_namespace.rio
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_namespace.nginx-ingress": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_namespace.docker": evaluating
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_namespace.sentry": evaluating
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_namespace.nginx-ingress": evaluating
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: kubernetes_namespace.sentry
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: kubernetes_namespace.nginx-ingress
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "kubernetes_namespace.postgres-ha"
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "kubernetes_namespace.metrics-server"
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_namespace.postgres-ha": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_namespace.metrics-server": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_namespace.postgres-ha": evaluating
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "kubernetes_namespace.monitoring"
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: kubernetes_namespace.postgres-ha
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_namespace.metrics-server": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: kubernetes_secret.docker-config-json
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: kubernetes_namespace.metrics-server
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: kubernetes_service.buildkitd
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_namespace.monitoring": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_namespace.monitoring": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: kubernetes_namespace.monitoring
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: kubernetes_namespace.docker
2020/08/09 19:26:12 [TRACE] BuiltinEvalContext: Initialized "digitalocean" provider for module.cluster.provider.digitalocean
2020/08/09 19:26:12 [TRACE] module.cluster: eval: terraform.EvalNoop
2020-08-09T19:26:12.497+0300 [TRACE] plugin.stdio: waiting for stdio data
2020/08/09 19:26:12 [TRACE] module.cluster: eval: *terraform.EvalOpFilter
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] module.cluster: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] module.cluster: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] module.cluster: eval: *terraform.EvalValidateProvider
2020/08/09 19:26:12 [TRACE] buildProviderConfig for provider.digitalocean: using explicit config only
2020/08/09 19:26:12 [TRACE] GRPCProvider: GetSchema
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2020/08/09 19:26:12 [TRACE] buildProviderConfig for provider.local: no configuration at all
2020/08/09 19:26:12 [TRACE] GRPCProvider: GetSchema
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020/08/09 19:26:12 [WARN] <root>: eval: *terraform.EvalValidateResource, non-fatal err: This resource is deprecated and will be removed in the next major version. 
Please supply the URL of your repository to helm_release resources directly, using the repository attribute.
See: https://www.terraform.io/docs/providers/helm/r/release.html#example-usage
2020/08/09 19:26:12 [WARN] <root>: eval: *terraform.EvalSequence, non-fatal err: This resource is deprecated and will be removed in the next major version. 
Please supply the URL of your repository to helm_release resources directly, using the repository attribute.
See: https://www.terraform.io/docs/providers/helm/r/release.html#example-usage
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: data.helm_repository.jetstack
2020/08/09 19:26:12 [WARN] data.helm_repository.jetstack: This resource is deprecated and will be removed in the next major version. 
Please supply the URL of your repository to helm_release resources directly, using the repository attribute.
See: https://www.terraform.io/docs/providers/helm/r/release.html#example-usage
2020/08/09 19:26:12 [TRACE] vertex "data.helm_repository.jetstack": visit complete
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "helm_release.cert-manager"
2020/08/09 19:26:12 [TRACE] vertex "helm_release.cert-manager": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] vertex "helm_release.cert-manager": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: helm_release.cert-manager
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [WARN] <root>: eval: *terraform.EvalValidateResource, non-fatal err: This resource is deprecated and will be removed in the next major version. 
Please supply the URL of your repository to helm_release resources directly, using the repository attribute.
See: https://www.terraform.io/docs/providers/helm/r/release.html#example-usage
2020/08/09 19:26:12 [WARN] <root>: eval: *terraform.EvalSequence, non-fatal err: This resource is deprecated and will be removed in the next major version. 
Please supply the URL of your repository to helm_release resources directly, using the repository attribute.
See: https://www.terraform.io/docs/providers/helm/r/release.html#example-usage
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: data.helm_repository.stable
2020/08/09 19:26:12 [WARN] data.helm_repository.stable: This resource is deprecated and will be removed in the next major version. 
Please supply the URL of your repository to helm_release resources directly, using the repository attribute.
See: https://www.terraform.io/docs/providers/helm/r/release.html#example-usage
2020/08/09 19:26:12 [TRACE] vertex "data.helm_repository.stable": visit complete
2020/08/09 19:26:12 [WARN] <root>: eval: *terraform.EvalValidateResource, non-fatal err: This resource is deprecated and will be removed in the next major version. 
Please supply the URL of your repository to helm_release resources directly, using the repository attribute.
See: https://www.terraform.io/docs/providers/helm/r/release.html#example-usage
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "helm_release.nginx-ingress"
2020/08/09 19:26:12 [WARN] <root>: eval: *terraform.EvalSequence, non-fatal err: This resource is deprecated and will be removed in the next major version. 
Please supply the URL of your repository to helm_release resources directly, using the repository attribute.
See: https://www.terraform.io/docs/providers/helm/r/release.html#example-usage
2020/08/09 19:26:12 [TRACE] vertex "helm_release.nginx-ingress": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: data.helm_repository.incubator
2020/08/09 19:26:12 [TRACE] vertex "helm_release.nginx-ingress": evaluating
2020/08/09 19:26:12 [WARN] data.helm_repository.incubator: This resource is deprecated and will be removed in the next major version. 
Please supply the URL of your repository to helm_release resources directly, using the repository attribute.
See: https://www.terraform.io/docs/providers/helm/r/release.html#example-usage
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: helm_release.nginx-ingress
2020/08/09 19:26:12 [WARN] <root>: eval: *terraform.EvalValidateResource, non-fatal err: This resource is deprecated and will be removed in the next major version. 
Please supply the URL of your repository to helm_release resources directly, using the repository attribute.
See: https://www.terraform.io/docs/providers/helm/r/release.html#example-usage
2020/08/09 19:26:12 [TRACE] vertex "data.helm_repository.incubator": visit complete
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: helm_release.metrics-server
2020/08/09 19:26:12 [WARN] <root>: eval: *terraform.EvalSequence, non-fatal err: This resource is deprecated and will be removed in the next major version. 
Please supply the URL of your repository to helm_release resources directly, using the repository attribute.
See: https://www.terraform.io/docs/providers/helm/r/release.html#example-usage
2020/08/09 19:26:12 [TRACE] vertex "helm_release.metrics-server": visit complete
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: data.helm_repository.bitnami
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [WARN] data.helm_repository.bitnami: This resource is deprecated and will be removed in the next major version. 
Please supply the URL of your repository to helm_release resources directly, using the repository attribute.
See: https://www.terraform.io/docs/providers/helm/r/release.html#example-usage
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] vertex "data.helm_repository.bitnami": visit complete
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: helm_release.sentry-k8s-erros
2020/08/09 19:26:12 [TRACE] vertex "helm_release.sentry-k8s-erros": visit complete
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: helm_release.prometheus-operator
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] vertex "helm_release.prometheus-operator": visit complete
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvisioner
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateProvisioner
2020/08/09 19:26:12 [TRACE] GRPCProvider: PrepareProviderConfig
2020-08-09T19:26:12.499+0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unimplemented desc = unknown service plugin.GRPCStdio"
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: kubernetes_namespace.cert-manager
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_namespace.cert-manager": visit complete
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: helm_release.redis
2020/08/09 19:26:12 [TRACE] vertex "helm_release.redis": visit complete
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: kubernetes_config_map.buildkitd-config
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_config_map.buildkitd-config": visit complete
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: kubernetes_secret.docker-registry-auth
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_secret.docker-registry-auth": visit complete
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:12 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: kubernetes_persistent_volume_claim.image-proxy
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: provider.local
2020/08/09 19:26:12 [TRACE] vertex "provider.local": visit complete
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_persistent_volume_claim.image-proxy": visit complete
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: kubernetes_ingress.grafana-ingress
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: null_resource.create-timescaledb-setup
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_ingress.grafana-ingress": visit complete
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] vertex "null_resource.create-timescaledb-setup": visit complete
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "data.local_file.rio-app-domains"
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] vertex "data.local_file.rio-app-domains": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] vertex "data.local_file.rio-app-domains": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: data.local_file.rio-app-domains
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "data.local_file.cert_manager_setup"
2020/08/09 19:26:12 [TRACE] vertex "data.local_file.cert_manager_setup": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "data.local_file.rio-yaml"
2020/08/09 19:26:12 [TRACE] vertex "data.local_file.cert_manager_setup": evaluating
2020/08/09 19:26:12 [TRACE] vertex "data.local_file.rio-yaml": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "data.local_file.rio-custom-domain"
2020/08/09 19:26:12 [TRACE] vertex "data.local_file.rio-yaml": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: data.local_file.cert_manager_setup
2020/08/09 19:26:12 [TRACE] vertex "data.local_file.rio-custom-domain": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: data.local_file.rio-yaml
2020/08/09 19:26:12 [TRACE] vertex "data.local_file.rio-custom-domain": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: data.local_file.rio-custom-domain
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: kubernetes_namespace.postgres-ha
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_namespace.postgres-ha": visit complete
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: kubernetes_namespace.timescale
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_namespace.timescale": visit complete
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: kubernetes_namespace.redis
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: kubernetes_namespace.nginx-ingress
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_namespace.redis": visit complete
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_namespace.nginx-ingress": visit complete
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "kubernetes_secret.timescale-credentials"
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_secret.timescale-credentials": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: kubernetes_namespace.rio
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_namespace.rio": visit complete
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_secret.timescale-credentials": evaluating
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: kubernetes_secret.timescale-credentials
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: kubernetes_ingress.docker-registry-ingress
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_ingress.docker-registry-ingress": visit complete
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: kubernetes_namespace.sentry
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_namespace.sentry": visit complete
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "kubernetes_secret.timescale-certificates"
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_secret.timescale-certificates": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_secret.timescale-certificates": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: kubernetes_secret.timescale-certificates
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: kubernetes_ingress.sentry-ingress
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_ingress.sentry-ingress": visit complete
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: kubernetes_namespace.monitoring
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: kubernetes_namespace.docker
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_namespace.monitoring": visit complete
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_namespace.docker": visit complete
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: kubernetes_namespace.metrics-server
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_namespace.metrics-server": visit complete
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: kubernetes_secret.docker-config-json
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_secret.docker-config-json": visit complete
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: data.local_file.rio-app-domains
2020/08/09 19:26:12 [TRACE] vertex "data.local_file.rio-app-domains": visit complete
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: kubernetes_service.buildkitd
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_service.buildkitd": visit complete
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: kubernetes_secret.timescale-credentials
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_secret.timescale-credentials": visit complete
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: data.local_file.rio-yaml
2020/08/09 19:26:12 [TRACE] vertex "data.local_file.rio-yaml": visit complete
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: data.local_file.rio-custom-domain
2020/08/09 19:26:12 [TRACE] vertex "data.local_file.rio-custom-domain": visit complete
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: data.local_file.cert_manager_setup
2020/08/09 19:26:12 [TRACE] vertex "data.local_file.cert_manager_setup": visit complete
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "provider.local (close)"
2020/08/09 19:26:12 [TRACE] vertex "provider.local (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/08/09 19:26:12 [TRACE] vertex "provider.local (close)": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: provider.local (close)
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/08/09 19:26:12 [TRACE] GRPCProvider: Close
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: helm_release.cert-manager
2020/08/09 19:26:12 [TRACE] vertex "helm_release.cert-manager": visit complete
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "kubernetes_ingress.rio-ingress"
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_ingress.rio-ingress": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_ingress.rio-ingress": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: kubernetes_secret.timescale-certificates
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: kubernetes_ingress.rio-ingress
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_secret.timescale-certificates": visit complete
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "null_resource.cert-manager-setup"
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "kubernetes_secret.cloudflare-dns-api-token"
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] vertex "null_resource.cert-manager-setup": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_secret.cloudflare-dns-api-token": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] vertex "null_resource.cert-manager-setup": evaluating
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_secret.cloudflare-dns-api-token": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: null_resource.cert-manager-setup
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "null_resource.rio-setup"
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: kubernetes_secret.cloudflare-dns-api-token
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] vertex "null_resource.rio-setup": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] vertex "null_resource.rio-setup": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: null_resource.rio-setup
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: helm_release.nginx-ingress
2020/08/09 19:26:12 [TRACE] vertex "helm_release.nginx-ingress": visit complete
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "provider.helm (close)"
2020/08/09 19:26:12 [TRACE] vertex "provider.helm (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/08/09 19:26:12 [TRACE] vertex "provider.helm (close)": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: provider.helm (close)
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020-08-09T19:26:12.506+0300 [DEBUG] plugin: plugin process exited: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-local_v1.4.0_x4 pid=4110881
2020-08-09T19:26:12.506+0300 [DEBUG] plugin: plugin exited
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: provider.local (close)
2020/08/09 19:26:12 [TRACE] vertex "provider.local (close)": visit complete
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] GRPCProvider: PrepareProviderConfig
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] GRPCProvider: Close
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvisioner
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateProvisioner
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvisioner
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateProvisioner
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: kubernetes_secret.cloudflare-dns-api-token
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_secret.cloudflare-dns-api-token": visit complete
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: null_resource.rio-setup
2020/08/09 19:26:12 [TRACE] vertex "null_resource.rio-setup": visit complete
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "null_resource.rio-app-domains"
2020/08/09 19:26:12 [TRACE] vertex "null_resource.rio-app-domains": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] vertex "null_resource.rio-app-domains": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: null_resource.rio-app-domains
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: null_resource.cert-manager-setup
2020/08/09 19:26:12 [TRACE] vertex "null_resource.cert-manager-setup": visit complete
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "null_resource.rio-custom-domain"
2020/08/09 19:26:12 [TRACE] vertex "null_resource.rio-custom-domain": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] vertex "null_resource.rio-custom-domain": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: null_resource.rio-custom-domain
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: kubernetes_ingress.rio-ingress
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_ingress.rio-ingress": visit complete
2020-08-09T19:26:12.509+0300 [DEBUG] plugin: plugin process exited: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-helm_v1.2.4_x4 pid=4110840
2020-08-09T19:26:12.509+0300 [DEBUG] plugin: plugin exited
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: provider.helm (close)
2020/08/09 19:26:12 [TRACE] vertex "provider.helm (close)": visit complete
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] module.cluster: eval: terraform.EvalNoop
2020/08/09 19:26:12 [TRACE] module.cluster: eval: terraform.EvalNoop
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: module.cluster.provider.digitalocean
2020/08/09 19:26:12 [TRACE] vertex "module.cluster.provider.digitalocean": visit complete
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "module.cluster.digitalocean_kubernetes_cluster.dish"
2020/08/09 19:26:12 [TRACE] vertex "module.cluster.digitalocean_kubernetes_cluster.dish": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] vertex "module.cluster.digitalocean_kubernetes_cluster.dish": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: module.cluster.digitalocean_kubernetes_cluster.dish
2020/08/09 19:26:12 [TRACE] module.cluster: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] module.cluster: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] module.cluster: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvisioner
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateProvisioner
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvisioner
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalValidateProvisioner
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: null_resource.rio-custom-domain
2020/08/09 19:26:12 [TRACE] vertex "null_resource.rio-custom-domain": visit complete
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: null_resource.rio-app-domains
2020/08/09 19:26:12 [TRACE] vertex "null_resource.rio-app-domains": visit complete
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "provisioner.local-exec (close)"
2020/08/09 19:26:12 [TRACE] vertex "provisioner.local-exec (close)": starting visit (*terraform.graphNodeCloseProvisioner)
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "provider.null (close)"
2020/08/09 19:26:12 [TRACE] vertex "provider.null (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/08/09 19:26:12 [TRACE] vertex "provisioner.local-exec (close)": evaluating
2020/08/09 19:26:12 [TRACE] vertex "provider.null (close)": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: provisioner.local-exec (close)
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: provider.null (close)
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalCloseProvisioner
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/08/09 19:26:12 [TRACE] GRPCProvider: Close
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: module.cluster.digitalocean_kubernetes_cluster.dish
2020/08/09 19:26:12 [TRACE] vertex "module.cluster.digitalocean_kubernetes_cluster.dish": visit complete
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "module.cluster.output.cluster-id"
2020/08/09 19:26:12 [TRACE] vertex "module.cluster.output.cluster-id": starting visit (*terraform.NodeApplyableOutput)
2020/08/09 19:26:12 [TRACE] vertex "module.cluster.output.cluster-id": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: module.cluster.output.cluster-id
2020/08/09 19:26:12 [TRACE] module.cluster: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] module.cluster: eval: *terraform.EvalOpFilter
2020/08/09 19:26:12 [TRACE] module.cluster: eval: *terraform.EvalWriteOutput
2020/08/09 19:26:12 [TRACE] EvalWriteOutput: Removing module.cluster.output.cluster-id from state (it is now null)
2020/08/09 19:26:12 [TRACE] EvalWriteOutput: Saving Create change for module.cluster.output.cluster-id in changeset
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: module.cluster.output.cluster-id
2020/08/09 19:26:12 [TRACE] vertex "module.cluster.output.cluster-id": visit complete
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "module.cluster.digitalocean_kubernetes_node_pool.ancillary"
2020/08/09 19:26:12 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ancillary": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ancillary": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: module.cluster.digitalocean_kubernetes_node_pool.ancillary
2020/08/09 19:26:12 [TRACE] module.cluster: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] module.cluster: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "module.cluster.digitalocean_kubernetes_node_pool.workers"
2020/08/09 19:26:12 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.workers": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.workers": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: module.cluster.digitalocean_kubernetes_node_pool.workers
2020/08/09 19:26:12 [TRACE] module.cluster: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] module.cluster: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "module.cluster.digitalocean_kubernetes_node_pool.ci"
2020/08/09 19:26:12 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ci": starting visit (*terraform.NodeValidatableResource)
2020/08/09 19:26:12 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ci": evaluating
2020-08-09T19:26:12.511+0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: module.cluster.digitalocean_kubernetes_node_pool.ci
2020/08/09 19:26:12 [TRACE] module.cluster: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] module.cluster: eval: *terraform.EvalGetProvider
2020-08-09T19:26:12.512+0300 [DEBUG] plugin: plugin process exited: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-null_v2.1.2_x4 pid=4110867
2020-08-09T19:26:12.512+0300 [DEBUG] plugin: plugin exited
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: provider.null (close)
2020/08/09 19:26:12 [TRACE] vertex "provider.null (close)": visit complete
2020/08/09 19:26:12 [TRACE] module.cluster: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] module.cluster: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] module.cluster: eval: *terraform.EvalValidateResource
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: module.cluster.digitalocean_kubernetes_node_pool.ancillary
2020/08/09 19:26:12 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ancillary": visit complete
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: module.cluster.digitalocean_kubernetes_node_pool.ci
2020/08/09 19:26:12 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ci": visit complete
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020-08-09T19:26:12.516+0300 [DEBUG] plugin: plugin process exited: path=/usr/bin/terraform pid=4110829
2020-08-09T19:26:12.516+0300 [DEBUG] plugin: plugin exited
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: provisioner.local-exec (close)
2020/08/09 19:26:12 [TRACE] vertex "provisioner.local-exec (close)": visit complete
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: module.cluster.digitalocean_kubernetes_node_pool.workers
2020/08/09 19:26:12 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.workers": visit complete
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "module.cluster.provider.digitalocean (close)"
2020/08/09 19:26:12 [TRACE] vertex "module.cluster.provider.digitalocean (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/08/09 19:26:12 [TRACE] vertex "module.cluster.provider.digitalocean (close)": evaluating
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: module.cluster.provider.digitalocean (close)
2020/08/09 19:26:12 [TRACE] module.cluster: eval: *terraform.EvalCloseProvider
2020/08/09 19:26:12 [TRACE] GRPCProvider: Close
2020-08-09T19:26:12.519+0300 [DEBUG] plugin: plugin process exited: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-digitalocean_v1.22.0 pid=4110908
2020-08-09T19:26:12.519+0300 [DEBUG] plugin: plugin exited
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: module.cluster.provider.digitalocean (close)
2020/08/09 19:26:12 [TRACE] vertex "module.cluster.provider.digitalocean (close)": visit complete
2020/08/09 19:26:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: kubernetes_deployment.buildkitd
2020/08/09 19:26:12 [TRACE] vertex "kubernetes_deployment.buildkitd": visit complete
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "provider.kubernetes (close)"
2020/08/09 19:26:12 [TRACE] vertex "provider.kubernetes (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/08/09 19:26:12 [TRACE] vertex "provider.kubernetes (close)": evaluating
2020/08/09 19:26:12 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: provider.kubernetes (close)
2020/08/09 19:26:12 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/08/09 19:26:12 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/08/09 19:26:12 [TRACE] GRPCProvider: Close
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/08/09 19:26:12 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-08-09T19:26:12.595+0300 [DEBUG] plugin: plugin process exited: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-kubernetes_v1.12.0_x4 pid=4110895
2020-08-09T19:26:12.595+0300 [DEBUG] plugin: plugin exited
2020/08/09 19:26:12 [TRACE] [walkValidate] Exiting eval tree: provider.kubernetes (close)
2020/08/09 19:26:12 [TRACE] vertex "provider.kubernetes (close)": visit complete
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "root"
2020/08/09 19:26:12 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/08/09 19:26:12 [TRACE] vertex "root": visit complete
2020/08/09 19:26:12 [INFO] backend/local: apply calling Refresh
2020/08/09 19:26:12 [INFO] terraform: building graph: GraphTypeRefresh
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/08/09 19:26:12 [TRACE] ConfigTransformer: Starting for path: 
2020/08/09 19:26:12 [TRACE] ConfigTransformer: Starting for path: cluster
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
  helm_release.docker-registry - *terraform.NodeRefreshableManagedResource
  helm_release.metrics-server - *terraform.NodeRefreshableManagedResource
  helm_release.nginx-ingress - *terraform.NodeRefreshableManagedResource
  helm_release.postgres-ha - *terraform.NodeRefreshableManagedResource
  helm_release.prometheus-operator - *terraform.NodeRefreshableManagedResource
  helm_release.redis - *terraform.NodeRefreshableManagedResource
  helm_release.sentry - *terraform.NodeRefreshableManagedResource
  helm_release.sentry-k8s-erros - *terraform.NodeRefreshableManagedResource
  helm_release.timescaledb - *terraform.NodeRefreshableManagedResource
  kubernetes_config_map.buildkitd-config - *terraform.NodeRefreshableManagedResource
  kubernetes_deployment.buildkitd - *terraform.NodeRefreshableManagedResource
  kubernetes_ingress.docker-registry-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_ingress.grafana-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_ingress.rio-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_ingress.sentry-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.cert-manager - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.docker - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.metrics-server - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.monitoring - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.nginx-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.postgres-ha - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.redis - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.rio - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.sentry - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.timescale - *terraform.NodeRefreshableManagedResource
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.docker-config-json - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.docker-registry-auth - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.timescale-certificates - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.timescale-credentials - *terraform.NodeRefreshableManagedResource
  kubernetes_service.buildkitd - *terraform.NodeRefreshableManagedResource
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResource
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeRefreshableManagedResource
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeRefreshableManagedResource
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeRefreshableManagedResource
  null_resource.cert-manager-setup - *terraform.NodeRefreshableManagedResource
  null_resource.create-timescaledb-setup - *terraform.NodeRefreshableManagedResource
  null_resource.rio-app-domains - *terraform.NodeRefreshableManagedResource
  null_resource.rio-custom-domain - *terraform.NodeRefreshableManagedResource
  null_resource.rio-setup - *terraform.NodeRefreshableManagedResource
  ------
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/08/09 19:26:12 [TRACE] ConfigTransformer: Starting for path: 
2020/08/09 19:26:12 [TRACE] ConfigTransformer: Starting for path: cluster
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodeRefreshableDataResource
  data.helm_repository.incubator - *terraform.NodeRefreshableDataResource
  data.helm_repository.jetstack - *terraform.NodeRefreshableDataResource
  data.helm_repository.sentry - *terraform.NodeRefreshableDataResource
  data.helm_repository.stable - *terraform.NodeRefreshableDataResource
  data.helm_repository.timescale - *terraform.NodeRefreshableDataResource
  data.local_file.cert_manager_setup - *terraform.NodeRefreshableDataResource
  data.local_file.rio-app-domains - *terraform.NodeRefreshableDataResource
  data.local_file.rio-custom-domain - *terraform.NodeRefreshableDataResource
  data.local_file.rio-yaml - *terraform.NodeRefreshableDataResource
  helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
  helm_release.docker-registry - *terraform.NodeRefreshableManagedResource
  helm_release.metrics-server - *terraform.NodeRefreshableManagedResource
  helm_release.nginx-ingress - *terraform.NodeRefreshableManagedResource
  helm_release.postgres-ha - *terraform.NodeRefreshableManagedResource
  helm_release.prometheus-operator - *terraform.NodeRefreshableManagedResource
  helm_release.redis - *terraform.NodeRefreshableManagedResource
  helm_release.sentry - *terraform.NodeRefreshableManagedResource
  helm_release.sentry-k8s-erros - *terraform.NodeRefreshableManagedResource
  helm_release.timescaledb - *terraform.NodeRefreshableManagedResource
  kubernetes_config_map.buildkitd-config - *terraform.NodeRefreshableManagedResource
  kubernetes_deployment.buildkitd - *terraform.NodeRefreshableManagedResource
  kubernetes_ingress.docker-registry-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_ingress.grafana-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_ingress.rio-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_ingress.sentry-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.cert-manager - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.docker - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.metrics-server - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.monitoring - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.nginx-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.postgres-ha - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.redis - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.rio - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.sentry - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.timescale - *terraform.NodeRefreshableManagedResource
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.docker-config-json - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.docker-registry-auth - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.timescale-certificates - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.timescale-credentials - *terraform.NodeRefreshableManagedResource
  kubernetes_service.buildkitd - *terraform.NodeRefreshableManagedResource
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResource
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeRefreshableManagedResource
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeRefreshableManagedResource
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeRefreshableManagedResource
  null_resource.cert-manager-setup - *terraform.NodeRefreshableManagedResource
  null_resource.create-timescaledb-setup - *terraform.NodeRefreshableManagedResource
  null_resource.rio-app-domains - *terraform.NodeRefreshableManagedResource
  null_resource.rio-custom-domain - *terraform.NodeRefreshableManagedResource
  null_resource.rio-setup - *terraform.NodeRefreshableManagedResource
  ------
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.StateTransformer
2020/08/09 19:26:12 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.nginx-ingress" (*terraform.NodeRefreshableManagedResource) config from nginx-ingress.tf:9,1-40
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "module.cluster.digitalocean_kubernetes_node_pool.workers" (*terraform.NodeRefreshableManagedResource) config from cluster/main.tf:39,1-55
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.rio" (*terraform.NodeRefreshableManagedResource) config from rio.tf:1,1-38
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "null_resource.rio-app-domains" (*terraform.NodeRefreshableManagedResource) config from rio.tf:65,1-43
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.metrics-server" (*terraform.NodeRefreshableManagedResource) config from metrics-server.tf:1,1-49
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "module.cluster.digitalocean_kubernetes_node_pool.ancillary" (*terraform.NodeRefreshableManagedResource) config from cluster/main.tf:30,1-57
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "module.cluster.digitalocean_kubernetes_node_pool.ci" (*terraform.NodeRefreshableManagedResource) config from cluster/main.tf:48,1-50
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "data.local_file.rio-app-domains" (*terraform.NodeRefreshableDataResource) config from hcl.Range{Filename:"rio.tf", Start:hcl.Pos{Line:22, Column:1, Byte:367}, End:hcl.Pos{Line:22, Column:36, Byte:402}}
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "data.local_file.cert_manager_setup" (*terraform.NodeRefreshableDataResource) config from hcl.Range{Filename:"cert-manager.tf", Start:hcl.Pos{Line:9, Column:1, Byte:122}, End:hcl.Pos{Line:9, Column:39, Byte:160}}
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "data.helm_repository.jetstack" (*terraform.NodeRefreshableDataResource) config from hcl.Range{Filename:"cert-manager.tf", Start:hcl.Pos{Line:13, Column:1, Byte:219}, End:hcl.Pos{Line:13, Column:34, Byte:252}}
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.buildkitd" (*terraform.NodeRefreshableManagedResource) config from buildkitd.tf:100,1-42
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "null_resource.rio-custom-domain" (*terraform.NodeRefreshableManagedResource) config from rio.tf:45,1-45
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.cert-manager" (*terraform.NodeRefreshableManagedResource) config from cert-manager.tf:18,1-47
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "data.helm_repository.sentry" (*terraform.NodeRefreshableDataResource) config from hcl.Range{Filename:"sentry.tf", Start:hcl.Pos{Line:7, Column:1, Byte:83}, End:hcl.Pos{Line:7, Column:32, Byte:114}}
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.metrics-server" (*terraform.NodeRefreshableManagedResource) config from metrics-server.tf:7,1-41
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_ingress.grafana-ingress" (*terraform.NodeRefreshableManagedResource) config from prometheus.tf:28,1-48
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.cert-manager" (*terraform.NodeRefreshableManagedResource) config from cert-manager.tf:24,1-39
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "null_resource.cert-manager-setup" (*terraform.NodeRefreshableManagedResource) config from cert-manager.tf:42,1-46
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.postgres-ha" (*terraform.NodeRefreshableManagedResource) config from postgres-ha.tf:7,1-38
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.postgres-ha" (*terraform.NodeRefreshableManagedResource) config from postgres-ha.tf:1,1-46
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_config_map.buildkitd-config" (*terraform.NodeRefreshableManagedResource) config from buildkitd.tf:90,1-52
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.docker-registry-auth" (*terraform.NodeRefreshableManagedResource) config from docker-registry.tf:34,1-52
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "data.helm_repository.stable" (*terraform.NodeRefreshableDataResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:30, Column:1, Byte:836}, End:hcl.Pos{Line:30, Column:32, Byte:867}}
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "data.helm_repository.bitnami" (*terraform.NodeRefreshableDataResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:40, Column:1, Byte:1084}, End:hcl.Pos{Line:40, Column:33, Byte:1116}}
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.timescale-credentials" (*terraform.NodeRefreshableManagedResource) config from timescaledb.tf:23,1-53
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.buildkitd" (*terraform.NodeRefreshableManagedResource) config from buildkitd.tf:1,1-45
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "module.cluster.digitalocean_kubernetes_cluster.dish" (*terraform.NodeRefreshableManagedResource) config from cluster/main.tf:11,1-50
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.prometheus-operator" (*terraform.NodeRefreshableManagedResource) config from prometheus.tf:12,1-46
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.cloudflare-dns-api-token" (*terraform.NodeRefreshableManagedResource) config from cert-manager.tf:60,1-56
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "data.local_file.rio-custom-domain" (*terraform.NodeRefreshableDataResource) config from hcl.Range{Filename:"rio.tf", Start:hcl.Pos{Line:18, Column:1, Byte:266}, End:hcl.Pos{Line:18, Column:38, Byte:303}}
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_ingress.docker-registry-ingress" (*terraform.NodeRefreshableManagedResource) config from docker-registry.tf:47,1-56
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.nginx-ingress" (*terraform.NodeRefreshableManagedResource) config from nginx-ingress.tf:1,1-48
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "null_resource.rio-setup" (*terraform.NodeRefreshableManagedResource) config from rio.tf:26,1-37
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.sentry" (*terraform.NodeRefreshableManagedResource) config from sentry.tf:25,1-33
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_ingress.rio-ingress" (*terraform.NodeRefreshableManagedResource) config from rio.tf:83,1-44
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.monitoring" (*terraform.NodeRefreshableManagedResource) config from prometheus.tf:6,1-45
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.docker-config-json" (*terraform.NodeRefreshableManagedResource) config from rio.tf:135,1-50
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.sentry-k8s-erros" (*terraform.NodeRefreshableManagedResource) config from sentry.tf:12,1-43
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "data.helm_repository.incubator" (*terraform.NodeRefreshableDataResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:35, Column:1, Byte:952}, End:hcl.Pos{Line:35, Column:35, Byte:986}}
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.docker" (*terraform.NodeRefreshableManagedResource) config from docker-registry.tf:1,1-41
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "data.helm_repository.timescale" (*terraform.NodeRefreshableDataResource) config from hcl.Range{Filename:"timescaledb.tf", Start:hcl.Pos{Line:7, Column:1, Byte:89}, End:hcl.Pos{Line:7, Column:35, Byte:123}}
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.sentry" (*terraform.NodeRefreshableManagedResource) config from sentry.tf:1,1-41
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.timescale-certificates" (*terraform.NodeRefreshableManagedResource) config from timescaledb.tf:40,1-54
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.redis" (*terraform.NodeRefreshableManagedResource) config from redis.tf:7,1-32
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.redis" (*terraform.NodeRefreshableManagedResource) config from redis.tf:1,1-40
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.timescaledb" (*terraform.NodeRefreshableManagedResource) config from timescaledb.tf:12,1-38
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_persistent_volume_claim.image-proxy" (*terraform.NodeRefreshableManagedResource) config from rio.tf:147,1-60
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.timescale" (*terraform.NodeRefreshableManagedResource) config from timescaledb.tf:1,1-44
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "data.local_file.rio-yaml" (*terraform.NodeRefreshableDataResource) config from hcl.Range{Filename:"rio.tf", Start:hcl.Pos{Line:14, Column:1, Byte:188}, End:hcl.Pos{Line:14, Column:29, Byte:216}}
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "null_resource.create-timescaledb-setup" (*terraform.NodeRefreshableManagedResource) config from timescaledb.tf:56,1-52
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.docker-registry" (*terraform.NodeRefreshableManagedResource) config from docker-registry.tf:7,1-42
2020/08/09 19:26:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_ingress.sentry-ingress" (*terraform.NodeRefreshableManagedResource) config from sentry.tf:93,1-47
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodeRefreshableDataResource
  data.helm_repository.incubator - *terraform.NodeRefreshableDataResource
  data.helm_repository.jetstack - *terraform.NodeRefreshableDataResource
  data.helm_repository.sentry - *terraform.NodeRefreshableDataResource
  data.helm_repository.stable - *terraform.NodeRefreshableDataResource
  data.helm_repository.timescale - *terraform.NodeRefreshableDataResource
  data.local_file.cert_manager_setup - *terraform.NodeRefreshableDataResource
  data.local_file.rio-app-domains - *terraform.NodeRefreshableDataResource
  data.local_file.rio-custom-domain - *terraform.NodeRefreshableDataResource
  data.local_file.rio-yaml - *terraform.NodeRefreshableDataResource
  helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
  helm_release.docker-registry - *terraform.NodeRefreshableManagedResource
  helm_release.metrics-server - *terraform.NodeRefreshableManagedResource
  helm_release.nginx-ingress - *terraform.NodeRefreshableManagedResource
  helm_release.postgres-ha - *terraform.NodeRefreshableManagedResource
  helm_release.prometheus-operator - *terraform.NodeRefreshableManagedResource
  helm_release.redis - *terraform.NodeRefreshableManagedResource
  helm_release.sentry - *terraform.NodeRefreshableManagedResource
  helm_release.sentry-k8s-erros - *terraform.NodeRefreshableManagedResource
  helm_release.timescaledb - *terraform.NodeRefreshableManagedResource
  kubernetes_config_map.buildkitd-config - *terraform.NodeRefreshableManagedResource
  kubernetes_deployment.buildkitd - *terraform.NodeRefreshableManagedResource
  kubernetes_ingress.docker-registry-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_ingress.grafana-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_ingress.rio-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_ingress.sentry-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.cert-manager - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.docker - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.metrics-server - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.monitoring - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.nginx-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.postgres-ha - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.redis - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.rio - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.sentry - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.timescale - *terraform.NodeRefreshableManagedResource
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.docker-config-json - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.docker-registry-auth - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.timescale-certificates - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.timescale-credentials - *terraform.NodeRefreshableManagedResource
  kubernetes_service.buildkitd - *terraform.NodeRefreshableManagedResource
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResource
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeRefreshableManagedResource
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeRefreshableManagedResource
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeRefreshableManagedResource
  null_resource.cert-manager-setup - *terraform.NodeRefreshableManagedResource
  null_resource.create-timescaledb-setup - *terraform.NodeRefreshableManagedResource
  null_resource.rio-app-domains - *terraform.NodeRefreshableManagedResource
  null_resource.rio-custom-domain - *terraform.NodeRefreshableManagedResource
  null_resource.rio-setup - *terraform.NodeRefreshableManagedResource
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodeRefreshableDataResource
  data.helm_repository.incubator - *terraform.NodeRefreshableDataResource
  data.helm_repository.jetstack - *terraform.NodeRefreshableDataResource
  data.helm_repository.sentry - *terraform.NodeRefreshableDataResource
  data.helm_repository.stable - *terraform.NodeRefreshableDataResource
  data.helm_repository.timescale - *terraform.NodeRefreshableDataResource
  data.local_file.cert_manager_setup - *terraform.NodeRefreshableDataResource
  data.local_file.rio-app-domains - *terraform.NodeRefreshableDataResource
  data.local_file.rio-custom-domain - *terraform.NodeRefreshableDataResource
  data.local_file.rio-yaml - *terraform.NodeRefreshableDataResource
  helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
  helm_release.docker-registry - *terraform.NodeRefreshableManagedResource
  helm_release.metrics-server - *terraform.NodeRefreshableManagedResource
  helm_release.nginx-ingress - *terraform.NodeRefreshableManagedResource
  helm_release.postgres-ha - *terraform.NodeRefreshableManagedResource
  helm_release.prometheus-operator - *terraform.NodeRefreshableManagedResource
  helm_release.redis - *terraform.NodeRefreshableManagedResource
  helm_release.sentry - *terraform.NodeRefreshableManagedResource
  helm_release.sentry-k8s-erros - *terraform.NodeRefreshableManagedResource
  helm_release.timescaledb - *terraform.NodeRefreshableManagedResource
  kubernetes_config_map.buildkitd-config - *terraform.NodeRefreshableManagedResource
  kubernetes_deployment.buildkitd - *terraform.NodeRefreshableManagedResource
  kubernetes_ingress.docker-registry-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_ingress.grafana-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_ingress.rio-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_ingress.sentry-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.cert-manager - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.docker - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.metrics-server - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.monitoring - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.nginx-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.postgres-ha - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.redis - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.rio - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.sentry - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.timescale - *terraform.NodeRefreshableManagedResource
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.docker-config-json - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.docker-registry-auth - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.timescale-certificates - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.timescale-credentials - *terraform.NodeRefreshableManagedResource
  kubernetes_service.buildkitd - *terraform.NodeRefreshableManagedResource
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResource
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeRefreshableManagedResource
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeRefreshableManagedResource
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeRefreshableManagedResource
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  null_resource.cert-manager-setup - *terraform.NodeRefreshableManagedResource
  null_resource.create-timescaledb-setup - *terraform.NodeRefreshableManagedResource
  null_resource.rio-app-domains - *terraform.NodeRefreshableManagedResource
  null_resource.rio-custom-domain - *terraform.NodeRefreshableManagedResource
  null_resource.rio-setup - *terraform.NodeRefreshableManagedResource
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodeRefreshableDataResource
  data.helm_repository.incubator - *terraform.NodeRefreshableDataResource
  data.helm_repository.jetstack - *terraform.NodeRefreshableDataResource
  data.helm_repository.sentry - *terraform.NodeRefreshableDataResource
  data.helm_repository.stable - *terraform.NodeRefreshableDataResource
  data.helm_repository.timescale - *terraform.NodeRefreshableDataResource
  data.local_file.cert_manager_setup - *terraform.NodeRefreshableDataResource
  data.local_file.rio-app-domains - *terraform.NodeRefreshableDataResource
  data.local_file.rio-custom-domain - *terraform.NodeRefreshableDataResource
  data.local_file.rio-yaml - *terraform.NodeRefreshableDataResource
  helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
  helm_release.docker-registry - *terraform.NodeRefreshableManagedResource
  helm_release.metrics-server - *terraform.NodeRefreshableManagedResource
  helm_release.nginx-ingress - *terraform.NodeRefreshableManagedResource
  helm_release.postgres-ha - *terraform.NodeRefreshableManagedResource
  helm_release.prometheus-operator - *terraform.NodeRefreshableManagedResource
  helm_release.redis - *terraform.NodeRefreshableManagedResource
  helm_release.sentry - *terraform.NodeRefreshableManagedResource
  helm_release.sentry-k8s-erros - *terraform.NodeRefreshableManagedResource
  helm_release.timescaledb - *terraform.NodeRefreshableManagedResource
  kubernetes_config_map.buildkitd-config - *terraform.NodeRefreshableManagedResource
  kubernetes_deployment.buildkitd - *terraform.NodeRefreshableManagedResource
  kubernetes_ingress.docker-registry-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_ingress.grafana-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_ingress.rio-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_ingress.sentry-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.cert-manager - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.docker - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.metrics-server - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.monitoring - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.nginx-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.postgres-ha - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.redis - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.rio - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.sentry - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.timescale - *terraform.NodeRefreshableManagedResource
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.docker-config-json - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.docker-registry-auth - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.timescale-certificates - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.timescale-credentials - *terraform.NodeRefreshableManagedResource
  kubernetes_service.buildkitd - *terraform.NodeRefreshableManagedResource
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResource
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeRefreshableManagedResource
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeRefreshableManagedResource
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeRefreshableManagedResource
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  null_resource.cert-manager-setup - *terraform.NodeRefreshableManagedResource
  null_resource.create-timescaledb-setup - *terraform.NodeRefreshableManagedResource
  null_resource.rio-app-domains - *terraform.NodeRefreshableManagedResource
  null_resource.rio-custom-domain - *terraform.NodeRefreshableManagedResource
  null_resource.rio-setup - *terraform.NodeRefreshableManagedResource
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/08/09 19:26:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/08/09 19:26:12 [TRACE] ProviderConfigTransformer: attaching to "module.cluster.provider.digitalocean" provider configuration from cluster/main.tf:5,1-24
2020/08/09 19:26:12 [TRACE] ProviderConfigTransformer: attaching to "module.cluster.provider.kubernetes" provider configuration from cluster/main.tf:63,1-22
2020/08/09 19:26:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodeRefreshableDataResource
  data.helm_repository.incubator - *terraform.NodeRefreshableDataResource
  data.helm_repository.jetstack - *terraform.NodeRefreshableDataResource
  data.helm_repository.sentry - *terraform.NodeRefreshableDataResource
  data.helm_repository.stable - *terraform.NodeRefreshableDataResource
  data.helm_repository.timescale - *terraform.NodeRefreshableDataResource
  data.local_file.cert_manager_setup - *terraform.NodeRefreshableDataResource
  data.local_file.rio-app-domains - *terraform.NodeRefreshableDataResource
  data.local_file.rio-custom-domain - *terraform.NodeRefreshableDataResource
  data.local_file.rio-yaml - *terraform.NodeRefreshableDataResource
  helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
  helm_release.docker-registry - *terraform.NodeRefreshableManagedResource
  helm_release.metrics-server - *terraform.NodeRefreshableManagedResource
  helm_release.nginx-ingress - *terraform.NodeRefreshableManagedResource
  helm_release.postgres-ha - *terraform.NodeRefreshableManagedResource
  helm_release.prometheus-operator - *terraform.NodeRefreshableManagedResource
  helm_release.redis - *terraform.NodeRefreshableManagedResource
  helm_release.sentry - *terraform.NodeRefreshableManagedResource
  helm_release.sentry-k8s-erros - *terraform.NodeRefreshableManagedResource
  helm_release.timescaledb - *terraform.NodeRefreshableManagedResource
  kubernetes_config_map.buildkitd-config - *terraform.NodeRefreshableManagedResource
  kubernetes_deployment.buildkitd - *terraform.NodeRefreshableManagedResource
  kubernetes_ingress.docker-registry-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_ingress.grafana-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_ingress.rio-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_ingress.sentry-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.cert-manager - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.docker - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.metrics-server - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.monitoring - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.nginx-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.postgres-ha - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.redis - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.rio - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.sentry - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.timescale - *terraform.NodeRefreshableManagedResource
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.docker-config-json - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.docker-registry-auth - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.timescale-certificates - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.timescale-credentials - *terraform.NodeRefreshableManagedResource
  kubernetes_service.buildkitd - *terraform.NodeRefreshableManagedResource
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResource
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeRefreshableManagedResource
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeRefreshableManagedResource
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeRefreshableManagedResource
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.provider.kubernetes - *terraform.NodeApplyableProvider
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  null_resource.cert-manager-setup - *terraform.NodeRefreshableManagedResource
  null_resource.create-timescaledb-setup - *terraform.NodeRefreshableManagedResource
  null_resource.rio-app-domains - *terraform.NodeRefreshableManagedResource
  null_resource.rio-custom-domain - *terraform.NodeRefreshableManagedResource
  null_resource.rio-setup - *terraform.NodeRefreshableManagedResource
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/08/09 19:26:12 [DEBUG] adding implicit provider configuration provider.helm, implied first by data.helm_repository.incubator
2020/08/09 19:26:12 [DEBUG] adding implicit provider configuration provider.kubernetes, implied first by kubernetes_namespace.docker
2020/08/09 19:26:12 [DEBUG] adding implicit provider configuration provider.local, implied first by data.local_file.rio-yaml
2020/08/09 19:26:12 [DEBUG] adding implicit provider configuration provider.null, implied first by null_resource.create-timescaledb-setup
2020/08/09 19:26:12 [DEBUG] adding implicit provider configuration provider.digitalocean, implied first by module.cluster.digitalocean_kubernetes_node_pool.ci
2020/08/09 19:26:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodeRefreshableDataResource
  data.helm_repository.incubator - *terraform.NodeRefreshableDataResource
  data.helm_repository.jetstack - *terraform.NodeRefreshableDataResource
  data.helm_repository.sentry - *terraform.NodeRefreshableDataResource
  data.helm_repository.stable - *terraform.NodeRefreshableDataResource
  data.helm_repository.timescale - *terraform.NodeRefreshableDataResource
  data.local_file.cert_manager_setup - *terraform.NodeRefreshableDataResource
  data.local_file.rio-app-domains - *terraform.NodeRefreshableDataResource
  data.local_file.rio-custom-domain - *terraform.NodeRefreshableDataResource
  data.local_file.rio-yaml - *terraform.NodeRefreshableDataResource
  helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
  helm_release.docker-registry - *terraform.NodeRefreshableManagedResource
  helm_release.metrics-server - *terraform.NodeRefreshableManagedResource
  helm_release.nginx-ingress - *terraform.NodeRefreshableManagedResource
  helm_release.postgres-ha - *terraform.NodeRefreshableManagedResource
  helm_release.prometheus-operator - *terraform.NodeRefreshableManagedResource
  helm_release.redis - *terraform.NodeRefreshableManagedResource
  helm_release.sentry - *terraform.NodeRefreshableManagedResource
  helm_release.sentry-k8s-erros - *terraform.NodeRefreshableManagedResource
  helm_release.timescaledb - *terraform.NodeRefreshableManagedResource
  kubernetes_config_map.buildkitd-config - *terraform.NodeRefreshableManagedResource
  kubernetes_deployment.buildkitd - *terraform.NodeRefreshableManagedResource
  kubernetes_ingress.docker-registry-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_ingress.grafana-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_ingress.rio-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_ingress.sentry-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.cert-manager - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.docker - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.metrics-server - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.monitoring - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.nginx-ingress - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.postgres-ha - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.redis - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.rio - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.sentry - *terraform.NodeRefreshableManagedResource
  kubernetes_namespace.timescale - *terraform.NodeRefreshableManagedResource
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.docker-config-json - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.docker-registry-auth - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.timescale-certificates - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.timescale-credentials - *terraform.NodeRefreshableManagedResource
  kubernetes_service.buildkitd - *terraform.NodeRefreshableManagedResource
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResource
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeRefreshableManagedResource
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeRefreshableManagedResource
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeRefreshableManagedResource
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.provider.kubernetes - *terraform.NodeApplyableProvider
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  null_resource.cert-manager-setup - *terraform.NodeRefreshableManagedResource
  null_resource.create-timescaledb-setup - *terraform.NodeRefreshableManagedResource
  null_resource.rio-app-domains - *terraform.NodeRefreshableManagedResource
  null_resource.rio-custom-domain - *terraform.NodeRefreshableManagedResource
  null_resource.rio-setup - *terraform.NodeRefreshableManagedResource
  provider.digitalocean - *terraform.NodeApplyableProvider
  provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/08/09 19:26:12 [TRACE] ProviderTransformer: null_resource.rio-app-domains is provided by provider.null or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: module.cluster.digitalocean_kubernetes_node_pool.workers is provided by module.cluster.provider.digitalocean or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_service.buildkitd is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_namespace.cert-manager is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: module.cluster.digitalocean_kubernetes_node_pool.ancillary is provided by module.cluster.provider.digitalocean or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: data.local_file.cert_manager_setup is provided by provider.local or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: data.helm_repository.jetstack is provided by provider.helm or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: data.helm_repository.sentry is provided by provider.helm or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_namespace.postgres-ha is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_secret.docker-registry-auth is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: helm_release.metrics-server is provided by provider.helm or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_secret.timescale-credentials is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: data.helm_repository.stable is provided by provider.helm or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: helm_release.sentry is provided by provider.helm or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_ingress.rio-ingress is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_namespace.monitoring is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_ingress.docker-registry-ingress is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: data.helm_repository.incubator is provided by provider.helm or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: helm_release.redis is provided by provider.helm or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_namespace.docker is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: data.helm_repository.timescale is provided by provider.helm or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: null_resource.create-timescaledb-setup is provided by provider.null or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_ingress.sentry-ingress is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_namespace.redis is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: helm_release.timescaledb is provided by provider.helm or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_persistent_volume_claim.image-proxy is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_namespace.timescale is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: data.local_file.rio-yaml is provided by provider.local or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_namespace.rio is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_namespace.metrics-server is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: helm_release.nginx-ingress is provided by provider.helm or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: null_resource.rio-custom-domain is provided by provider.null or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: module.cluster.digitalocean_kubernetes_node_pool.ci is provided by module.cluster.provider.digitalocean or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: data.local_file.rio-app-domains is provided by provider.local or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_config_map.buildkitd-config is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_ingress.grafana-ingress is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: helm_release.cert-manager is provided by provider.helm or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: null_resource.cert-manager-setup is provided by provider.null or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: helm_release.postgres-ha is provided by provider.helm or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_deployment.buildkitd is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: module.cluster.digitalocean_kubernetes_cluster.dish is provided by module.cluster.provider.digitalocean or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: data.helm_repository.bitnami is provided by provider.helm or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: helm_release.prometheus-operator is provided by provider.helm or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_secret.cloudflare-dns-api-token is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: data.local_file.rio-custom-domain is provided by provider.local or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_namespace.nginx-ingress is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: null_resource.rio-setup is provided by provider.null or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_secret.docker-config-json is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: helm_release.sentry-k8s-erros is provided by provider.helm or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_namespace.sentry is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: kubernetes_secret.timescale-certificates is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: helm_release.docker-registry is provided by provider.helm or inherited equivalent
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.sentry-k8s-erros
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "helm_release.sentry-k8s-erros" (*terraform.NodeRefreshableManagedResource) needs provider.helm
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.null serving null_resource.rio-app-domains
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "null_resource.rio-app-domains" (*terraform.NodeRefreshableManagedResource) needs provider.null
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.local serving data.local_file.cert_manager_setup
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "data.local_file.cert_manager_setup" (*terraform.NodeRefreshableDataResource) needs provider.local
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.helm serving data.helm_repository.incubator
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "data.helm_repository.incubator" (*terraform.NodeRefreshableDataResource) needs provider.helm
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.docker
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_namespace.docker" (*terraform.NodeRefreshableManagedResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.rio
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_namespace.rio" (*terraform.NodeRefreshableManagedResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_secret.cloudflare-dns-api-token
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_secret.cloudflare-dns-api-token" (*terraform.NodeRefreshableManagedResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.helm serving data.helm_repository.bitnami
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "data.helm_repository.bitnami" (*terraform.NodeRefreshableDataResource) needs provider.helm
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.helm serving data.helm_repository.sentry
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "data.helm_repository.sentry" (*terraform.NodeRefreshableDataResource) needs provider.helm
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_ingress.sentry-ingress
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_ingress.sentry-ingress" (*terraform.NodeRefreshableManagedResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.timescale
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_namespace.timescale" (*terraform.NodeRefreshableManagedResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.cert-manager
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "helm_release.cert-manager" (*terraform.NodeRefreshableManagedResource) needs provider.helm
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_deployment.buildkitd
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_deployment.buildkitd" (*terraform.NodeRefreshableManagedResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for module.cluster.provider.digitalocean serving module.cluster.digitalocean_kubernetes_cluster.dish
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "module.cluster.digitalocean_kubernetes_cluster.dish" (*terraform.NodeRefreshableManagedResource) needs module.cluster.provider.digitalocean
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.local serving data.local_file.rio-app-domains
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "data.local_file.rio-app-domains" (*terraform.NodeRefreshableDataResource) needs provider.local
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_config_map.buildkitd-config
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_config_map.buildkitd-config" (*terraform.NodeRefreshableManagedResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.cert-manager
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_namespace.cert-manager" (*terraform.NodeRefreshableManagedResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_secret.docker-registry-auth
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_secret.docker-registry-auth" (*terraform.NodeRefreshableManagedResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_ingress.rio-ingress
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_ingress.rio-ingress" (*terraform.NodeRefreshableManagedResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.helm serving data.helm_repository.timescale
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "data.helm_repository.timescale" (*terraform.NodeRefreshableDataResource) needs provider.helm
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.local serving data.local_file.rio-yaml
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "data.local_file.rio-yaml" (*terraform.NodeRefreshableDataResource) needs provider.local
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.null serving null_resource.rio-custom-domain
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "null_resource.rio-custom-domain" (*terraform.NodeRefreshableManagedResource) needs provider.null
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.null serving null_resource.rio-setup
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "null_resource.rio-setup" (*terraform.NodeRefreshableManagedResource) needs provider.null
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.sentry
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_namespace.sentry" (*terraform.NodeRefreshableManagedResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.helm serving data.helm_repository.jetstack
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "data.helm_repository.jetstack" (*terraform.NodeRefreshableDataResource) needs provider.helm
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.null serving null_resource.create-timescaledb-setup
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "null_resource.create-timescaledb-setup" (*terraform.NodeRefreshableManagedResource) needs provider.null
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.redis
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_namespace.redis" (*terraform.NodeRefreshableManagedResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for module.cluster.provider.digitalocean serving module.cluster.digitalocean_kubernetes_node_pool.ci
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "module.cluster.digitalocean_kubernetes_node_pool.ci" (*terraform.NodeRefreshableManagedResource) needs module.cluster.provider.digitalocean
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_secret.timescale-certificates
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_secret.timescale-certificates" (*terraform.NodeRefreshableManagedResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_secret.timescale-credentials
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_secret.timescale-credentials" (*terraform.NodeRefreshableManagedResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.sentry
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "helm_release.sentry" (*terraform.NodeRefreshableManagedResource) needs provider.helm
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.timescaledb
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "helm_release.timescaledb" (*terraform.NodeRefreshableManagedResource) needs provider.helm
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.null serving null_resource.cert-manager-setup
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "null_resource.cert-manager-setup" (*terraform.NodeRefreshableManagedResource) needs provider.null
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.docker-registry
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "helm_release.docker-registry" (*terraform.NodeRefreshableManagedResource) needs provider.helm
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_secret.docker-config-json
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_secret.docker-config-json" (*terraform.NodeRefreshableManagedResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for module.cluster.provider.digitalocean serving module.cluster.digitalocean_kubernetes_node_pool.ancillary
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "module.cluster.digitalocean_kubernetes_node_pool.ancillary" (*terraform.NodeRefreshableManagedResource) needs module.cluster.provider.digitalocean
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.postgres-ha
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_namespace.postgres-ha" (*terraform.NodeRefreshableManagedResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.monitoring
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_namespace.monitoring" (*terraform.NodeRefreshableManagedResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_ingress.docker-registry-ingress
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_ingress.docker-registry-ingress" (*terraform.NodeRefreshableManagedResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.metrics-server
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_namespace.metrics-server" (*terraform.NodeRefreshableManagedResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.local serving data.local_file.rio-custom-domain
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "data.local_file.rio-custom-domain" (*terraform.NodeRefreshableDataResource) needs provider.local
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_service.buildkitd
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_service.buildkitd" (*terraform.NodeRefreshableManagedResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.redis
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "helm_release.redis" (*terraform.NodeRefreshableManagedResource) needs provider.helm
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.nginx-ingress
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "helm_release.nginx-ingress" (*terraform.NodeRefreshableManagedResource) needs provider.helm
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_ingress.grafana-ingress
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_ingress.grafana-ingress" (*terraform.NodeRefreshableManagedResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.postgres-ha
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "helm_release.postgres-ha" (*terraform.NodeRefreshableManagedResource) needs provider.helm
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for module.cluster.provider.digitalocean serving module.cluster.digitalocean_kubernetes_node_pool.workers
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "module.cluster.digitalocean_kubernetes_node_pool.workers" (*terraform.NodeRefreshableManagedResource) needs module.cluster.provider.digitalocean
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.metrics-server
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "helm_release.metrics-server" (*terraform.NodeRefreshableManagedResource) needs provider.helm
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.helm serving data.helm_repository.stable
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "data.helm_repository.stable" (*terraform.NodeRefreshableDataResource) needs provider.helm
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_persistent_volume_claim.image-proxy
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_persistent_volume_claim.image-proxy" (*terraform.NodeRefreshableManagedResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.prometheus-operator
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "helm_release.prometheus-operator" (*terraform.NodeRefreshableManagedResource) needs provider.helm
2020/08/09 19:26:12 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.nginx-ingress
2020/08/09 19:26:12 [DEBUG] ProviderTransformer: "kubernetes_namespace.nginx-ingress" (*terraform.NodeRefreshableManagedResource) needs provider.kubernetes
2020/08/09 19:26:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup - *terraform.NodeRefreshableDataResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains - *terraform.NodeRefreshableDataResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain - *terraform.NodeRefreshableDataResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml - *terraform.NodeRefreshableDataResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.docker-registry - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.prometheus-operator - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.redis - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry-k8s-erros - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.timescaledb - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_deployment.buildkitd - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.grafana-ingress - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.rio-ingress - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.sentry-ingress - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.cert-manager - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-config-json - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-registry-auth - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-certificates - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-credentials - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_service.buildkitd - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeRefreshableManagedResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeRefreshableManagedResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeRefreshableManagedResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.provider.kubernetes - *terraform.NodeApplyableProvider
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  null_resource.cert-manager-setup - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  null_resource.create-timescaledb-setup - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  null_resource.rio-app-domains - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  null_resource.rio-custom-domain - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  null_resource.rio-setup - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  provider.digitalocean - *terraform.NodeApplyableProvider
  provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/08/09 19:26:12 [DEBUG] pruning unused module.cluster.provider.kubernetes
2020/08/09 19:26:12 [DEBUG] pruning unused provider.digitalocean
2020/08/09 19:26:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup - *terraform.NodeRefreshableDataResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains - *terraform.NodeRefreshableDataResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain - *terraform.NodeRefreshableDataResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml - *terraform.NodeRefreshableDataResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.docker-registry - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.prometheus-operator - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.redis - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry-k8s-erros - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.timescaledb - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_deployment.buildkitd - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.grafana-ingress - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.rio-ingress - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.sentry-ingress - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.cert-manager - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-config-json - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-registry-auth - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-certificates - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-credentials - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_service.buildkitd - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeRefreshableManagedResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeRefreshableManagedResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeRefreshableManagedResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  null_resource.cert-manager-setup - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  null_resource.create-timescaledb-setup - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  null_resource.rio-app-domains - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  null_resource.rio-custom-domain - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  null_resource.rio-setup - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/08/09 19:26:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  data.helm_repository.bitnami - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup - *terraform.NodeRefreshableDataResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains - *terraform.NodeRefreshableDataResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain - *terraform.NodeRefreshableDataResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml - *terraform.NodeRefreshableDataResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.docker-registry - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.prometheus-operator - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.redis - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry-k8s-erros - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.timescaledb - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_deployment.buildkitd - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.grafana-ingress - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.rio-ingress - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.sentry-ingress - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.cert-manager - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-config-json - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-registry-auth - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-certificates - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-credentials - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_service.buildkitd - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeRefreshableManagedResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeRefreshableManagedResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeRefreshableManagedResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  null_resource.cert-manager-setup - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  null_resource.create-timescaledb-setup - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  null_resource.rio-app-domains - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  null_resource.rio-custom-domain - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  null_resource.rio-setup - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to data.helm_repository.incubator
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.redis
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.docker
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to data.helm_repository.timescale
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.helm
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to null_resource.create-timescaledb-setup
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to null_resource.create-timescaledb-setup
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_ingress.sentry-ingress
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.redis
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.timescaledb
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_persistent_volume_claim.image-proxy
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.timescale
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to data.local_file.rio-yaml
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.rio
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.metrics-server
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.nginx-ingress
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to null_resource.rio-custom-domain
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to null_resource.rio-custom-domain
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to module.cluster.digitalocean_kubernetes_node_pool.ci
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to data.local_file.rio-app-domains
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to data.helm_repository.bitnami
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_config_map.buildkitd-config
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_ingress.grafana-ingress
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.cert-manager
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to null_resource.cert-manager-setup
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to null_resource.cert-manager-setup
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.postgres-ha
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.buildkitd
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to module.cluster.digitalocean_kubernetes_cluster.dish
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.prometheus-operator
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.cloudflare-dns-api-token
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to data.local_file.rio-custom-domain
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.nginx-ingress
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to null_resource.rio-setup
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to null_resource.rio-setup
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.null
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.docker-config-json
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.sentry-k8s-erros
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.kubernetes
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.sentry
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.timescale-certificates
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.docker-registry
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.local
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to null_resource.rio-app-domains
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to null_resource.rio-app-domains
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to module.cluster.digitalocean_kubernetes_node_pool.workers
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.buildkitd
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.cert-manager
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to module.cluster.digitalocean_kubernetes_node_pool.ancillary
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to data.local_file.cert_manager_setup
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to data.helm_repository.jetstack
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to data.helm_repository.sentry
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.postgres-ha
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.docker-registry-auth
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.metrics-server
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.timescale-credentials
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to data.helm_repository.stable
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching provider config schema to module.cluster.provider.digitalocean
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.sentry
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_ingress.rio-ingress
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.monitoring
2020/08/09 19:26:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_ingress.docker-registry-ingress
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "helm_release.prometheus-operator" references: [var.GRAFANA_PASSWORD]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_secret.cloudflare-dns-api-token" references: [helm_release.cert-manager var.CLOUDFLARE_DNS_API_TOKEN]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "data.local_file.rio-custom-domain" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.cert_manager_version" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.TIMESCALE_REPLICATION_PASS" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "module.cluster.output.cluster-id" references: [module.cluster.digitalocean_kubernetes_cluster.dish]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_namespace.nginx-ingress" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "null_resource.rio-setup" references: [helm_release.cert-manager data.local_file.rio-yaml data.local_file.rio-yaml]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.DO_DISH_KEY" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.DO_SPACES_SECRET" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "provider.null" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_secret.docker-config-json" references: [var.DOCKER_CONFIG_JSON]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "helm_release.sentry-k8s-erros" references: [var.K8S_DSN]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "provider.kubernetes" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_namespace.sentry" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_secret.timescale-certificates" references: [kubernetes_namespace.timescale]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.SENTRY_USER_PASS" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "helm_release.docker-registry" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.CLOUDFLARE_DNS_API_TOKEN" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "provider.local" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "null_resource.rio-app-domains" references: [null_resource.rio-setup data.local_file.rio-app-domains data.local_file.rio-app-domains]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "module.cluster.digitalocean_kubernetes_node_pool.workers" references: [module.cluster.digitalocean_kubernetes_cluster.dish]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_service.buildkitd" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_namespace.cert-manager" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "module.cluster.digitalocean_kubernetes_node_pool.ancillary" references: [module.cluster.digitalocean_kubernetes_cluster.dish]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "data.local_file.cert_manager_setup" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "data.helm_repository.jetstack" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "data.helm_repository.sentry" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_namespace.postgres-ha" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_secret.docker-registry-auth" references: [var.DOCKER_REGISTRY_HTTP_AUTH]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "helm_release.metrics-server" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_secret.timescale-credentials" references: [kubernetes_namespace.timescale var.TIMESCALE_SU_PASS var.TIMESCALE_REPLICATION_PASS var.TIMESCALE_ADMIN_PASS]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "data.helm_repository.stable" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.SENTRY_PG_PASS" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.dish_domain" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.TIMESCALE_ADMIN_PASS" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.DO_SPACES_ID" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.K8S_DSN" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "module.cluster.provider.digitalocean" references: [module.cluster.var.DO_DISH_KEY]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "helm_release.sentry" references: [var.SENTRY_PG_PASS var.SENTRY_USER_PASS var.GMAIL_APP_PASSWORD]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_ingress.rio-ingress" references: [helm_release.cert-manager var.dish_domain var.dish_domain var.dish_domain var.dish_domain]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_namespace.monitoring" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_ingress.docker-registry-ingress" references: [var.dish_domain var.dish_domain]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "data.helm_repository.incubator" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "helm_release.redis" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_namespace.docker" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "data.helm_repository.timescale" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.DOCKER_REGISTRY_HTTP_AUTH" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.TIMESCALE_SU_PASS" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "provider.helm" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "null_resource.create-timescaledb-setup" references: [helm_release.timescaledb]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_ingress.sentry-ingress" references: [var.dish_domain var.dish_domain]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_namespace.redis" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "helm_release.timescaledb" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_persistent_volume_claim.image-proxy" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_namespace.timescale" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "data.local_file.rio-yaml" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.DOCKER_CONFIG_JSON" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.GMAIL_APP_PASSWORD" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_namespace.rio" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_namespace.metrics-server" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "helm_release.nginx-ingress" references: [data.helm_repository.stable]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.POSTGRES_PASSWORD" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.GRAFANA_PASSWORD" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "null_resource.rio-custom-domain" references: [null_resource.rio-setup data.local_file.rio-custom-domain data.local_file.rio-custom-domain]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "module.cluster.digitalocean_kubernetes_node_pool.ci" references: [module.cluster.digitalocean_kubernetes_cluster.dish]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "data.local_file.rio-app-domains" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_config_map.buildkitd-config" references: [var.DOCKER_CONFIG_JSON]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_ingress.grafana-ingress" references: [var.dish_domain var.dish_domain]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "helm_release.cert-manager" references: [var.cert_manager_version data.helm_repository.jetstack]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "null_resource.cert-manager-setup" references: [helm_release.cert-manager data.local_file.cert_manager_setup data.local_file.cert_manager_setup]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "helm_release.postgres-ha" references: [var.POSTGRES_PASSWORD var.POSTGRES_REPMGR_PASSWORD]
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "kubernetes_deployment.buildkitd" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "module.cluster.digitalocean_kubernetes_cluster.dish" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "data.helm_repository.bitnami" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "var.POSTGRES_REPMGR_PASSWORD" references: []
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "module.cluster.var.DO_DISH_KEY" references: [var.DO_DISH_KEY]
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup - *terraform.NodeRefreshableDataResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains - *terraform.NodeRefreshableDataResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain - *terraform.NodeRefreshableDataResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml - *terraform.NodeRefreshableDataResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
    data.helm_repository.jetstack - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
    var.cert_manager_version - *terraform.NodeRootVariable
  helm_release.docker-registry - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress - *terraform.NodeRefreshableManagedResource
    data.helm_repository.stable - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  helm_release.prometheus-operator - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
    var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  helm_release.redis - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
    var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
    var.SENTRY_PG_PASS - *terraform.NodeRootVariable
    var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  helm_release.sentry-k8s-erros - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
    var.K8S_DSN - *terraform.NodeRootVariable
  helm_release.timescaledb - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  kubernetes_deployment.buildkitd - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.grafana-ingress - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.rio-ingress - *terraform.NodeRefreshableManagedResource
    helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.sentry-ingress - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_namespace.cert-manager - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeRefreshableManagedResource
    helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  kubernetes_secret.docker-config-json - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  kubernetes_secret.docker-registry-auth - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  kubernetes_secret.timescale-certificates - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.timescale - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-credentials - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.timescale - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  kubernetes_service.buildkitd - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeRefreshableManagedResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeRefreshableManagedResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeRefreshableManagedResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResource
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
  null_resource.cert-manager-setup - *terraform.NodeRefreshableManagedResource
    data.local_file.cert_manager_setup - *terraform.NodeRefreshableDataResource
    helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  null_resource.create-timescaledb-setup - *terraform.NodeRefreshableManagedResource
    helm_release.timescaledb - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  null_resource.rio-app-domains - *terraform.NodeRefreshableManagedResource
    data.local_file.rio-app-domains - *terraform.NodeRefreshableDataResource
    null_resource.rio-setup - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  null_resource.rio-custom-domain - *terraform.NodeRefreshableManagedResource
    data.local_file.rio-custom-domain - *terraform.NodeRefreshableDataResource
    null_resource.rio-setup - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  null_resource.rio-setup - *terraform.NodeRefreshableManagedResource
    data.local_file.rio-yaml - *terraform.NodeRefreshableDataResource
    helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: null_resource.create-timescaledb-setup depends on [helm_release.timescaledb]
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: kubernetes_ingress.sentry-ingress depends on []
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: kubernetes_namespace.redis depends on []
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: helm_release.timescaledb depends on []
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: kubernetes_persistent_volume_claim.image-proxy depends on []
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: kubernetes_namespace.timescale depends on []
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: kubernetes_namespace.rio depends on []
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: kubernetes_namespace.metrics-server depends on []
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: helm_release.nginx-ingress depends on []
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: null_resource.rio-custom-domain depends on [helm_release.cert-manager null_resource.rio-setup]
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: module.cluster.digitalocean_kubernetes_node_pool.ci depends on [module.cluster.digitalocean_kubernetes_cluster.dish]
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: module.cluster.digitalocean_kubernetes_cluster.dish depends on []
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: kubernetes_config_map.buildkitd-config depends on []
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: kubernetes_ingress.grafana-ingress depends on []
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: helm_release.cert-manager depends on []
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: null_resource.cert-manager-setup depends on [helm_release.cert-manager]
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: helm_release.postgres-ha depends on []
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.buildkitd depends on []
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: helm_release.prometheus-operator depends on []
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: kubernetes_secret.cloudflare-dns-api-token depends on [helm_release.cert-manager]
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: kubernetes_namespace.nginx-ingress depends on []
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: null_resource.rio-setup depends on [helm_release.cert-manager]
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: kubernetes_secret.docker-config-json depends on []
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: helm_release.sentry-k8s-erros depends on []
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: kubernetes_namespace.sentry depends on []
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: kubernetes_secret.timescale-certificates depends on [kubernetes_namespace.timescale]
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: helm_release.docker-registry depends on []
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: null_resource.rio-app-domains depends on [helm_release.cert-manager null_resource.rio-setup]
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: module.cluster.digitalocean_kubernetes_node_pool.workers depends on [module.cluster.digitalocean_kubernetes_cluster.dish]
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: kubernetes_service.buildkitd depends on []
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: kubernetes_namespace.cert-manager depends on []
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: module.cluster.digitalocean_kubernetes_node_pool.ancillary depends on [module.cluster.digitalocean_kubernetes_cluster.dish]
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: kubernetes_namespace.postgres-ha depends on []
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: kubernetes_secret.docker-registry-auth depends on []
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: helm_release.metrics-server depends on []
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: kubernetes_secret.timescale-credentials depends on [kubernetes_namespace.timescale]
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: helm_release.sentry depends on []
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: kubernetes_ingress.rio-ingress depends on [helm_release.cert-manager]
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: kubernetes_namespace.monitoring depends on []
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: kubernetes_ingress.docker-registry-ingress depends on []
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: helm_release.redis depends on []
2020/08/09 19:26:12 [TRACE] AttachDependenciesTransformer: kubernetes_namespace.docker depends on []
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup - *terraform.NodeRefreshableDataResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains - *terraform.NodeRefreshableDataResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain - *terraform.NodeRefreshableDataResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml - *terraform.NodeRefreshableDataResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
    data.helm_repository.jetstack - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
    var.cert_manager_version - *terraform.NodeRootVariable
  helm_release.docker-registry - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress - *terraform.NodeRefreshableManagedResource
    data.helm_repository.stable - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  helm_release.prometheus-operator - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
    var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  helm_release.redis - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
    var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
    var.SENTRY_PG_PASS - *terraform.NodeRootVariable
    var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  helm_release.sentry-k8s-erros - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
    var.K8S_DSN - *terraform.NodeRootVariable
  helm_release.timescaledb - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  kubernetes_deployment.buildkitd - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.grafana-ingress - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.rio-ingress - *terraform.NodeRefreshableManagedResource
    helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.sentry-ingress - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_namespace.cert-manager - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeRefreshableManagedResource
    helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  kubernetes_secret.docker-config-json - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  kubernetes_secret.docker-registry-auth - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  kubernetes_secret.timescale-certificates - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.timescale - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-credentials - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.timescale - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  kubernetes_service.buildkitd - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeRefreshableManagedResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeRefreshableManagedResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeRefreshableManagedResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResource
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  module.cluster.provider.digitalocean (close) - *terraform.graphNodeCloseProvider
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResource
    module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeRefreshableManagedResource
    module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeRefreshableManagedResource
    module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeRefreshableManagedResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
  null_resource.cert-manager-setup - *terraform.NodeRefreshableManagedResource
    data.local_file.cert_manager_setup - *terraform.NodeRefreshableDataResource
    helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  null_resource.create-timescaledb-setup - *terraform.NodeRefreshableManagedResource
    helm_release.timescaledb - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  null_resource.rio-app-domains - *terraform.NodeRefreshableManagedResource
    data.local_file.rio-app-domains - *terraform.NodeRefreshableDataResource
    null_resource.rio-setup - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  null_resource.rio-custom-domain - *terraform.NodeRefreshableManagedResource
    data.local_file.rio-custom-domain - *terraform.NodeRefreshableDataResource
    null_resource.rio-setup - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  null_resource.rio-setup - *terraform.NodeRefreshableManagedResource
    data.local_file.rio-yaml - *terraform.NodeRefreshableDataResource
    helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  provider.helm - *terraform.NodeApplyableProvider
  provider.helm (close) - *terraform.graphNodeCloseProvider
    data.helm_repository.bitnami - *terraform.NodeRefreshableDataResource
    data.helm_repository.incubator - *terraform.NodeRefreshableDataResource
    data.helm_repository.jetstack - *terraform.NodeRefreshableDataResource
    data.helm_repository.sentry - *terraform.NodeRefreshableDataResource
    data.helm_repository.stable - *terraform.NodeRefreshableDataResource
    data.helm_repository.timescale - *terraform.NodeRefreshableDataResource
    helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
    helm_release.docker-registry - *terraform.NodeRefreshableManagedResource
    helm_release.metrics-server - *terraform.NodeRefreshableManagedResource
    helm_release.nginx-ingress - *terraform.NodeRefreshableManagedResource
    helm_release.postgres-ha - *terraform.NodeRefreshableManagedResource
    helm_release.prometheus-operator - *terraform.NodeRefreshableManagedResource
    helm_release.redis - *terraform.NodeRefreshableManagedResource
    helm_release.sentry - *terraform.NodeRefreshableManagedResource
    helm_release.sentry-k8s-erros - *terraform.NodeRefreshableManagedResource
    helm_release.timescaledb - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.kubernetes (close) - *terraform.graphNodeCloseProvider
    kubernetes_config_map.buildkitd-config - *terraform.NodeRefreshableManagedResource
    kubernetes_deployment.buildkitd - *terraform.NodeRefreshableManagedResource
    kubernetes_ingress.docker-registry-ingress - *terraform.NodeRefreshableManagedResource
    kubernetes_ingress.grafana-ingress - *terraform.NodeRefreshableManagedResource
    kubernetes_ingress.rio-ingress - *terraform.NodeRefreshableManagedResource
    kubernetes_ingress.sentry-ingress - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.cert-manager - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.docker - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.metrics-server - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.monitoring - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.nginx-ingress - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.postgres-ha - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.redis - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.rio - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.sentry - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.timescale - *terraform.NodeRefreshableManagedResource
    kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeRefreshableManagedResource
    kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeRefreshableManagedResource
    kubernetes_secret.docker-config-json - *terraform.NodeRefreshableManagedResource
    kubernetes_secret.docker-registry-auth - *terraform.NodeRefreshableManagedResource
    kubernetes_secret.timescale-certificates - *terraform.NodeRefreshableManagedResource
    kubernetes_secret.timescale-credentials - *terraform.NodeRefreshableManagedResource
    kubernetes_service.buildkitd - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.local (close) - *terraform.graphNodeCloseProvider
    data.local_file.cert_manager_setup - *terraform.NodeRefreshableDataResource
    data.local_file.rio-app-domains - *terraform.NodeRefreshableDataResource
    data.local_file.rio-custom-domain - *terraform.NodeRefreshableDataResource
    data.local_file.rio-yaml - *terraform.NodeRefreshableDataResource
    provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  provider.null (close) - *terraform.graphNodeCloseProvider
    null_resource.cert-manager-setup - *terraform.NodeRefreshableManagedResource
    null_resource.create-timescaledb-setup - *terraform.NodeRefreshableManagedResource
    null_resource.rio-app-domains - *terraform.NodeRefreshableManagedResource
    null_resource.rio-custom-domain - *terraform.NodeRefreshableManagedResource
    null_resource.rio-setup - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup - *terraform.NodeRefreshableDataResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains - *terraform.NodeRefreshableDataResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain - *terraform.NodeRefreshableDataResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml - *terraform.NodeRefreshableDataResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
    data.helm_repository.jetstack - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
    var.cert_manager_version - *terraform.NodeRootVariable
  helm_release.docker-registry - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress - *terraform.NodeRefreshableManagedResource
    data.helm_repository.stable - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  helm_release.prometheus-operator - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
    var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  helm_release.redis - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
    var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
    var.SENTRY_PG_PASS - *terraform.NodeRootVariable
    var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  helm_release.sentry-k8s-erros - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
    var.K8S_DSN - *terraform.NodeRootVariable
  helm_release.timescaledb - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  kubernetes_deployment.buildkitd - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.grafana-ingress - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.rio-ingress - *terraform.NodeRefreshableManagedResource
    helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.sentry-ingress - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_namespace.cert-manager - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeRefreshableManagedResource
    helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  kubernetes_secret.docker-config-json - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  kubernetes_secret.docker-registry-auth - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  kubernetes_secret.timescale-certificates - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.timescale - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-credentials - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.timescale - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  kubernetes_service.buildkitd - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeRefreshableManagedResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeRefreshableManagedResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeRefreshableManagedResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResource
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  module.cluster.provider.digitalocean (close) - *terraform.graphNodeCloseProvider
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResource
    module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeRefreshableManagedResource
    module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeRefreshableManagedResource
    module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeRefreshableManagedResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
  null_resource.cert-manager-setup - *terraform.NodeRefreshableManagedResource
    data.local_file.cert_manager_setup - *terraform.NodeRefreshableDataResource
    helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  null_resource.create-timescaledb-setup - *terraform.NodeRefreshableManagedResource
    helm_release.timescaledb - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  null_resource.rio-app-domains - *terraform.NodeRefreshableManagedResource
    data.local_file.rio-app-domains - *terraform.NodeRefreshableDataResource
    null_resource.rio-setup - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  null_resource.rio-custom-domain - *terraform.NodeRefreshableManagedResource
    data.local_file.rio-custom-domain - *terraform.NodeRefreshableDataResource
    null_resource.rio-setup - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  null_resource.rio-setup - *terraform.NodeRefreshableManagedResource
    data.local_file.rio-yaml - *terraform.NodeRefreshableDataResource
    helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  provider.helm - *terraform.NodeApplyableProvider
  provider.helm (close) - *terraform.graphNodeCloseProvider
    data.helm_repository.bitnami - *terraform.NodeRefreshableDataResource
    data.helm_repository.incubator - *terraform.NodeRefreshableDataResource
    data.helm_repository.jetstack - *terraform.NodeRefreshableDataResource
    data.helm_repository.sentry - *terraform.NodeRefreshableDataResource
    data.helm_repository.stable - *terraform.NodeRefreshableDataResource
    data.helm_repository.timescale - *terraform.NodeRefreshableDataResource
    helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
    helm_release.docker-registry - *terraform.NodeRefreshableManagedResource
    helm_release.metrics-server - *terraform.NodeRefreshableManagedResource
    helm_release.nginx-ingress - *terraform.NodeRefreshableManagedResource
    helm_release.postgres-ha - *terraform.NodeRefreshableManagedResource
    helm_release.prometheus-operator - *terraform.NodeRefreshableManagedResource
    helm_release.redis - *terraform.NodeRefreshableManagedResource
    helm_release.sentry - *terraform.NodeRefreshableManagedResource
    helm_release.sentry-k8s-erros - *terraform.NodeRefreshableManagedResource
    helm_release.timescaledb - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.kubernetes (close) - *terraform.graphNodeCloseProvider
    kubernetes_config_map.buildkitd-config - *terraform.NodeRefreshableManagedResource
    kubernetes_deployment.buildkitd - *terraform.NodeRefreshableManagedResource
    kubernetes_ingress.docker-registry-ingress - *terraform.NodeRefreshableManagedResource
    kubernetes_ingress.grafana-ingress - *terraform.NodeRefreshableManagedResource
    kubernetes_ingress.rio-ingress - *terraform.NodeRefreshableManagedResource
    kubernetes_ingress.sentry-ingress - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.cert-manager - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.docker - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.metrics-server - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.monitoring - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.nginx-ingress - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.postgres-ha - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.redis - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.rio - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.sentry - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.timescale - *terraform.NodeRefreshableManagedResource
    kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeRefreshableManagedResource
    kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeRefreshableManagedResource
    kubernetes_secret.docker-config-json - *terraform.NodeRefreshableManagedResource
    kubernetes_secret.docker-registry-auth - *terraform.NodeRefreshableManagedResource
    kubernetes_secret.timescale-certificates - *terraform.NodeRefreshableManagedResource
    kubernetes_secret.timescale-credentials - *terraform.NodeRefreshableManagedResource
    kubernetes_service.buildkitd - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.local (close) - *terraform.graphNodeCloseProvider
    data.local_file.cert_manager_setup - *terraform.NodeRefreshableDataResource
    data.local_file.rio-app-domains - *terraform.NodeRefreshableDataResource
    data.local_file.rio-custom-domain - *terraform.NodeRefreshableDataResource
    data.local_file.rio-yaml - *terraform.NodeRefreshableDataResource
    provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  provider.null (close) - *terraform.graphNodeCloseProvider
    null_resource.cert-manager-setup - *terraform.NodeRefreshableManagedResource
    null_resource.create-timescaledb-setup - *terraform.NodeRefreshableManagedResource
    null_resource.rio-app-domains - *terraform.NodeRefreshableManagedResource
    null_resource.rio-custom-domain - *terraform.NodeRefreshableManagedResource
    null_resource.rio-setup - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
    module.cluster.provider.digitalocean (close) - *terraform.graphNodeCloseProvider
    provider.helm (close) - *terraform.graphNodeCloseProvider
    provider.kubernetes (close) - *terraform.graphNodeCloseProvider
    provider.local (close) - *terraform.graphNodeCloseProvider
    provider.null (close) - *terraform.graphNodeCloseProvider
    var.DO_SPACES_ID - *terraform.NodeRootVariable
    var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale - *terraform.NodeRefreshableDataResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup - *terraform.NodeRefreshableDataResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains - *terraform.NodeRefreshableDataResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain - *terraform.NodeRefreshableDataResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml - *terraform.NodeRefreshableDataResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
    data.helm_repository.jetstack - *terraform.NodeRefreshableDataResource
    var.cert_manager_version - *terraform.NodeRootVariable
  helm_release.docker-registry - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress - *terraform.NodeRefreshableManagedResource
    data.helm_repository.stable - *terraform.NodeRefreshableDataResource
  helm_release.postgres-ha - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  helm_release.prometheus-operator - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
    var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  helm_release.redis - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
    var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
    var.SENTRY_PG_PASS - *terraform.NodeRootVariable
    var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  helm_release.sentry-k8s-erros - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
    var.K8S_DSN - *terraform.NodeRootVariable
  helm_release.timescaledb - *terraform.NodeRefreshableManagedResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  kubernetes_deployment.buildkitd - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.grafana-ingress - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.rio-ingress - *terraform.NodeRefreshableManagedResource
    helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.sentry-ingress - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_namespace.cert-manager - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeRefreshableManagedResource
    helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  kubernetes_secret.docker-config-json - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  kubernetes_secret.docker-registry-auth - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  kubernetes_secret.timescale-certificates - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.timescale - *terraform.NodeRefreshableManagedResource
  kubernetes_secret.timescale-credentials - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.timescale - *terraform.NodeRefreshableManagedResource
    var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  kubernetes_service.buildkitd - *terraform.NodeRefreshableManagedResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeRefreshableManagedResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResource
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeRefreshableManagedResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResource
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeRefreshableManagedResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResource
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResource
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  module.cluster.provider.digitalocean (close) - *terraform.graphNodeCloseProvider
    module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeRefreshableManagedResource
    module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeRefreshableManagedResource
    module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeRefreshableManagedResource
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
  null_resource.cert-manager-setup - *terraform.NodeRefreshableManagedResource
    data.local_file.cert_manager_setup - *terraform.NodeRefreshableDataResource
    helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  null_resource.create-timescaledb-setup - *terraform.NodeRefreshableManagedResource
    helm_release.timescaledb - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  null_resource.rio-app-domains - *terraform.NodeRefreshableManagedResource
    data.local_file.rio-app-domains - *terraform.NodeRefreshableDataResource
    null_resource.rio-setup - *terraform.NodeRefreshableManagedResource
  null_resource.rio-custom-domain - *terraform.NodeRefreshableManagedResource
    data.local_file.rio-custom-domain - *terraform.NodeRefreshableDataResource
    null_resource.rio-setup - *terraform.NodeRefreshableManagedResource
  null_resource.rio-setup - *terraform.NodeRefreshableManagedResource
    data.local_file.rio-yaml - *terraform.NodeRefreshableDataResource
    helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
    provider.null - *terraform.NodeApplyableProvider
  provider.helm - *terraform.NodeApplyableProvider
  provider.helm (close) - *terraform.graphNodeCloseProvider
    data.helm_repository.bitnami - *terraform.NodeRefreshableDataResource
    data.helm_repository.incubator - *terraform.NodeRefreshableDataResource
    data.helm_repository.sentry - *terraform.NodeRefreshableDataResource
    data.helm_repository.timescale - *terraform.NodeRefreshableDataResource
    helm_release.cert-manager - *terraform.NodeRefreshableManagedResource
    helm_release.docker-registry - *terraform.NodeRefreshableManagedResource
    helm_release.metrics-server - *terraform.NodeRefreshableManagedResource
    helm_release.nginx-ingress - *terraform.NodeRefreshableManagedResource
    helm_release.postgres-ha - *terraform.NodeRefreshableManagedResource
    helm_release.prometheus-operator - *terraform.NodeRefreshableManagedResource
    helm_release.redis - *terraform.NodeRefreshableManagedResource
    helm_release.sentry - *terraform.NodeRefreshableManagedResource
    helm_release.sentry-k8s-erros - *terraform.NodeRefreshableManagedResource
    helm_release.timescaledb - *terraform.NodeRefreshableManagedResource
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.kubernetes (close) - *terraform.graphNodeCloseProvider
    kubernetes_config_map.buildkitd-config - *terraform.NodeRefreshableManagedResource
    kubernetes_deployment.buildkitd - *terraform.NodeRefreshableManagedResource
    kubernetes_ingress.docker-registry-ingress - *terraform.NodeRefreshableManagedResource
    kubernetes_ingress.grafana-ingress - *terraform.NodeRefreshableManagedResource
    kubernetes_ingress.rio-ingress - *terraform.NodeRefreshableManagedResource
    kubernetes_ingress.sentry-ingress - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.cert-manager - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.docker - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.metrics-server - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.monitoring - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.nginx-ingress - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.postgres-ha - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.redis - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.rio - *terraform.NodeRefreshableManagedResource
    kubernetes_namespace.sentry - *terraform.NodeRefreshableManagedResource
    kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeRefreshableManagedResource
    kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeRefreshableManagedResource
    kubernetes_secret.docker-config-json - *terraform.NodeRefreshableManagedResource
    kubernetes_secret.docker-registry-auth - *terraform.NodeRefreshableManagedResource
    kubernetes_secret.timescale-certificates - *terraform.NodeRefreshableManagedResource
    kubernetes_secret.timescale-credentials - *terraform.NodeRefreshableManagedResource
    kubernetes_service.buildkitd - *terraform.NodeRefreshableManagedResource
  provider.local - *terraform.NodeApplyableProvider
  provider.local (close) - *terraform.graphNodeCloseProvider
    data.local_file.cert_manager_setup - *terraform.NodeRefreshableDataResource
    data.local_file.rio-app-domains - *terraform.NodeRefreshableDataResource
    data.local_file.rio-custom-domain - *terraform.NodeRefreshableDataResource
    data.local_file.rio-yaml - *terraform.NodeRefreshableDataResource
  provider.null - *terraform.NodeApplyableProvider
  provider.null (close) - *terraform.graphNodeCloseProvider
    null_resource.cert-manager-setup - *terraform.NodeRefreshableManagedResource
    null_resource.create-timescaledb-setup - *terraform.NodeRefreshableManagedResource
    null_resource.rio-app-domains - *terraform.NodeRefreshableManagedResource
    null_resource.rio-custom-domain - *terraform.NodeRefreshableManagedResource
  root - terraform.graphNodeRoot
    module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
    module.cluster.provider.digitalocean (close) - *terraform.graphNodeCloseProvider
    provider.helm (close) - *terraform.graphNodeCloseProvider
    provider.kubernetes (close) - *terraform.graphNodeCloseProvider
    provider.local (close) - *terraform.graphNodeCloseProvider
    provider.null (close) - *terraform.graphNodeCloseProvider
    var.DO_SPACES_ID - *terraform.NodeRootVariable
    var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:12 [DEBUG] Starting graph walk: walkRefresh
2020/08/09 19:26:12 [TRACE] dag/walk: updating graph
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_secret.timescale-credentials"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "data.local_file.rio-yaml"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_ingress.grafana-ingress"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.DO_SPACES_SECRET"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "helm_release.metrics-server"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "null_resource.rio-setup"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "provider.local (close)"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.SENTRY_USER_PASS"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "data.helm_repository.jetstack"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.TIMESCALE_SU_PASS"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "helm_release.timescaledb"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "null_resource.create-timescaledb-setup"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.POSTGRES_PASSWORD"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.cert-manager"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "data.helm_repository.stable"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "null_resource.cert-manager-setup"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "helm_release.postgres-ha"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.POSTGRES_REPMGR_PASSWORD"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_secret.timescale-certificates"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "data.local_file.cert_manager_setup"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "data.helm_repository.sentry"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.rio"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "helm_release.cert-manager"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "module.cluster.digitalocean_kubernetes_cluster.dish"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "null_resource.rio-app-domains"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "module.cluster.digitalocean_kubernetes_node_pool.workers"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "helm_release.sentry"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_ingress.sentry-ingress"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "provider.helm (close)"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.DO_DISH_KEY"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.TIMESCALE_REPLICATION_PASS"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.sentry"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "module.cluster.digitalocean_kubernetes_node_pool.ancillary"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.K8S_DSN"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "data.helm_repository.incubator"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.timescale"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "helm_release.nginx-ingress"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "data.local_file.rio-custom-domain"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "provider.kubernetes (close)"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.redis"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "null_resource.rio-custom-domain"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.DO_SPACES_ID"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_secret.docker-config-json"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "helm_release.sentry-k8s-erros"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.SENTRY_PG_PASS"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "root"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "helm_release.redis"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "data.local_file.rio-app-domains"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "helm_release.prometheus-operator"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "module.cluster.digitalocean_kubernetes_node_pool.ci"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.CLOUDFLARE_DNS_API_TOKEN"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.dish_domain"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.DOCKER_REGISTRY_HTTP_AUTH"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "provider.helm"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_persistent_volume_claim.image-proxy"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.GRAFANA_PASSWORD"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_ingress.rio-ingress"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "module.cluster.provider.digitalocean (close)"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.GMAIL_APP_PASSWORD"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "module.cluster.var.DO_DISH_KEY"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.nginx-ingress"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_service.buildkitd"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_secret.cloudflare-dns-api-token"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "provider.null"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "provider.local"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.docker"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "data.helm_repository.bitnami"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_config_map.buildkitd-config"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.cert_manager_version"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.postgres-ha"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "module.cluster.provider.digitalocean"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.monitoring"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "data.helm_repository.timescale"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_deployment.buildkitd"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "provider.null (close)"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_ingress.docker-registry-ingress"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.DOCKER_CONFIG_JSON"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.metrics-server"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "module.cluster.output.cluster-id"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "kubernetes_secret.docker-registry-auth"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "var.TIMESCALE_ADMIN_PASS"
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "helm_release.docker-registry"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.sentry" waiting on "provider.helm"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_secret.docker-registry-auth" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.postgres-ha"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_namespace.cert-manager" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.timescaledb" waiting on "provider.helm"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "null_resource.rio-custom-domain" waiting on "null_resource.rio-setup"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.postgres-ha" waiting on "provider.helm"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.local (close)" waiting on "data.local_file.rio-app-domains"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_namespace.metrics-server" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_deployment.buildkitd"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.sentry"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_namespace.nginx-ingress" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.postgres-ha" waiting on "var.POSTGRES_REPMGR_PASSWORD"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_persistent_volume_claim.image-proxy"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "module.cluster.provider.digitalocean (close)" waiting on "module.cluster.digitalocean_kubernetes_node_pool.ci"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_secret.cloudflare-dns-api-token"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "data.helm_repository.incubator"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.null (close)" waiting on "null_resource.rio-custom-domain"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "module.cluster.output.cluster-id" waiting on "module.cluster.digitalocean_kubernetes_cluster.dish"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_secret.docker-registry-auth" waiting on "var.DOCKER_REGISTRY_HTTP_AUTH"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "module.cluster.digitalocean_kubernetes_node_pool.workers" waiting on "module.cluster.digitalocean_kubernetes_cluster.dish"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.sentry" waiting on "var.SENTRY_PG_PASS"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "data.helm_repository.sentry" waiting on "provider.helm"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.docker"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "data.helm_repository.stable" waiting on "provider.helm"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_ingress.grafana-ingress" waiting on "var.dish_domain"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_ingress.grafana-ingress" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "module.cluster.provider.digitalocean" waiting on "module.cluster.var.DO_DISH_KEY"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "root" waiting on "provider.null (close)"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "null_resource.rio-custom-domain" waiting on "data.local_file.rio-custom-domain"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_secret.docker-config-json" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.cert-manager" waiting on "data.helm_repository.jetstack"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.nginx-ingress"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "null_resource.rio-setup" waiting on "helm_release.cert-manager"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_ingress.docker-registry-ingress"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_ingress.grafana-ingress"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_deployment.buildkitd" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_ingress.sentry-ingress" waiting on "var.dish_domain"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_ingress.rio-ingress" waiting on "helm_release.cert-manager"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.cert-manager"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "data.helm_repository.bitnami" waiting on "provider.helm"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "module.cluster.digitalocean_kubernetes_node_pool.ancillary" waiting on "module.cluster.digitalocean_kubernetes_cluster.dish"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_ingress.docker-registry-ingress" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.metrics-server" waiting on "provider.helm"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.local (close)" waiting on "data.local_file.rio-custom-domain"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_secret.timescale-credentials" waiting on "kubernetes_namespace.timescale"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_ingress.docker-registry-ingress" waiting on "var.dish_domain"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_namespace.redis" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.redis"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.redis" waiting on "provider.helm"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "module.cluster.digitalocean_kubernetes_cluster.dish" waiting on "module.cluster.provider.digitalocean"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_secret.cloudflare-dns-api-token" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "root" waiting on "module.cluster.provider.digitalocean (close)"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "null_resource.cert-manager-setup" waiting on "data.local_file.cert_manager_setup"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "module.cluster.provider.digitalocean (close)" waiting on "module.cluster.digitalocean_kubernetes_node_pool.ancillary"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.docker-registry" waiting on "provider.helm"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "data.local_file.rio-yaml" waiting on "provider.local"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "null_resource.rio-setup" waiting on "provider.null"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.local (close)" waiting on "data.local_file.rio-yaml"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_namespace.monitoring" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_secret.docker-registry-auth"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_secret.timescale-credentials" waiting on "var.TIMESCALE_SU_PASS"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.postgres-ha"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_ingress.rio-ingress" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "module.cluster.digitalocean_kubernetes_node_pool.ci" waiting on "module.cluster.digitalocean_kubernetes_cluster.dish"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_secret.timescale-credentials" waiting on "var.TIMESCALE_REPLICATION_PASS"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.prometheus-operator" waiting on "provider.helm"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.redis"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_service.buildkitd" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.rio"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_secret.docker-config-json" waiting on "var.DOCKER_CONFIG_JSON"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "null_resource.create-timescaledb-setup" waiting on "provider.null"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_config_map.buildkitd-config" waiting on "var.DOCKER_CONFIG_JSON"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "module.cluster.provider.digitalocean (close)" waiting on "module.cluster.digitalocean_kubernetes_node_pool.workers"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_ingress.sentry-ingress" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "null_resource.cert-manager-setup" waiting on "helm_release.cert-manager"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.metrics-server"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.timescaledb"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.metrics-server"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "data.helm_repository.timescale"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "null_resource.rio-setup" waiting on "data.local_file.rio-yaml"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_secret.timescale-certificates"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "data.local_file.rio-custom-domain" waiting on "provider.local"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_namespace.rio" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "root" waiting on "provider.local (close)"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_ingress.rio-ingress" waiting on "var.dish_domain"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.nginx-ingress" waiting on "data.helm_repository.stable"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "root" waiting on "var.DO_SPACES_ID"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.local (close)" waiting on "data.local_file.cert_manager_setup"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "null_resource.create-timescaledb-setup" waiting on "helm_release.timescaledb"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "data.local_file.cert_manager_setup" waiting on "provider.local"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.postgres-ha" waiting on "var.POSTGRES_PASSWORD"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_ingress.sentry-ingress"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.prometheus-operator"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.sentry" waiting on "var.GMAIL_APP_PASSWORD"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "data.helm_repository.sentry"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "data.helm_repository.bitnami"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.null (close)" waiting on "null_resource.create-timescaledb-setup"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_config_map.buildkitd-config"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.sentry-k8s-erros"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_secret.timescale-certificates" waiting on "kubernetes_namespace.timescale"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "data.helm_repository.jetstack" waiting on "provider.helm"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.sentry"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_persistent_volume_claim.image-proxy" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "root" waiting on "provider.helm (close)"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_namespace.timescale" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_ingress.rio-ingress"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_secret.docker-config-json"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.null (close)" waiting on "null_resource.rio-app-domains"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "null_resource.rio-app-domains" waiting on "null_resource.rio-setup"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "root" waiting on "var.DO_SPACES_SECRET"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_secret.timescale-credentials" waiting on "var.TIMESCALE_ADMIN_PASS"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_secret.cloudflare-dns-api-token" waiting on "var.CLOUDFLARE_DNS_API_TOKEN"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.docker-registry"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.sentry-k8s-erros" waiting on "provider.helm"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_namespace.sentry" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "module.cluster.var.DO_DISH_KEY" waiting on "var.DO_DISH_KEY"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "null_resource.cert-manager-setup" waiting on "provider.null"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.prometheus-operator" waiting on "var.GRAFANA_PASSWORD"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.sentry" waiting on "var.SENTRY_USER_PASS"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "root" waiting on "module.cluster.output.cluster-id"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_namespace.docker" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.nginx-ingress"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "data.helm_repository.timescale" waiting on "provider.helm"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_secret.cloudflare-dns-api-token" waiting on "helm_release.cert-manager"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "data.local_file.rio-app-domains" waiting on "provider.local"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "null_resource.rio-app-domains" waiting on "data.local_file.rio-app-domains"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.monitoring"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.sentry-k8s-erros" waiting on "var.K8S_DSN"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_namespace.postgres-ha" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.cert-manager"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "root" waiting on "provider.kubernetes (close)"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "helm_release.cert-manager" waiting on "var.cert_manager_version"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.null (close)" waiting on "null_resource.cert-manager-setup"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_service.buildkitd"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_secret.timescale-credentials"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "kubernetes_config_map.buildkitd-config" waiting on "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] dag/walk: added edge: "data.helm_repository.incubator" waiting on "provider.helm"
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "provider.local (close)", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.redis", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "module.cluster.provider.digitalocean (close)", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_secret.cloudflare-dns-api-token", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.sentry", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.docker", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_ingress.grafana-ingress", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_secret.timescale-credentials", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.monitoring", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "data.helm_repository.jetstack", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "module.cluster.digitalocean_kubernetes_node_pool.workers", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "module.cluster.digitalocean_kubernetes_node_pool.ancillary", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "helm_release.postgres-ha", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_ingress.docker-registry-ingress", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "data.local_file.rio-custom-domain", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "helm_release.sentry-k8s-erros", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "provider.null (close)", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "helm_release.cert-manager", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "null_resource.rio-setup", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "helm_release.redis", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "data.local_file.rio-yaml", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_secret.timescale-certificates", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "data.helm_repository.timescale", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.postgres-ha", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.cert-manager", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_ingress.sentry-ingress", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "module.cluster.var.DO_DISH_KEY", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "helm_release.timescaledb", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "null_resource.rio-custom-domain", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_ingress.rio-ingress", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "data.local_file.rio-app-domains", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "provider.kubernetes (close)", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.nginx-ingress", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "null_resource.cert-manager-setup", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_service.buildkitd", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.rio", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "data.local_file.cert_manager_setup", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "provider.helm (close)", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "data.helm_repository.incubator", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "module.cluster.output.cluster-id", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_deployment.buildkitd", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "data.helm_repository.bitnami", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "module.cluster.digitalocean_kubernetes_cluster.dish", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "helm_release.docker-registry", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.timescale", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "null_resource.rio-app-domains", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.metrics-server", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "data.helm_repository.sentry", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "data.helm_repository.stable", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "module.cluster.provider.digitalocean", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "module.cluster.digitalocean_kubernetes_node_pool.ci", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "null_resource.create-timescaledb-setup", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_persistent_volume_claim.image-proxy", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "helm_release.prometheus-operator", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_secret.docker-registry-auth", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_secret.docker-config-json", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "helm_release.metrics-server", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "helm_release.sentry", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "kubernetes_config_map.buildkitd-config", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: dependencies changed for "helm_release.nginx-ingress", sending new deps
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "provider.null"
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "provider.local"
2020/08/09 19:26:12 [TRACE] vertex "provider.null": starting visit (*terraform.NodeApplyableProvider)
2020/08/09 19:26:12 [TRACE] vertex "provider.local": starting visit (*terraform.NodeApplyableProvider)
2020/08/09 19:26:12 [TRACE] vertex "provider.local": evaluating
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "provider.kubernetes"
2020/08/09 19:26:12 [TRACE] vertex "provider.kubernetes": starting visit (*terraform.NodeApplyableProvider)
2020/08/09 19:26:12 [TRACE] [walkRefresh] Entering eval tree: provider.local
2020/08/09 19:26:12 [TRACE] vertex "provider.kubernetes": evaluating
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.cert_manager_version"
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] vertex "var.cert_manager_version": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/08/09 19:26:12 [TRACE] vertex "var.cert_manager_version": evaluating
2020/08/09 19:26:12 [TRACE] [walkRefresh] Entering eval tree: var.cert_manager_version
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.DO_DISH_KEY"
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.dish_domain"
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.POSTGRES_PASSWORD"
2020/08/09 19:26:12 [TRACE] vertex "var.DO_DISH_KEY": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] vertex "var.POSTGRES_PASSWORD": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] [walkRefresh] Entering eval tree: provider.kubernetes
2020/08/09 19:26:12 [TRACE] vertex "var.DO_DISH_KEY": evaluating
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] [walkRefresh] Entering eval tree: var.DO_DISH_KEY
2020/08/09 19:26:12 [TRACE] vertex "provider.null": evaluating
2020/08/09 19:26:12 [TRACE] [walkRefresh] Entering eval tree: provider.null
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/08/09 19:26:12 [TRACE] vertex "var.POSTGRES_PASSWORD": evaluating
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/08/09 19:26:12 [TRACE] [walkRefresh] Entering eval tree: var.POSTGRES_PASSWORD
2020/08/09 19:26:12 [TRACE] vertex "var.dish_domain": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] [walkRefresh] Exiting eval tree: var.POSTGRES_PASSWORD
2020/08/09 19:26:12 [TRACE] vertex "var.POSTGRES_PASSWORD": visit complete
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.DOCKER_REGISTRY_HTTP_AUTH"
2020/08/09 19:26:12 [TRACE] vertex "var.DOCKER_REGISTRY_HTTP_AUTH": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] vertex "var.DOCKER_REGISTRY_HTTP_AUTH": evaluating
2020/08/09 19:26:12 [TRACE] [walkRefresh] Entering eval tree: var.DOCKER_REGISTRY_HTTP_AUTH
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] [walkRefresh] Exiting eval tree: var.DOCKER_REGISTRY_HTTP_AUTH
2020/08/09 19:26:12 [TRACE] vertex "var.DOCKER_REGISTRY_HTTP_AUTH": visit complete
2020/08/09 19:26:12 [TRACE] vertex "var.dish_domain": evaluating
2020/08/09 19:26:12 [TRACE] [walkRefresh] Entering eval tree: var.dish_domain
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.TIMESCALE_REPLICATION_PASS"
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] vertex "var.TIMESCALE_REPLICATION_PASS": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] [walkRefresh] Exiting eval tree: var.dish_domain
2020/08/09 19:26:12 [TRACE] vertex "var.dish_domain": visit complete
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "provider.helm"
2020/08/09 19:26:12 [TRACE] vertex "provider.helm": starting visit (*terraform.NodeApplyableProvider)
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.K8S_DSN"
2020/08/09 19:26:12 [TRACE] vertex "provider.helm": evaluating
2020/08/09 19:26:12 [TRACE] [walkRefresh] Entering eval tree: provider.helm
2020/08/09 19:26:12 [TRACE] vertex "var.K8S_DSN": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.SENTRY_USER_PASS"
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/08/09 19:26:12 [TRACE] vertex "var.K8S_DSN": evaluating
2020/08/09 19:26:12 [TRACE] vertex "var.SENTRY_USER_PASS": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] [walkRefresh] Entering eval tree: var.K8S_DSN
2020/08/09 19:26:12 [TRACE] vertex "var.SENTRY_USER_PASS": evaluating
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.TIMESCALE_ADMIN_PASS"
2020/08/09 19:26:12 [TRACE] [walkRefresh] Exiting eval tree: var.K8S_DSN
2020/08/09 19:26:12 [TRACE] vertex "var.TIMESCALE_ADMIN_PASS": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] vertex "var.K8S_DSN": visit complete
2020/08/09 19:26:12 [TRACE] [walkRefresh] Entering eval tree: var.SENTRY_USER_PASS
2020/08/09 19:26:12 [TRACE] vertex "var.TIMESCALE_ADMIN_PASS": evaluating
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] [walkRefresh] Exiting eval tree: var.SENTRY_USER_PASS
2020/08/09 19:26:12 [TRACE] vertex "var.SENTRY_USER_PASS": visit complete
2020/08/09 19:26:12 [TRACE] [walkRefresh] Entering eval tree: var.TIMESCALE_ADMIN_PASS
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] [walkRefresh] Exiting eval tree: var.TIMESCALE_ADMIN_PASS
2020/08/09 19:26:12 [TRACE] vertex "var.TIMESCALE_ADMIN_PASS": visit complete
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.TIMESCALE_SU_PASS"
2020/08/09 19:26:12 [TRACE] vertex "var.TIMESCALE_SU_PASS": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] vertex "var.TIMESCALE_SU_PASS": evaluating
2020/08/09 19:26:12 [TRACE] [walkRefresh] Entering eval tree: var.TIMESCALE_SU_PASS
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] [walkRefresh] Exiting eval tree: var.TIMESCALE_SU_PASS
2020/08/09 19:26:12 [TRACE] vertex "var.TIMESCALE_SU_PASS": visit complete
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.GRAFANA_PASSWORD"
2020/08/09 19:26:12 [TRACE] vertex "var.GRAFANA_PASSWORD": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] vertex "var.GRAFANA_PASSWORD": evaluating
2020/08/09 19:26:12 [TRACE] [walkRefresh] Entering eval tree: var.GRAFANA_PASSWORD
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] [walkRefresh] Exiting eval tree: var.GRAFANA_PASSWORD
2020/08/09 19:26:12 [TRACE] vertex "var.GRAFANA_PASSWORD": visit complete
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.DO_SPACES_SECRET"
2020/08/09 19:26:12 [TRACE] vertex "var.DO_SPACES_SECRET": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] vertex "var.DO_SPACES_SECRET": evaluating
2020/08/09 19:26:12 [TRACE] [walkRefresh] Entering eval tree: var.DO_SPACES_SECRET
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.CLOUDFLARE_DNS_API_TOKEN"
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] vertex "var.CLOUDFLARE_DNS_API_TOKEN": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] [walkRefresh] Exiting eval tree: var.DO_SPACES_SECRET
2020/08/09 19:26:12 [TRACE] vertex "var.CLOUDFLARE_DNS_API_TOKEN": evaluating
2020/08/09 19:26:12 [TRACE] vertex "var.DO_SPACES_SECRET": visit complete
2020/08/09 19:26:12 [TRACE] [walkRefresh] Entering eval tree: var.CLOUDFLARE_DNS_API_TOKEN
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] [walkRefresh] Exiting eval tree: var.CLOUDFLARE_DNS_API_TOKEN
2020/08/09 19:26:12 [TRACE] vertex "var.CLOUDFLARE_DNS_API_TOKEN": visit complete
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.GMAIL_APP_PASSWORD"
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.DO_SPACES_ID"
2020/08/09 19:26:12 [TRACE] vertex "var.GMAIL_APP_PASSWORD": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] vertex "var.DO_SPACES_ID": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] vertex "var.GMAIL_APP_PASSWORD": evaluating
2020/08/09 19:26:12 [TRACE] vertex "var.DO_SPACES_ID": evaluating
2020/08/09 19:26:12 [TRACE] [walkRefresh] Entering eval tree: var.GMAIL_APP_PASSWORD
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] [walkRefresh] Entering eval tree: var.DO_SPACES_ID
2020/08/09 19:26:12 [TRACE] [walkRefresh] Exiting eval tree: var.GMAIL_APP_PASSWORD
2020/08/09 19:26:12 [TRACE] vertex "var.GMAIL_APP_PASSWORD": visit complete
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.POSTGRES_REPMGR_PASSWORD"
2020/08/09 19:26:12 [TRACE] [walkRefresh] Exiting eval tree: var.DO_SPACES_ID
2020/08/09 19:26:12 [TRACE] vertex "var.POSTGRES_REPMGR_PASSWORD": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] vertex "var.DO_SPACES_ID": visit complete
2020/08/09 19:26:12 [TRACE] vertex "var.POSTGRES_REPMGR_PASSWORD": evaluating
2020/08/09 19:26:12 [TRACE] [walkRefresh] Entering eval tree: var.POSTGRES_REPMGR_PASSWORD
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] [walkRefresh] Exiting eval tree: var.POSTGRES_REPMGR_PASSWORD
2020/08/09 19:26:12 [TRACE] vertex "var.POSTGRES_REPMGR_PASSWORD": visit complete
2020/08/09 19:26:12 [TRACE] [walkRefresh] Exiting eval tree: var.DO_DISH_KEY
2020/08/09 19:26:12 [TRACE] vertex "var.DO_DISH_KEY": visit complete
2020-08-09T19:26:12.660+0300 [INFO]  plugin: configuring client automatic mTLS
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.DOCKER_CONFIG_JSON"
2020/08/09 19:26:12 [TRACE] vertex "var.DOCKER_CONFIG_JSON": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] vertex "var.DOCKER_CONFIG_JSON": evaluating
2020/08/09 19:26:12 [TRACE] [walkRefresh] Entering eval tree: var.DOCKER_CONFIG_JSON
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] [walkRefresh] Exiting eval tree: var.cert_manager_version
2020/08/09 19:26:12 [TRACE] [walkRefresh] Exiting eval tree: var.DOCKER_CONFIG_JSON
2020/08/09 19:26:12 [TRACE] vertex "var.DOCKER_CONFIG_JSON": visit complete
2020/08/09 19:26:12 [TRACE] vertex "var.TIMESCALE_REPLICATION_PASS": evaluating
2020/08/09 19:26:12 [TRACE] [walkRefresh] Entering eval tree: var.TIMESCALE_REPLICATION_PASS
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] [walkRefresh] Exiting eval tree: var.TIMESCALE_REPLICATION_PASS
2020/08/09 19:26:12 [TRACE] vertex "var.TIMESCALE_REPLICATION_PASS": visit complete
2020/08/09 19:26:12 [TRACE] vertex "var.cert_manager_version": visit complete
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "module.cluster.var.DO_DISH_KEY"
2020/08/09 19:26:12 [TRACE] vertex "module.cluster.var.DO_DISH_KEY": starting visit (*terraform.NodeApplyableModuleVariable)
2020/08/09 19:26:12 [TRACE] vertex "module.cluster.var.DO_DISH_KEY": evaluating
2020/08/09 19:26:12 [TRACE] [walkRefresh] Entering eval tree: module.cluster.var.DO_DISH_KEY
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "var.SENTRY_PG_PASS"
2020/08/09 19:26:12 [TRACE] vertex "var.SENTRY_PG_PASS": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:12 [TRACE] vertex "var.SENTRY_PG_PASS": evaluating
2020/08/09 19:26:12 [TRACE] [walkRefresh] Entering eval tree: var.SENTRY_PG_PASS
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] [walkRefresh] Exiting eval tree: var.SENTRY_PG_PASS
2020/08/09 19:26:12 [TRACE] vertex "var.SENTRY_PG_PASS": visit complete
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.evalVariableValidations
2020/08/09 19:26:12 [TRACE] evalVariableValidations: not active for module.cluster.var.DO_DISH_KEY, so skipping
2020/08/09 19:26:12 [TRACE] [walkRefresh] Exiting eval tree: module.cluster.var.DO_DISH_KEY
2020/08/09 19:26:12 [TRACE] vertex "module.cluster.var.DO_DISH_KEY": visit complete
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "module.cluster.provider.digitalocean"
2020/08/09 19:26:12 [TRACE] vertex "module.cluster.provider.digitalocean": starting visit (*terraform.NodeApplyableProvider)
2020/08/09 19:26:12 [TRACE] vertex "module.cluster.provider.digitalocean": evaluating
2020/08/09 19:26:12 [TRACE] [walkRefresh] Entering eval tree: module.cluster.provider.digitalocean
2020/08/09 19:26:12 [TRACE] module.cluster: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] module.cluster: eval: *terraform.EvalInitProvider
2020-08-09T19:26:12.678+0300 [DEBUG] plugin: starting plugin: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-local_v1.4.0_x4 args=[/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-local_v1.4.0_x4]
2020-08-09T19:26:12.678+0300 [DEBUG] plugin: plugin started: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-local_v1.4.0_x4 pid=4110921
2020-08-09T19:26:12.678+0300 [DEBUG] plugin: waiting for RPC address: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-local_v1.4.0_x4
2020-08-09T19:26:12.683+0300 [INFO]  plugin.terraform-provider-local_v1.4.0_x4: configuring server automatic mTLS: timestamp=2020-08-09T19:26:12.683+0300
2020-08-09T19:26:12.701+0300 [DEBUG] plugin: using plugin: version=5
2020-08-09T19:26:12.701+0300 [DEBUG] plugin.terraform-provider-local_v1.4.0_x4: plugin address: address=/tmp/plugin415659361 network=unix timestamp=2020-08-09T19:26:12.701+0300
2020/08/09 19:26:12 [TRACE] BuiltinEvalContext: Initialized "local" provider for provider.local
2020/08/09 19:26:12 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:12 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/08/09 19:26:12 [TRACE] buildProviderConfig for provider.local: no configuration at all
2020/08/09 19:26:12 [TRACE] GRPCProvider: GetSchema
2020-08-09T19:26:12.736+0300 [TRACE] plugin.stdio: waiting for stdio data
2020-08-09T19:26:12.736+0300 [INFO]  plugin: configuring client automatic mTLS
2020-08-09T19:26:12.737+0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unimplemented desc = unknown service plugin.GRPCStdio"
2020-08-09T19:26:12.754+0300 [DEBUG] plugin: starting plugin: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-null_v2.1.2_x4 args=[/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-null_v2.1.2_x4]
2020-08-09T19:26:12.754+0300 [DEBUG] plugin: plugin started: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-null_v2.1.2_x4 pid=4110936
2020-08-09T19:26:12.754+0300 [DEBUG] plugin: waiting for RPC address: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-null_v2.1.2_x4
2020-08-09T19:26:12.758+0300 [INFO]  plugin.terraform-provider-null_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-08-09T19:26:12.758+0300
2020-08-09T19:26:12.778+0300 [DEBUG] plugin: using plugin: version=5
2020-08-09T19:26:12.778+0300 [DEBUG] plugin.terraform-provider-null_v2.1.2_x4: plugin address: address=/tmp/plugin444893495 network=unix timestamp=2020-08-09T19:26:12.778+0300
2020/08/09 19:26:12 [TRACE] BuiltinEvalContext: Initialized "null" provider for provider.null
2020/08/09 19:26:12 [TRACE] GRPCProvider: Configure
2020/08/09 19:26:12 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:12 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/08/09 19:26:12 [TRACE] buildProviderConfig for provider.null: no configuration at all
2020/08/09 19:26:12 [TRACE] GRPCProvider: GetSchema
2020-08-09T19:26:12.823+0300 [TRACE] plugin.stdio: waiting for stdio data
2020-08-09T19:26:12.823+0300 [INFO]  plugin: configuring client automatic mTLS
2020/08/09 19:26:12 [TRACE] [walkRefresh] Exiting eval tree: provider.local
2020/08/09 19:26:12 [TRACE] vertex "provider.local": visit complete
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "data.local_file.rio-custom-domain"
2020/08/09 19:26:12 [TRACE] vertex "data.local_file.rio-custom-domain": starting visit (*terraform.NodeRefreshableDataResource)
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "data.local_file.rio-app-domains"
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "data.local_file.rio-yaml"
2020/08/09 19:26:12 [TRACE] vertex "data.local_file.rio-custom-domain": expanding dynamic subgraph
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "data.local_file.cert_manager_setup"
2020/08/09 19:26:12 [TRACE] vertex "data.local_file.rio-yaml": starting visit (*terraform.NodeRefreshableDataResource)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:12 [TRACE] vertex "data.local_file.rio-app-domains": starting visit (*terraform.NodeRefreshableDataResource)
2020/08/09 19:26:12 [TRACE] vertex "data.local_file.cert_manager_setup": starting visit (*terraform.NodeRefreshableDataResource)
2020/08/09 19:26:12 [TRACE] vertex "data.local_file.rio-app-domains": expanding dynamic subgraph
2020/08/09 19:26:12 [TRACE] vertex "data.local_file.rio-yaml": expanding dynamic subgraph
2020/08/09 19:26:12 [TRACE] vertex "data.local_file.cert_manager_setup": expanding dynamic subgraph
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.local_file.rio-custom-domain - *terraform.NodeRefreshableDataResourceInstance
  ------
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "data.local_file.rio-custom-domain" references: []
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:12 [TRACE] vertex "data.local_file.rio-custom-domain": entering dynamic subgraph
2020/08/09 19:26:12 [TRACE] dag/walk: updating graph
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "data.local_file.rio-custom-domain"
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "data.local_file.rio-custom-domain"
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:12 [TRACE] vertex "data.local_file.rio-custom-domain": starting visit (*terraform.NodeRefreshableDataResourceInstance)
2020/08/09 19:26:12 [TRACE] vertex "data.local_file.rio-custom-domain": evaluating
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.local_file.rio-app-domains - *terraform.NodeRefreshableDataResourceInstance
  ------
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:12 [TRACE] [walkRefresh] Entering eval tree: data.local_file.rio-custom-domain
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "data.local_file.rio-app-domains" references: []
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:12 [TRACE] vertex "data.local_file.rio-app-domains": entering dynamic subgraph
2020/08/09 19:26:12 [TRACE] dag/walk: updating graph
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "data.local_file.rio-app-domains"
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.local_file.rio-yaml - *terraform.NodeRefreshableDataResourceInstance
  ------
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "data.local_file.rio-app-domains"
2020/08/09 19:26:12 [TRACE] vertex "data.local_file.rio-app-domains": starting visit (*terraform.NodeRefreshableDataResourceInstance)
2020/08/09 19:26:12 [TRACE] vertex "data.local_file.rio-app-domains": evaluating
2020/08/09 19:26:12 [TRACE] [walkRefresh] Entering eval tree: data.local_file.rio-app-domains
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "data.local_file.rio-yaml" references: []
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:12 [TRACE] vertex "data.local_file.rio-yaml": entering dynamic subgraph
2020/08/09 19:26:12 [TRACE] dag/walk: updating graph
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "data.local_file.rio-yaml"
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "data.local_file.rio-yaml"
2020/08/09 19:26:12 [TRACE] vertex "data.local_file.rio-yaml": starting visit (*terraform.NodeRefreshableDataResourceInstance)
2020/08/09 19:26:12 [TRACE] vertex "data.local_file.rio-yaml": evaluating
2020/08/09 19:26:12 [TRACE] [walkRefresh] Entering eval tree: data.local_file.rio-yaml
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.local_file.cert_manager_setup - *terraform.NodeRefreshableDataResourceInstance
  ------
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:12 [DEBUG] ReferenceTransformer: "data.local_file.cert_manager_setup" references: []
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:12 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:12 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:12 [TRACE] vertex "data.local_file.cert_manager_setup": entering dynamic subgraph
2020/08/09 19:26:12 [TRACE] dag/walk: updating graph
2020/08/09 19:26:12 [TRACE] dag/walk: added new vertex: "data.local_file.cert_manager_setup"
2020/08/09 19:26:12 [TRACE] dag/walk: visiting "data.local_file.cert_manager_setup"
2020/08/09 19:26:12 [TRACE] vertex "data.local_file.cert_manager_setup": starting visit (*terraform.NodeRefreshableDataResourceInstance)
2020/08/09 19:26:12 [TRACE] vertex "data.local_file.cert_manager_setup": evaluating
2020/08/09 19:26:12 [TRACE] [walkRefresh] Entering eval tree: data.local_file.cert_manager_setup
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020-08-09T19:26:12.828+0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unimplemented desc = unknown service plugin.GRPCStdio"
2020-08-09T19:26:12.845+0300 [DEBUG] plugin: starting plugin: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-kubernetes_v1.12.0_x4 args=[/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-kubernetes_v1.12.0_x4]
2020-08-09T19:26:12.847+0300 [DEBUG] plugin: plugin started: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-kubernetes_v1.12.0_x4 pid=4110962
2020-08-09T19:26:12.847+0300 [DEBUG] plugin: waiting for RPC address: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-kubernetes_v1.12.0_x4
2020-08-09T19:26:12.875+0300 [INFO]  plugin.terraform-provider-kubernetes_v1.12.0_x4: configuring server automatic mTLS: timestamp=2020-08-09T19:26:12.875+0300
2020-08-09T19:26:12.895+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: plugin address: address=/tmp/plugin651467056 network=unix timestamp=2020-08-09T19:26:12.895+0300
2020-08-09T19:26:12.895+0300 [DEBUG] plugin: using plugin: version=5
2020/08/09 19:26:12 [TRACE] BuiltinEvalContext: Initialized "kubernetes" provider for provider.kubernetes
2020/08/09 19:26:12 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:12 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:12 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020-08-09T19:26:12.930+0300 [TRACE] plugin.stdio: waiting for stdio data
2020/08/09 19:26:12 [TRACE] buildProviderConfig for provider.kubernetes: no configuration at all
2020/08/09 19:26:12 [TRACE] GRPCProvider: GetSchema
2020-08-09T19:26:12.930+0300 [INFO]  plugin: configuring client automatic mTLS
2020-08-09T19:26:12.930+0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unimplemented desc = unknown service plugin.GRPCStdio"
2020-08-09T19:26:12.951+0300 [DEBUG] plugin: starting plugin: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-helm_v1.2.4_x4 args=[/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-helm_v1.2.4_x4]
2020-08-09T19:26:12.951+0300 [DEBUG] plugin: plugin started: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-helm_v1.2.4_x4 pid=4110975
2020-08-09T19:26:12.951+0300 [DEBUG] plugin: waiting for RPC address: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-helm_v1.2.4_x4
2020-08-09T19:26:12.979+0300 [INFO]  plugin.terraform-provider-helm_v1.2.4_x4: configuring server automatic mTLS: timestamp=2020-08-09T19:26:12.979+0300
2020-08-09T19:26:12.996+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: plugin address: address=/tmp/plugin005182070 network=unix timestamp=2020-08-09T19:26:12.996+0300
2020-08-09T19:26:12.996+0300 [DEBUG] plugin: using plugin: version=5
2020/08/09 19:26:13 [TRACE] BuiltinEvalContext: Initialized "helm" provider for provider.helm
2020/08/09 19:26:13 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:13 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020-08-09T19:26:13.030+0300 [TRACE] plugin.stdio: waiting for stdio data
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/08/09 19:26:13 [TRACE] buildProviderConfig for provider.helm: no configuration at all
2020/08/09 19:26:13 [TRACE] GRPCProvider: GetSchema
2020-08-09T19:26:13.030+0300 [INFO]  plugin: configuring client automatic mTLS
2020-08-09T19:26:13.031+0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unimplemented desc = unknown service plugin.GRPCStdio"
2020-08-09T19:26:13.048+0300 [DEBUG] plugin: starting plugin: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-digitalocean_v1.22.0 args=[/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-digitalocean_v1.22.0]
2020-08-09T19:26:13.049+0300 [DEBUG] plugin: plugin started: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-digitalocean_v1.22.0 pid=4110990
2020-08-09T19:26:13.049+0300 [DEBUG] plugin: waiting for RPC address: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-digitalocean_v1.22.0
2020-08-09T19:26:13.056+0300 [INFO]  plugin.terraform-provider-digitalocean_v1.22.0: configuring server automatic mTLS: timestamp=2020-08-09T19:26:13.056+0300
2020-08-09T19:26:13.073+0300 [DEBUG] plugin: using plugin: version=5
2020-08-09T19:26:13.073+0300 [DEBUG] plugin.terraform-provider-digitalocean_v1.22.0: plugin address: network=unix address=/tmp/plugin005584453 timestamp=2020-08-09T19:26:13.073+0300
2020/08/09 19:26:13 [TRACE] BuiltinEvalContext: Initialized "digitalocean" provider for module.cluster.provider.digitalocean
2020/08/09 19:26:13 [TRACE] module.cluster: eval: terraform.EvalNoop
2020/08/09 19:26:13 [TRACE] module.cluster: eval: terraform.EvalNoop
2020/08/09 19:26:13 [TRACE] module.cluster: eval: *terraform.EvalOpFilter
2020/08/09 19:26:13 [TRACE] module.cluster: eval: *terraform.EvalSequence
2020/08/09 19:26:13 [TRACE] module.cluster: eval: *terraform.EvalGetProvider
2020/08/09 19:26:13 [TRACE] module.cluster: eval: *terraform.EvalOpFilter
2020/08/09 19:26:13 [TRACE] module.cluster: eval: *terraform.EvalSequence
2020/08/09 19:26:13 [TRACE] module.cluster: eval: *terraform.EvalConfigProvider
2020/08/09 19:26:13 [TRACE] buildProviderConfig for provider.digitalocean: using explicit config only
2020-08-09T19:26:13.109+0300 [TRACE] plugin.stdio: waiting for stdio data
2020/08/09 19:26:13 [TRACE] GRPCProvider: GetSchema
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:13 [TRACE] EvalWriteState: removing state object for data.local_file.rio-custom-domain
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalReadData
2020/08/09 19:26:13 [TRACE] EvalReadData: working on data.local_file.rio-custom-domain
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:13 [TRACE] EvalWriteState: removing state object for data.local_file.rio-app-domains
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalReadData
2020/08/09 19:26:13 [TRACE] EvalReadData: working on data.local_file.rio-app-domains
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:13 [TRACE] EvalWriteState: removing state object for data.local_file.rio-yaml
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalReadData
2020/08/09 19:26:13 [TRACE] EvalReadData: working on data.local_file.rio-yaml
2020/08/09 19:26:13 [TRACE] Re-validating config for data.local_file.rio-app-domains
2020/08/09 19:26:13 [TRACE] Re-validating config for data.local_file.rio-custom-domain
2020/08/09 19:26:13 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020/08/09 19:26:13 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:13 [TRACE] EvalWriteState: removing state object for data.local_file.cert_manager_setup
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalReadData
2020/08/09 19:26:13 [TRACE] EvalReadData: working on data.local_file.cert_manager_setup
2020/08/09 19:26:13 [TRACE] Re-validating config for data.local_file.rio-yaml
2020/08/09 19:26:13 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020/08/09 19:26:13 [TRACE] GRPCProvider: Configure
2020/08/09 19:26:13 [TRACE] GRPCProvider: Configure
2020/08/09 19:26:13 [TRACE] Re-validating config for data.local_file.cert_manager_setup
2020/08/09 19:26:13 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020/08/09 19:26:13 [TRACE] GRPCProvider: Configure
2020-08-09T19:26:13.110+0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unimplemented desc = unknown service plugin.GRPCStdio"
2020/08/09 19:26:13 [TRACE] [walkRefresh] Exiting eval tree: provider.null
2020/08/09 19:26:13 [TRACE] vertex "provider.null": visit complete
2020/08/09 19:26:13 [TRACE] EvalReadData: data.local_file.rio-yaml configuration is complete, so reading from provider
2020/08/09 19:26:13 [TRACE] EvalReadData: data.local_file.rio-custom-domain configuration is complete, so reading from provider
2020/08/09 19:26:13 [TRACE] EvalReadData: data.local_file.cert_manager_setup configuration is complete, so reading from provider
2020/08/09 19:26:13 [TRACE] EvalReadData: data.local_file.rio-app-domains configuration is complete, so reading from provider
2020-08-09T19:26:13.110+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:13 [DEBUG] Trying to load configuration from file
2020-08-09T19:26:13.110+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:13 [DEBUG] Configuration file is: /home/tombh/.kube/config
2020/08/09 19:26:13 [TRACE] [walkRefresh] Exiting eval tree: provider.helm
2020/08/09 19:26:13 [TRACE] vertex "provider.helm": visit complete
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "data.helm_repository.jetstack"
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.jetstack": starting visit (*terraform.NodeRefreshableDataResource)
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.jetstack": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.helm_repository.jetstack - *terraform.NodeRefreshableDataResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "data.helm_repository.jetstack" references: []
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.jetstack": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "data.helm_repository.jetstack"
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "data.helm_repository.jetstack"
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.jetstack": starting visit (*terraform.NodeRefreshableDataResourceInstance)
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.jetstack": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: data.helm_repository.jetstack
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "helm_release.docker-registry"
2020/08/09 19:26:13 [TRACE] vertex "helm_release.docker-registry": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "data.helm_repository.bitnami"
2020/08/09 19:26:13 [TRACE] vertex "helm_release.docker-registry": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] GRPCProvider: ReadDataSource
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.bitnami": starting visit (*terraform.NodeRefreshableDataResource)
2020/08/09 19:26:13 [TRACE] GRPCProvider: ReadDataSource
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.bitnami": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "data.helm_repository.incubator"
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.incubator": starting visit (*terraform.NodeRefreshableDataResource)
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  helm_release.docker-registry - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.incubator": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "helm_release.timescaledb"
2020/08/09 19:26:13 [TRACE] vertex "helm_release.timescaledb": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "helm_release.timescaledb": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "helm_release.redis"
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "helm_release.metrics-server"
2020/08/09 19:26:13 [TRACE] vertex "helm_release.redis": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:13 [TRACE] vertex "helm_release.metrics-server": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:13 [TRACE] vertex "helm_release.redis": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] vertex "helm_release.metrics-server": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "helm_release.sentry"
2020/08/09 19:26:13 [TRACE] vertex "helm_release.sentry": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "helm_release.sentry-k8s-erros"
2020/08/09 19:26:13 [TRACE] vertex "helm_release.sentry": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] vertex "helm_release.sentry-k8s-erros": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:13 [TRACE] vertex "helm_release.sentry-k8s-erros": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "helm_release.postgres-ha"
2020/08/09 19:26:13 [TRACE] vertex "helm_release.postgres-ha": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:13 [TRACE] vertex "helm_release.postgres-ha": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "data.helm_repository.stable"
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.stable": starting visit (*terraform.NodeRefreshableDataResource)
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.stable": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "data.helm_repository.sentry"
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.sentry": starting visit (*terraform.NodeRefreshableDataResource)
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.sentry": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "helm_release.prometheus-operator"
2020/08/09 19:26:13 [TRACE] vertex "helm_release.prometheus-operator": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:13 [TRACE] vertex "helm_release.prometheus-operator": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] GRPCProvider: ReadDataSource
2020/08/09 19:26:13 [TRACE] GRPCProvider: ReadDataSource
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "helm_release.docker-registry" references: []
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "helm_release.docker-registry": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] EvalWriteState: removing state object for data.helm_repository.jetstack
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "helm_release.docker-registry"
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalReadData
2020/08/09 19:26:13 [TRACE] EvalReadData: working on data.helm_repository.jetstack
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "helm_release.docker-registry"
2020/08/09 19:26:13 [TRACE] vertex "helm_release.docker-registry": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:13 [TRACE] NodeRefreshableManagedResourceInstance: helm_release.docker-registry will be refreshed
2020/08/09 19:26:13 [TRACE] vertex "helm_release.docker-registry": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: helm_release.docker-registry
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:13 [TRACE] EvalReadState: reading state for helm_release.docker-registry
2020/08/09 19:26:13 [TRACE] UpgradeResourceState: schema version of helm_release.docker-registry is still 0; calling provider "registry.terraform.io/-/helm" for any other minor fixups
2020/08/09 19:26:13 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:13 [TRACE] Re-validating config for data.helm_repository.jetstack
2020/08/09 19:26:13 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodeRefreshableDataResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "data.helm_repository.bitnami" references: []
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.bitnami": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "data.helm_repository.bitnami"
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "data.helm_repository.bitnami"
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.bitnami": starting visit (*terraform.NodeRefreshableDataResourceInstance)
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.bitnami": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: data.helm_repository.bitnami
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:13 [TRACE] EvalWriteState: removing state object for data.helm_repository.bitnami
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalReadData
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] EvalReadData: working on data.helm_repository.bitnami
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.helm_repository.incubator - *terraform.NodeRefreshableDataResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [TRACE] Re-validating config for data.helm_repository.bitnami
2020/08/09 19:26:13 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "data.helm_repository.incubator" references: []
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.incubator": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "data.helm_repository.incubator"
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "data.helm_repository.incubator"
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.incubator": starting visit (*terraform.NodeRefreshableDataResourceInstance)
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.incubator": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: data.helm_repository.incubator
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalWriteState
2020-08-09T19:26:13.112+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:13 [INFO] Successfully initialized config
2020/08/09 19:26:13 [TRACE] EvalWriteState: removing state object for data.helm_repository.incubator
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalReadData
2020/08/09 19:26:13 [TRACE] EvalReadData: working on data.helm_repository.incubator
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] [walkRefresh] Exiting eval tree: provider.kubernetes
2020/08/09 19:26:13 [TRACE] vertex "provider.kubernetes": visit complete
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  helm_release.timescaledb - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_namespace.redis"
2020/08/09 19:26:13 [TRACE] Re-validating config for data.helm_repository.incubator
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.redis": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:13 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.redis": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_config_map.buildkitd-config"
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_config_map.buildkitd-config": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_config_map.buildkitd-config": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_ingress.grafana-ingress"
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_ingress.grafana-ingress": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_ingress.grafana-ingress": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_secret.docker-config-json"
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_secret.docker-config-json": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_secret.docker-config-json": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_secret.docker-registry-auth"
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_secret.docker-registry-auth": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_secret.docker-registry-auth": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] EvalReadData: data.helm_repository.bitnami configuration is complete, so reading from provider
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_persistent_volume_claim.image-proxy"
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "helm_release.timescaledb" references: []
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_persistent_volume_claim.image-proxy": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_persistent_volume_claim.image-proxy": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] GRPCProvider: ReadDataSource
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalIf
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "data.helm_repository.timescale"
2020/08/09 19:26:13 [TRACE] vertex "helm_release.timescaledb": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] EvalWriteState: writing current state object for data.local_file.rio-app-domains
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.timescale": starting visit (*terraform.NodeRefreshableDataResource)
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_namespace.metrics-server"
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "helm_release.timescaledb"
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.metrics-server": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.timescale": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.metrics-server": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "helm_release.timescaledb"
2020/08/09 19:26:13 [TRACE] vertex "helm_release.timescaledb": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_deployment.buildkitd"
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.helm_repository.timescale - *terraform.NodeRefreshableDataResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_deployment.buildkitd": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] EvalReadData: data.helm_repository.jetstack configuration is complete, so reading from provider
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_deployment.buildkitd": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] NodeRefreshableManagedResourceInstance: helm_release.timescaledb will be refreshed
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] GRPCProvider: ReadDataSource
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_namespace.rio"
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_namespace.postgres-ha"
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_namespace.timescale"
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.postgres-ha": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.timescale": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.postgres-ha": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.timescale": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_service.buildkitd"
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_service.buildkitd": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_ingress.docker-registry-ingress"
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_ingress.docker-registry-ingress": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_service.buildkitd": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_ingress.docker-registry-ingress": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalIf
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_namespace.monitoring"
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_namespace.nginx-ingress"
2020/08/09 19:26:13 [TRACE] EvalReadData: data.helm_repository.incubator configuration is complete, so reading from provider
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.rio": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.nginx-ingress": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.nginx-ingress": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] GRPCProvider: ReadDataSource
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.rio": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_ingress.sentry-ingress"
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_namespace.docker"
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_ingress.sentry-ingress": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:13 [TRACE] EvalWriteState: writing current state object for data.local_file.rio-yaml
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.docker": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_ingress.sentry-ingress": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.docker": expanding dynamic subgraph
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "data.helm_repository.timescale" references: []
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_namespace.sentry"
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.monitoring": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.sentry": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.monitoring": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_namespace.cert-manager"
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.sentry": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.cert-manager": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.cert-manager": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.timescale": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "data.helm_repository.timescale"
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "data.helm_repository.timescale"
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.timescale": starting visit (*terraform.NodeRefreshableDataResourceInstance)
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.timescale": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: data.helm_repository.timescale
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:13 [TRACE] vertex "helm_release.timescaledb": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: helm_release.timescaledb
2020/08/09 19:26:13 [TRACE] [walkRefresh] Exiting eval tree: data.local_file.rio-yaml
2020/08/09 19:26:13 [TRACE] vertex "data.local_file.rio-yaml": visit complete
2020/08/09 19:26:13 [TRACE] vertex "data.local_file.rio-yaml": dynamic subgraph completed successfully
2020/08/09 19:26:13 [TRACE] vertex "data.local_file.rio-yaml": visit complete
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_namespace.redis - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] EvalReadState: reading state for helm_release.timescaledb
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "kubernetes_namespace.redis" references: []
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.redis": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.redis"
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_namespace.redis"
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.redis": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:13 [TRACE] NodeRefreshableManagedResourceInstance: kubernetes_namespace.redis will be refreshed
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.redis": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: kubernetes_namespace.redis
2020/08/09 19:26:13 [TRACE] UpgradeResourceState: schema version of helm_release.timescaledb is still 0; calling provider "registry.terraform.io/-/helm" for any other minor fixups
2020/08/09 19:26:13 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:13 [TRACE] EvalWriteState: removing state object for data.helm_repository.timescale
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalReadData
2020/08/09 19:26:13 [TRACE] EvalReadData: working on data.helm_repository.timescale
2020/08/09 19:26:13 [TRACE] Re-validating config for data.helm_repository.timescale
2020/08/09 19:26:13 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_namespace.metrics-server - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "kubernetes_namespace.metrics-server" references: []
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.metrics-server": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.metrics-server"
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_namespace.metrics-server"
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.metrics-server": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:13 [TRACE] NodeRefreshableManagedResourceInstance: kubernetes_namespace.metrics-server will be refreshed
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.metrics-server": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: kubernetes_namespace.metrics-server
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  helm_release.redis - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [TRACE] EvalReadData: data.helm_repository.timescale configuration is complete, so reading from provider
2020/08/09 19:26:13 [TRACE] GRPCProvider: ReadDataSource
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "helm_release.redis" references: []
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_namespace.cert-manager - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "kubernetes_namespace.cert-manager" references: []
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.cert-manager": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.cert-manager"
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_namespace.cert-manager"
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.cert-manager": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:13 [TRACE] NodeRefreshableManagedResourceInstance: kubernetes_namespace.cert-manager will be refreshed
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.cert-manager": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: kubernetes_namespace.cert-manager
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_ingress.docker-registry-ingress - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalIf
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] EvalWriteState: writing current state object for data.local_file.rio-custom-domain
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [TRACE] vertex "helm_release.redis": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "helm_release.redis"
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "helm_release.redis"
2020/08/09 19:26:13 [TRACE] vertex "helm_release.redis": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:13 [TRACE] NodeRefreshableManagedResourceInstance: helm_release.redis will be refreshed
2020/08/09 19:26:13 [TRACE] vertex "helm_release.redis": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: helm_release.redis
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalIf
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:13 [TRACE] EvalWriteState: writing current state object for data.local_file.cert_manager_setup
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "kubernetes_ingress.docker-registry-ingress" references: []
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_ingress.docker-registry-ingress": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "kubernetes_ingress.docker-registry-ingress"
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_ingress.docker-registry-ingress"
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_ingress.docker-registry-ingress": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:13 [TRACE] NodeRefreshableManagedResourceInstance: kubernetes_ingress.docker-registry-ingress will be refreshed
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_ingress.docker-registry-ingress": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: kubernetes_ingress.docker-registry-ingress
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  helm_release.sentry - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:13 [TRACE] GRPCProvider: ReadResource
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:13 [TRACE] GRPCProvider: ReadResource
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "helm_release.sentry" references: []
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "helm_release.sentry": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "helm_release.sentry"
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "helm_release.sentry"
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] vertex "helm_release.sentry": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:13 [TRACE] NodeRefreshableManagedResourceInstance: helm_release.sentry will be refreshed
2020/08/09 19:26:13 [TRACE] vertex "helm_release.sentry": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: helm_release.sentry
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  helm_release.sentry-k8s-erros - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "helm_release.sentry-k8s-erros" references: []
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "helm_release.sentry-k8s-erros": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020-08-09T19:26:13.117+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:13 [DEBUG] [resourceReleaseExists: timescale] Start
2020-08-09T19:26:13.119+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:13 [DEBUG] [resourceReleaseExists: docker-registry] Start
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "helm_release.sentry-k8s-erros"
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] GRPCProvider: Configure
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  helm_release.postgres-ha - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "helm_release.sentry-k8s-erros"
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] vertex "helm_release.sentry-k8s-erros": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:13 [DEBUG] Resource state not found for node "helm_release.postgres-ha", instance helm_release.postgres-ha
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [TRACE] NodeRefreshableManagedResourceInstance: helm_release.sentry-k8s-erros will be refreshed
2020/08/09 19:26:13 [TRACE] vertex "helm_release.sentry-k8s-erros": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: helm_release.sentry-k8s-erros
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "helm_release.postgres-ha" references: []
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "helm_release.postgres-ha": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "helm_release.postgres-ha"
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "helm_release.postgres-ha"
2020/08/09 19:26:13 [TRACE] vertex "helm_release.postgres-ha": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:13 [TRACE] NodeRefreshableManagedResourceInstance: helm_release.postgres-ha has no existing state to refresh
2020/08/09 19:26:13 [TRACE] vertex "helm_release.postgres-ha": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: helm_release.postgres-ha
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.helm_repository.stable - *terraform.NodeRefreshableDataResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020-08-09T19:26:13.119+0300 [DEBUG] plugin.terraform-provider-digitalocean_v1.22.0: 2020/08/09 19:26:13 [INFO] DigitalOcean Client configured for URL: https://api.digitalocean.com
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "data.helm_repository.stable" references: []
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.stable": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "data.helm_repository.stable"
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "data.helm_repository.stable"
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] [walkRefresh] Exiting eval tree: module.cluster.provider.digitalocean
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.stable": starting visit (*terraform.NodeRefreshableDataResourceInstance)
2020/08/09 19:26:13 [TRACE] vertex "module.cluster.provider.digitalocean": visit complete
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.stable": evaluating
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.helm_repository.sentry - *terraform.NodeRefreshableDataResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: data.helm_repository.stable
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "module.cluster.digitalocean_kubernetes_cluster.dish"
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:13 [TRACE] vertex "module.cluster.digitalocean_kubernetes_cluster.dish": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:13 [TRACE] vertex "module.cluster.digitalocean_kubernetes_cluster.dish": expanding dynamic subgraph
2020/08/09 19:26:13 [TRACE] EvalReadState: reading state for kubernetes_namespace.redis
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "data.helm_repository.sentry" references: []
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.sentry": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "data.helm_repository.sentry"
2020/08/09 19:26:13 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.redis is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:13 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "data.helm_repository.sentry"
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.sentry": starting visit (*terraform.NodeRefreshableDataResourceInstance)
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.sentry": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: data.helm_repository.sentry
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  helm_release.prometheus-operator - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "helm_release.prometheus-operator" references: []
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "helm_release.prometheus-operator": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "helm_release.prometheus-operator"
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "helm_release.prometheus-operator"
2020/08/09 19:26:13 [TRACE] vertex "helm_release.prometheus-operator": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:13 [TRACE] NodeRefreshableManagedResourceInstance: helm_release.prometheus-operator will be refreshed
2020/08/09 19:26:13 [TRACE] vertex "helm_release.prometheus-operator": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: helm_release.prometheus-operator
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_config_map.buildkitd-config - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "kubernetes_config_map.buildkitd-config" references: []
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_config_map.buildkitd-config": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "kubernetes_config_map.buildkitd-config"
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_config_map.buildkitd-config"
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_config_map.buildkitd-config": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:13 [TRACE] NodeRefreshableManagedResourceInstance: kubernetes_config_map.buildkitd-config will be refreshed
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_config_map.buildkitd-config": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: kubernetes_config_map.buildkitd-config
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_ingress.grafana-ingress - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "kubernetes_ingress.grafana-ingress" references: []
2020/08/09 19:26:13 [TRACE] GRPCProvider: ReadResource
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_ingress.grafana-ingress": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "kubernetes_ingress.grafana-ingress"
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_ingress.grafana-ingress"
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_ingress.grafana-ingress": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:13 [TRACE] NodeRefreshableManagedResourceInstance: kubernetes_ingress.grafana-ingress will be refreshed
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_ingress.grafana-ingress": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: kubernetes_ingress.grafana-ingress
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_secret.docker-config-json - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "kubernetes_secret.docker-config-json" references: []
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_secret.docker-config-json": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "kubernetes_secret.docker-config-json"
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_secret.docker-config-json"
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_secret.docker-config-json": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:13 [TRACE] NodeRefreshableManagedResourceInstance: kubernetes_secret.docker-config-json will be refreshed
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_secret.docker-config-json": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: kubernetes_secret.docker-config-json
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_secret.docker-registry-auth - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "kubernetes_secret.docker-registry-auth" references: []
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_secret.docker-registry-auth": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "kubernetes_secret.docker-registry-auth"
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_secret.docker-registry-auth"
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_secret.docker-registry-auth": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:13 [TRACE] NodeRefreshableManagedResourceInstance: kubernetes_secret.docker-registry-auth will be refreshed
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_secret.docker-registry-auth": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: kubernetes_secret.docker-registry-auth
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "kubernetes_persistent_volume_claim.image-proxy" references: []
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_persistent_volume_claim.image-proxy": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "kubernetes_persistent_volume_claim.image-proxy"
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_persistent_volume_claim.image-proxy"
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_persistent_volume_claim.image-proxy": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] NodeRefreshableManagedResourceInstance: kubernetes_persistent_volume_claim.image-proxy will be refreshed
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_persistent_volume_claim.image-proxy": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: kubernetes_persistent_volume_claim.image-proxy
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_namespace.docker - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "kubernetes_namespace.docker" references: []
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.docker": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.docker"
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_namespace.docker"
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.docker": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:13 [TRACE] NodeRefreshableManagedResourceInstance: kubernetes_namespace.docker will be refreshed
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.docker": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: kubernetes_namespace.docker
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_namespace.rio - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "kubernetes_namespace.rio" references: []
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020-08-09T19:26:13.122+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:13 [INFO] Checking namespace redis
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.rio": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.rio"
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_namespace.nginx-ingress - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_namespace.rio"
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.rio": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] NodeRefreshableManagedResourceInstance: kubernetes_namespace.rio will be refreshed
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.rio": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: kubernetes_namespace.rio
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "kubernetes_namespace.nginx-ingress" references: []
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.nginx-ingress": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.nginx-ingress"
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_namespace.nginx-ingress"
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.nginx-ingress": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:13 [TRACE] NodeRefreshableManagedResourceInstance: kubernetes_namespace.nginx-ingress will be refreshed
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.nginx-ingress": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: kubernetes_namespace.nginx-ingress
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_namespace.postgres-ha - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "kubernetes_namespace.postgres-ha" references: []
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.postgres-ha": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.postgres-ha"
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_namespace.postgres-ha"
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.postgres-ha": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] NodeRefreshableManagedResourceInstance: kubernetes_namespace.postgres-ha will be refreshed
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.postgres-ha": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: kubernetes_namespace.postgres-ha
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_deployment.buildkitd - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "kubernetes_deployment.buildkitd" references: []
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_deployment.buildkitd": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "kubernetes_deployment.buildkitd"
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_deployment.buildkitd"
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_deployment.buildkitd": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:13 [TRACE] NodeRefreshableManagedResourceInstance: kubernetes_deployment.buildkitd will be refreshed
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_deployment.buildkitd": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: kubernetes_deployment.buildkitd
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  helm_release.metrics-server - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "helm_release.metrics-server" references: []
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "helm_release.metrics-server": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "helm_release.metrics-server"
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "helm_release.metrics-server"
2020/08/09 19:26:13 [TRACE] vertex "helm_release.metrics-server": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] NodeRefreshableManagedResourceInstance: helm_release.metrics-server will be refreshed
2020/08/09 19:26:13 [TRACE] vertex "helm_release.metrics-server": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: helm_release.metrics-server
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_namespace.timescale - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "kubernetes_namespace.timescale" references: []
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.timescale": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.timescale"
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_namespace.timescale"
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.timescale": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:13 [TRACE] NodeRefreshableManagedResourceInstance: kubernetes_namespace.timescale will be refreshed
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.timescale": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: kubernetes_namespace.timescale
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_namespace.monitoring - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "kubernetes_namespace.monitoring" references: []
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.monitoring": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.monitoring"
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_namespace.monitoring"
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.monitoring": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:13 [TRACE] NodeRefreshableManagedResourceInstance: kubernetes_namespace.monitoring will be refreshed
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.monitoring": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: kubernetes_namespace.monitoring
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_ingress.sentry-ingress - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "kubernetes_ingress.sentry-ingress" references: []
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_ingress.sentry-ingress": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "kubernetes_ingress.sentry-ingress"
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_ingress.sentry-ingress"
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_ingress.sentry-ingress": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] NodeRefreshableManagedResourceInstance: kubernetes_ingress.sentry-ingress will be refreshed
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_ingress.sentry-ingress": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: kubernetes_ingress.sentry-ingress
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_namespace.sentry - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "kubernetes_namespace.sentry" references: []
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.sentry": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.sentry"
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_namespace.sentry"
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.sentry": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] NodeRefreshableManagedResourceInstance: kubernetes_namespace.sentry will be refreshed
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_namespace.sentry": evaluating
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_service.buildkitd - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: kubernetes_namespace.sentry
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "kubernetes_service.buildkitd" references: []
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_service.buildkitd": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "kubernetes_service.buildkitd"
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "kubernetes_service.buildkitd"
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_service.buildkitd": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2020/08/09 19:26:13 [TRACE] NodeRefreshableManagedResourceInstance: kubernetes_service.buildkitd will be refreshed
2020/08/09 19:26:13 [TRACE] vertex "kubernetes_service.buildkitd": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: kubernetes_service.buildkitd
2020/08/09 19:26:13 [TRACE] [walkRefresh] Exiting eval tree: data.local_file.rio-custom-domain
2020/08/09 19:26:13 [TRACE] vertex "data.local_file.rio-custom-domain": visit complete
2020/08/09 19:26:13 [TRACE] vertex "data.local_file.rio-custom-domain": dynamic subgraph completed successfully
2020/08/09 19:26:13 [TRACE] vertex "data.local_file.rio-custom-domain": visit complete
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:13 [TRACE] EvalReadState: reading state for kubernetes_namespace.metrics-server
2020/08/09 19:26:13 [TRACE] [walkRefresh] Exiting eval tree: data.local_file.rio-app-domains
2020/08/09 19:26:13 [TRACE] vertex "data.local_file.rio-app-domains": visit complete
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:13 [TRACE] vertex "data.local_file.rio-app-domains": dynamic subgraph completed successfully
2020/08/09 19:26:13 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.metrics-server is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:13 [TRACE] vertex "data.local_file.rio-app-domains": visit complete
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:13 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:13 [TRACE] EvalReadState: reading state for kubernetes_namespace.cert-manager
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2020/08/09 19:26:13 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.cert-manager is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:13 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:13 [TRACE] [walkRefresh] Exiting eval tree: data.local_file.cert_manager_setup
2020/08/09 19:26:13 [TRACE] vertex "data.local_file.cert_manager_setup": visit complete
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:13 [TRACE] vertex "data.local_file.cert_manager_setup": dynamic subgraph completed successfully
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:13 [TRACE] vertex "data.local_file.cert_manager_setup": visit complete
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:13 [TRACE] EvalReadState: reading state for helm_release.redis
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "provider.local (close)"
2020/08/09 19:26:13 [TRACE] vertex "provider.local (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/08/09 19:26:13 [TRACE] vertex "provider.local (close)": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: provider.local (close)
2020/08/09 19:26:13 [DEBUG] ReferenceTransformer: "module.cluster.digitalocean_kubernetes_cluster.dish" references: []
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:13 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:13 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:13 [TRACE] vertex "module.cluster.digitalocean_kubernetes_cluster.dish": entering dynamic subgraph
2020/08/09 19:26:13 [TRACE] dag/walk: updating graph
2020/08/09 19:26:13 [TRACE] dag/walk: added new vertex: "module.cluster.digitalocean_kubernetes_cluster.dish"
2020/08/09 19:26:13 [TRACE] dag/walk: visiting "module.cluster.digitalocean_kubernetes_cluster.dish"
2020/08/09 19:26:13 [TRACE] vertex "module.cluster.digitalocean_kubernetes_cluster.dish": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:13 [TRACE] NodeRefreshableManagedResourceInstance: module.cluster.digitalocean_kubernetes_cluster.dish will be refreshed
2020/08/09 19:26:13 [TRACE] vertex "module.cluster.digitalocean_kubernetes_cluster.dish": evaluating
2020/08/09 19:26:13 [TRACE] [walkRefresh] Entering eval tree: module.cluster.digitalocean_kubernetes_cluster.dish
2020/08/09 19:26:13 [TRACE] UpgradeResourceState: schema version of helm_release.redis is still 0; calling provider "registry.terraform.io/-/helm" for any other minor fixups
2020/08/09 19:26:13 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:13 [TRACE] GRPCProvider: ReadResource
2020/08/09 19:26:13 [TRACE] GRPCProvider: ReadResource
2020-08-09T19:26:13.181+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:13 [INFO] Checking namespace metrics-server
2020-08-09T19:26:13.181+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:13 [INFO] Checking namespace cert-manager
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:13 [TRACE] GRPCProvider: ReadResource
2020-08-09T19:26:13.184+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:13 [DEBUG] [resourceReleaseExists: redis] Start
2020-08-09T19:26:13.809+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:13 [INFO] Namespace redis exists
2020-08-09T19:26:13.809+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:13 [INFO] Namespace cert-manager exists
2020-08-09T19:26:13.809+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:13 [INFO] Namespace metrics-server exists
2020-08-09T19:26:13.809+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:13 [INFO] Reading namespace metrics-server
2020-08-09T19:26:13.809+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:13 [INFO] Reading namespace redis
2020-08-09T19:26:13.809+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:13 [INFO] Reading namespace cert-manager
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalIf
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:13 [TRACE] EvalWriteState: writing current state object for data.helm_repository.incubator
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2020/08/09 19:26:13 [TRACE] [walkRefresh] Exiting eval tree: data.helm_repository.incubator
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.incubator": visit complete
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.incubator": dynamic subgraph completed successfully
2020/08/09 19:26:13 [TRACE] vertex "data.helm_repository.incubator": visit complete
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:13 [TRACE] EvalReadState: reading state for kubernetes_ingress.docker-registry-ingress
2020/08/09 19:26:13 [TRACE] UpgradeResourceState: schema version of kubernetes_ingress.docker-registry-ingress is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:13 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:13 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:13 [TRACE] GRPCProvider: ReadResource
2020-08-09T19:26:13.897+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:13 [INFO] Checking ingress docker-registry-ingress
2020-08-09T19:26:14.022+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:14 [INFO] Received namespace: &v1.Namespace{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"redis", GenerateName:"", Namespace:"", SelfLink:"/api/v1/namespaces/redis", UID:"bde5e26e-55a0-4366-8185-2fb99d8e1195", ResourceVersion:"4213", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63732054909, loc:(*time.Location)(0x2dde260)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000f9a020), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f9a040)}}}, Spec:v1.NamespaceSpec{Finalizers:[]v1.FinalizerName{"kubernetes"}}, Status:v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}}
2020-08-09T19:26:14.022+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:14 [INFO] Received namespace: &v1.Namespace{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"cert-manager", GenerateName:"", Namespace:"", SelfLink:"/api/v1/namespaces/cert-manager", UID:"1aca9fb3-7645-404a-80db-78fb3d69efc4", ResourceVersion:"4209", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63732054909, loc:(*time.Location)(0x2dde260)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000ba16c0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ba16e0)}}}, Spec:v1.NamespaceSpec{Finalizers:[]v1.FinalizerName{"kubernetes"}}, Status:v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}}
2020-08-09T19:26:14.023+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:14 [INFO] Received namespace: &v1.Namespace{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"metrics-server", GenerateName:"", Namespace:"", SelfLink:"/api/v1/namespaces/metrics-server", UID:"247a1b0d-19d3-47c9-8f38-e1a04ca034e2", ResourceVersion:"4172", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63732054908, loc:(*time.Location)(0x2dde260)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000bde420), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000bde440)}}}, Spec:v1.NamespaceSpec{Finalizers:[]v1.FinalizerName{"kubernetes"}}, Status:v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}}
2020/08/09 19:26:14 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:14 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_namespace.redis
2020/08/09 19:26:14 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.redis
2020/08/09 19:26:14 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:14 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_namespace.cert-manager
2020/08/09 19:26:14 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.cert-manager
2020/08/09 19:26:14 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:14 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_namespace.metrics-server
2020/08/09 19:26:14 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.metrics-server
2020/08/09 19:26:14 [TRACE] [walkRefresh] Exiting eval tree: kubernetes_namespace.redis
2020/08/09 19:26:14 [TRACE] vertex "kubernetes_namespace.redis": visit complete
2020/08/09 19:26:14 [TRACE] [walkRefresh] Exiting eval tree: kubernetes_namespace.cert-manager
2020/08/09 19:26:14 [TRACE] vertex "kubernetes_namespace.redis": dynamic subgraph completed successfully
2020/08/09 19:26:14 [TRACE] vertex "kubernetes_namespace.redis": visit complete
2020/08/09 19:26:14 [TRACE] vertex "kubernetes_namespace.cert-manager": visit complete
2020/08/09 19:26:14 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:14 [TRACE] vertex "kubernetes_namespace.cert-manager": dynamic subgraph completed successfully
2020/08/09 19:26:14 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:14 [TRACE] vertex "kubernetes_namespace.cert-manager": visit complete
2020/08/09 19:26:14 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:14 [TRACE] [walkRefresh] Exiting eval tree: kubernetes_namespace.metrics-server
2020/08/09 19:26:14 [TRACE] EvalReadState: reading state for helm_release.sentry
2020/08/09 19:26:14 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:14 [TRACE] vertex "kubernetes_namespace.metrics-server": visit complete
2020/08/09 19:26:14 [TRACE] UpgradeResourceState: schema version of helm_release.sentry is still 0; calling provider "registry.terraform.io/-/helm" for any other minor fixups
2020/08/09 19:26:14 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:14 [TRACE] vertex "kubernetes_namespace.metrics-server": dynamic subgraph completed successfully
2020/08/09 19:26:14 [TRACE] EvalReadState: reading state for helm_release.sentry-k8s-erros
2020/08/09 19:26:14 [TRACE] vertex "kubernetes_namespace.metrics-server": visit complete
2020/08/09 19:26:14 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:14 [TRACE] UpgradeResourceState: schema version of helm_release.sentry-k8s-erros is still 0; calling provider "registry.terraform.io/-/helm" for any other minor fixups
2020/08/09 19:26:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:14 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:14 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:14 [TRACE] EvalReadState: reading state for helm_release.postgres-ha
2020/08/09 19:26:14 [TRACE] EvalReadState: no state present for helm_release.postgres-ha
2020/08/09 19:26:14 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:14 [TRACE] Re-validating config for "helm_release.postgres-ha"
2020/08/09 19:26:14 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:14 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:14 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:14 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:14 [TRACE] GRPCProvider: ReadResource
2020-08-09T19:26:14.031+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:14 [DEBUG] [resourceReleaseExists: sentry-k8s-errors] Start
2020-08-09T19:26:14.034+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:14 [DEBUG] [resourceDiff: postgres-ha] Start
2020/08/09 19:26:14 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:14 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:14 [TRACE] GRPCProvider: ReadResource
2020-08-09T19:26:14.041+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:14 [DEBUG] [resourceReleaseExists: sentry] Start
2020-08-09T19:26:14.109+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:14 [INFO] Reading ingress docker-registry-ingress
2020-08-09T19:26:14.455+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:14 [INFO] Received ingress: &v1beta1.Ingress{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"docker-registry-ingress", GenerateName:"", Namespace:"docker", SelfLink:"/apis/extensions/v1beta1/namespaces/docker/ingresses/docker-registry-ingress", UID:"5c1c1e97-cc4a-4327-9c3d-7d8a3fc78a0d", ResourceVersion:"1104396", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63732058002, loc:(*time.Location)(0x2dde260)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string{"cert-manager.io/acme-challenge-type":"http01", "cert-manager.io/cluster-issuer":"letsencrypt-prod", "kubernetes.io/ingress.class":"nginx", "nginx.ingress.kubernetes.io/auth-realm":"Authentication Required", "nginx.ingress.kubernetes.io/auth-secret":"docker-registry-auth", "nginx.ingress.kubernetes.io/auth-type":"basic", "nginx.ingress.kubernetes.io/proxy-body-size":"0"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"extensions/v1beta1", Time:(*v1.Time)(0xc000d147e0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d14800)}, v1.ManagedFieldsEntry{Manager:"nginx-ingress-controller", Operation:"Update", APIVersion:"networking.k8s.io/v1beta1", Time:(*v1.Time)(0xc000d14820), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d14840)}}}, Spec:v1beta1.IngressSpec{Backend:(*v1beta1.IngressBackend)(0xc000e94000), TLS:[]v1beta1.IngressTLS{v1beta1.IngressTLS{Hosts:[]string{"docker.k8s.dishapp.com"}, SecretName:"docker-tls"}}, Rules:[]v1beta1.IngressRule{v1beta1.IngressRule{Host:"docker.k8s.dishapp.com", IngressRuleValue:v1beta1.IngressRuleValue{HTTP:(*v1beta1.HTTPIngressRuleValue)(0xc000d14880)}}}}, Status:v1beta1.IngressStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress{v1.LoadBalancerIngress{IP:"138.68.230.152", Hostname:""}, v1.LoadBalancerIngress{IP:"138.68.61.179", Hostname:""}}}}}
2020-08-09T19:26:14.456+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:14 [DEBUG] Flattened ingress spec: []interface {}{map[string]interface {}{"backend":[]interface {}{map[string]interface {}{"service_name":"docker-registry", "service_port":"5000"}}, "rule":[]interface {}{map[string]interface {}{"host":"docker.k8s.dishapp.com", "http":[]interface {}{map[string]interface {}{"path":[]interface {}{map[string]interface {}{"backend":[]interface {}{map[string]interface {}{"service_name":"docker-registry", "service_port":"5000"}}, "path":"/*"}}}}}}, "tls":[]interface {}{map[string]interface {}{"hosts":[]string{"docker.k8s.dishapp.com"}, "secret_name":"docker-tls"}}}}
2020/08/09 19:26:14 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:14 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_ingress.docker-registry-ingress
2020/08/09 19:26:14 [TRACE] EvalWriteState: writing current state object for kubernetes_ingress.docker-registry-ingress
2020/08/09 19:26:14 [TRACE] [walkRefresh] Exiting eval tree: kubernetes_ingress.docker-registry-ingress
2020/08/09 19:26:14 [TRACE] vertex "kubernetes_ingress.docker-registry-ingress": visit complete
2020/08/09 19:26:14 [TRACE] vertex "kubernetes_ingress.docker-registry-ingress": dynamic subgraph completed successfully
2020/08/09 19:26:14 [TRACE] vertex "kubernetes_ingress.docker-registry-ingress": visit complete
2020/08/09 19:26:14 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:14 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:14 [TRACE] EvalWriteState: removing state object for data.helm_repository.stable
2020/08/09 19:26:14 [TRACE] <root>: eval: *terraform.EvalReadData
2020/08/09 19:26:14 [TRACE] EvalReadData: working on data.helm_repository.stable
2020/08/09 19:26:14 [TRACE] Re-validating config for data.helm_repository.stable
2020/08/09 19:26:14 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020/08/09 19:26:14 [TRACE] EvalReadData: data.helm_repository.stable configuration is complete, so reading from provider
2020/08/09 19:26:14 [TRACE] GRPCProvider: ReadDataSource
2020/08/09 19:26:17 [TRACE] <root>: eval: *terraform.EvalIf
2020/08/09 19:26:17 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:17 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:17 [TRACE] EvalWriteState: writing current state object for data.helm_repository.bitnami
2020/08/09 19:26:17 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2020/08/09 19:26:17 [TRACE] [walkRefresh] Exiting eval tree: data.helm_repository.bitnami
2020/08/09 19:26:17 [TRACE] vertex "data.helm_repository.bitnami": visit complete
2020/08/09 19:26:17 [TRACE] vertex "data.helm_repository.bitnami": dynamic subgraph completed successfully
2020/08/09 19:26:17 [TRACE] vertex "data.helm_repository.bitnami": visit complete
2020/08/09 19:26:17 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:17 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:17 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:17 [TRACE] EvalWriteState: removing state object for data.helm_repository.sentry
2020/08/09 19:26:17 [TRACE] <root>: eval: *terraform.EvalReadData
2020/08/09 19:26:17 [TRACE] EvalReadData: working on data.helm_repository.sentry
2020/08/09 19:26:17 [TRACE] Re-validating config for data.helm_repository.sentry
2020/08/09 19:26:17 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020/08/09 19:26:17 [TRACE] EvalReadData: data.helm_repository.sentry configuration is complete, so reading from provider
2020/08/09 19:26:17 [TRACE] GRPCProvider: ReadDataSource
2020/08/09 19:26:17 [TRACE] <root>: eval: *terraform.EvalIf
2020/08/09 19:26:17 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:17 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:17 [TRACE] EvalWriteState: writing current state object for data.helm_repository.jetstack
2020/08/09 19:26:17 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2020/08/09 19:26:17 [TRACE] [walkRefresh] Exiting eval tree: data.helm_repository.jetstack
2020/08/09 19:26:17 [TRACE] vertex "data.helm_repository.jetstack": visit complete
2020/08/09 19:26:17 [TRACE] vertex "data.helm_repository.jetstack": dynamic subgraph completed successfully
2020/08/09 19:26:17 [TRACE] vertex "data.helm_repository.jetstack": visit complete
2020/08/09 19:26:17 [TRACE] dag/walk: visiting "helm_release.cert-manager"
2020/08/09 19:26:17 [TRACE] vertex "helm_release.cert-manager": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:17 [TRACE] vertex "helm_release.cert-manager": expanding dynamic subgraph
2020/08/09 19:26:17 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:17 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  helm_release.cert-manager - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:17 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:17 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:17 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:17 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:17 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:17 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:17 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:17 [DEBUG] ReferenceTransformer: "helm_release.cert-manager" references: []
2020/08/09 19:26:17 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:17 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:17 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:17 [TRACE] vertex "helm_release.cert-manager": entering dynamic subgraph
2020/08/09 19:26:17 [TRACE] dag/walk: updating graph
2020/08/09 19:26:17 [TRACE] dag/walk: added new vertex: "helm_release.cert-manager"
2020/08/09 19:26:17 [TRACE] dag/walk: visiting "helm_release.cert-manager"
2020/08/09 19:26:17 [TRACE] vertex "helm_release.cert-manager": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:17 [TRACE] NodeRefreshableManagedResourceInstance: helm_release.cert-manager will be refreshed
2020/08/09 19:26:17 [TRACE] vertex "helm_release.cert-manager": evaluating
2020/08/09 19:26:17 [TRACE] [walkRefresh] Entering eval tree: helm_release.cert-manager
2020/08/09 19:26:17 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:17 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:17 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:17 [TRACE] EvalReadState: reading state for helm_release.prometheus-operator
2020/08/09 19:26:17 [TRACE] UpgradeResourceState: schema version of helm_release.prometheus-operator is still 0; calling provider "registry.terraform.io/-/helm" for any other minor fixups
2020/08/09 19:26:17 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:17 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:17 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:17 [TRACE] GRPCProvider: ReadResource
2020-08-09T19:26:17.448+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:17 [DEBUG] [resourceReleaseExists: prometheus-operator] Start
2020/08/09 19:26:17 [TRACE] dag/walk: vertex "module.cluster.provider.digitalocean (close)" is waiting for "module.cluster.digitalocean_kubernetes_node_pool.ci"
2020/08/09 19:26:17 [TRACE] dag/walk: vertex "provider.kubernetes (close)" is waiting for "kubernetes_secret.docker-config-json"
2020/08/09 19:26:17 [TRACE] dag/walk: vertex "root" is waiting for "module.cluster.output.cluster-id"
2020/08/09 19:26:17 [TRACE] dag/walk: vertex "provider.null (close)" is waiting for "null_resource.create-timescaledb-setup"
2020/08/09 19:26:17 [TRACE] dag/walk: vertex "helm_release.nginx-ingress" is waiting for "data.helm_repository.stable"
2020/08/09 19:26:17 [TRACE] dag/walk: vertex "module.cluster.digitalocean_kubernetes_node_pool.workers" is waiting for "module.cluster.digitalocean_kubernetes_cluster.dish"
2020/08/09 19:26:17 [TRACE] dag/walk: vertex "kubernetes_ingress.rio-ingress" is waiting for "helm_release.cert-manager"
2020/08/09 19:26:17 [TRACE] dag/walk: vertex "null_resource.rio-custom-domain" is waiting for "null_resource.rio-setup"
2020/08/09 19:26:17 [TRACE] dag/walk: vertex "module.cluster.output.cluster-id" is waiting for "module.cluster.digitalocean_kubernetes_cluster.dish"
2020/08/09 19:26:17 [TRACE] dag/walk: vertex "kubernetes_secret.timescale-certificates" is waiting for "kubernetes_namespace.timescale"
2020/08/09 19:26:17 [TRACE] dag/walk: vertex "null_resource.rio-setup" is waiting for "helm_release.cert-manager"
2020/08/09 19:26:17 [TRACE] dag/walk: vertex "module.cluster.digitalocean_kubernetes_node_pool.ancillary" is waiting for "module.cluster.digitalocean_kubernetes_cluster.dish"
2020/08/09 19:26:17 [TRACE] dag/walk: vertex "kubernetes_secret.cloudflare-dns-api-token" is waiting for "helm_release.cert-manager"
2020/08/09 19:26:17 [TRACE] dag/walk: vertex "null_resource.rio-app-domains" is waiting for "null_resource.rio-setup"
2020/08/09 19:26:17 [TRACE] dag/walk: vertex "null_resource.cert-manager-setup" is waiting for "helm_release.cert-manager"
2020/08/09 19:26:17 [TRACE] dag/walk: vertex "kubernetes_secret.timescale-credentials" is waiting for "kubernetes_namespace.timescale"
2020/08/09 19:26:17 [TRACE] dag/walk: vertex "module.cluster.digitalocean_kubernetes_node_pool.ci" is waiting for "module.cluster.digitalocean_kubernetes_cluster.dish"
2020-08-09T19:26:17.967+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:17 [DEBUG] [INFO] GetHelmConfiguration start
2020-08-09T19:26:17.967+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:17 [INFO] Successfully initialized kubernetes config
2020/08/09 19:26:17 [TRACE] <root>: eval: *terraform.EvalIf
2020/08/09 19:26:17 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:17 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:17 [TRACE] EvalWriteState: writing current state object for data.helm_repository.timescale
2020-08-09T19:26:17.967+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:17 [DEBUG] [INFO] GetHelmConfiguration success
2020-08-09T19:26:17.967+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:17 [DEBUG] timescale getRelease wait for lock
2020-08-09T19:26:17.967+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:17 [DEBUG] timescale getRelease got lock, started
2020-08-09T19:26:17.967+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:17 [DEBUG] timescale getRelease post action created
2020/08/09 19:26:17 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2020/08/09 19:26:17 [TRACE] [walkRefresh] Exiting eval tree: data.helm_repository.timescale
2020/08/09 19:26:17 [TRACE] vertex "data.helm_repository.timescale": visit complete
2020/08/09 19:26:17 [TRACE] vertex "data.helm_repository.timescale": dynamic subgraph completed successfully
2020/08/09 19:26:17 [TRACE] vertex "data.helm_repository.timescale": visit complete
2020/08/09 19:26:17 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:17 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:17 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:17 [TRACE] EvalReadState: reading state for kubernetes_config_map.buildkitd-config
2020/08/09 19:26:17 [TRACE] UpgradeResourceState: schema version of kubernetes_config_map.buildkitd-config is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:17 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:17 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:17 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:17 [TRACE] GRPCProvider: ReadResource
2020-08-09T19:26:17.972+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:17 [INFO] Checking config map buildkitd-config
2020/08/09 19:26:18 [TRACE] dag/walk: vertex "null_resource.create-timescaledb-setup" is waiting for "helm_release.timescaledb"
2020-08-09T19:26:18.237+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:18 [INFO] Reading config map buildkitd-config
2020-08-09T19:26:18.446+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:18 [INFO] Received config map: &v1.ConfigMap{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"buildkitd-config", GenerateName:"", Namespace:"docker", SelfLink:"/api/v1/namespaces/docker/configmaps/buildkitd-config", UID:"b8807ea4-2d29-43e5-9bc5-129385a25ee9", ResourceVersion:"28730", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63732060597, loc:(*time.Location)(0x2dde260)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc00111b000), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00111b020)}}}, Data:map[string]string{"config.json":"{\"auths\":{\"docker.k8s.dishapp.com\":{\"auth\":\"ZGlzaDptNnZoU1d2NHFZUTR4eA==\"}}}"}, BinaryData:map[string][]uint8(nil)}
2020/08/09 19:26:18 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:18 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_config_map.buildkitd-config
2020/08/09 19:26:18 [TRACE] EvalWriteState: writing current state object for kubernetes_config_map.buildkitd-config
2020/08/09 19:26:18 [TRACE] [walkRefresh] Exiting eval tree: kubernetes_config_map.buildkitd-config
2020/08/09 19:26:18 [TRACE] vertex "kubernetes_config_map.buildkitd-config": visit complete
2020/08/09 19:26:18 [TRACE] vertex "kubernetes_config_map.buildkitd-config": dynamic subgraph completed successfully
2020/08/09 19:26:18 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:18 [TRACE] vertex "kubernetes_config_map.buildkitd-config": visit complete
2020/08/09 19:26:18 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:18 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:18 [TRACE] EvalReadState: reading state for kubernetes_ingress.grafana-ingress
2020/08/09 19:26:18 [TRACE] UpgradeResourceState: schema version of kubernetes_ingress.grafana-ingress is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:18 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:18 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:18 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:18 [TRACE] GRPCProvider: ReadResource
2020-08-09T19:26:18.458+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:18 [INFO] Checking ingress grafana-ingress
2020-08-09T19:26:18.670+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:18 [INFO] Reading ingress grafana-ingress
2020-08-09T19:26:18.881+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:18 [INFO] Received ingress: &v1beta1.Ingress{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"grafana-ingress", GenerateName:"", Namespace:"monitoring", SelfLink:"/apis/extensions/v1beta1/namespaces/monitoring/ingresses/grafana-ingress", UID:"a5d03c44-65a1-49d4-9f43-2379515c4ecc", ResourceVersion:"1104393", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63732055303, loc:(*time.Location)(0x2dde260)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string{"cert-manager.io/acme-challenge-type":"http01", "cert-manager.io/cluster-issuer":"letsencrypt-prod", "kubernetes.io/ingress.class":"nginx"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"extensions/v1beta1", Time:(*v1.Time)(0xc000b04160), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b04180)}, v1.ManagedFieldsEntry{Manager:"nginx-ingress-controller", Operation:"Update", APIVersion:"networking.k8s.io/v1beta1", Time:(*v1.Time)(0xc000b041a0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b041c0)}}}, Spec:v1beta1.IngressSpec{Backend:(*v1beta1.IngressBackend)(0xc000aec0c0), TLS:[]v1beta1.IngressTLS{v1beta1.IngressTLS{Hosts:[]string{"grafana.k8s.dishapp.com"}, SecretName:"grafana-tls"}}, Rules:[]v1beta1.IngressRule{v1beta1.IngressRule{Host:"grafana.k8s.dishapp.com", IngressRuleValue:v1beta1.IngressRuleValue{HTTP:(*v1beta1.HTTPIngressRuleValue)(0xc000b04200)}}}}, Status:v1beta1.IngressStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress{v1.LoadBalancerIngress{IP:"138.68.230.152", Hostname:""}, v1.LoadBalancerIngress{IP:"138.68.61.179", Hostname:""}}}}}
2020-08-09T19:26:18.881+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:18 [DEBUG] Flattened ingress spec: []interface {}{map[string]interface {}{"backend":[]interface {}{map[string]interface {}{"service_name":"prometheus-operator-grafana", "service_port":"80"}}, "rule":[]interface {}{map[string]interface {}{"host":"grafana.k8s.dishapp.com", "http":[]interface {}{map[string]interface {}{"path":[]interface {}{map[string]interface {}{"backend":[]interface {}{map[string]interface {}{"service_name":"prometheus-operator-grafana", "service_port":"80"}}, "path":"/*"}}}}}}, "tls":[]interface {}{map[string]interface {}{"hosts":[]string{"grafana.k8s.dishapp.com"}, "secret_name":"grafana-tls"}}}}
2020/08/09 19:26:18 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:18 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_ingress.grafana-ingress
2020/08/09 19:26:18 [TRACE] EvalWriteState: writing current state object for kubernetes_ingress.grafana-ingress
2020/08/09 19:26:18 [TRACE] [walkRefresh] Exiting eval tree: kubernetes_ingress.grafana-ingress
2020/08/09 19:26:18 [TRACE] vertex "kubernetes_ingress.grafana-ingress": visit complete
2020/08/09 19:26:18 [TRACE] vertex "kubernetes_ingress.grafana-ingress": dynamic subgraph completed successfully
2020/08/09 19:26:18 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:18 [TRACE] vertex "kubernetes_ingress.grafana-ingress": visit complete
2020/08/09 19:26:18 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:18 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:18 [TRACE] EvalReadState: reading state for kubernetes_secret.docker-config-json
2020/08/09 19:26:18 [TRACE] UpgradeResourceState: schema version of kubernetes_secret.docker-config-json is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:18 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:18 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:18 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:18 [TRACE] GRPCProvider: ReadResource
2020-08-09T19:26:18.884+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:18 [INFO] Checking secret docker-config-json
2020/08/09 19:26:18 [TRACE] dag/walk: vertex "provider.helm (close)" is waiting for "helm_release.sentry-k8s-erros"
2020-08-09T19:26:19.096+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:19 [INFO] Reading secret docker-config-json
2020-08-09T19:26:19.308+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:19 [INFO] Received secret: &v1.Secret{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"docker-config-json", GenerateName:"", Namespace:"default", SelfLink:"/api/v1/namespaces/default/secrets/docker-config-json", UID:"765178a8-0633-4cd9-a2fa-c8256ab24c89", ResourceVersion:"2854", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63732054357, loc:(*time.Location)(0x2dde260)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc0000a5bc0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0000a5c00)}}}, Data:map[string][]uint8{".dockerconfigjson":[]uint8{0x7b, 0x22, 0x61, 0x75, 0x74, 0x68, 0x73, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x22, 0x3a, 0x7b, 0x22, 0x61, 0x75, 0x74, 0x68, 0x22, 0x3a, 0x22, 0x5a, 0x47, 0x6c, 0x7a, 0x61, 0x44, 0x70, 0x74, 0x4e, 0x6e, 0x5a, 0x6f, 0x55, 0x31, 0x64, 0x32, 0x4e, 0x48, 0x46, 0x5a, 0x55, 0x54, 0x52, 0x34, 0x65, 0x41, 0x3d, 0x3d, 0x22, 0x7d, 0x7d, 0x7d}}, StringData:map[string]string(nil), Type:"kubernetes.io/dockerconfigjson"}
2020/08/09 19:26:19 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:19 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_secret.docker-config-json
2020/08/09 19:26:19 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.docker-config-json
2020/08/09 19:26:19 [TRACE] [walkRefresh] Exiting eval tree: kubernetes_secret.docker-config-json
2020/08/09 19:26:19 [TRACE] vertex "kubernetes_secret.docker-config-json": visit complete
2020/08/09 19:26:19 [TRACE] vertex "kubernetes_secret.docker-config-json": dynamic subgraph completed successfully
2020/08/09 19:26:19 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:19 [TRACE] vertex "kubernetes_secret.docker-config-json": visit complete
2020/08/09 19:26:19 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:19 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:19 [TRACE] EvalReadState: reading state for kubernetes_secret.docker-registry-auth
2020/08/09 19:26:19 [TRACE] UpgradeResourceState: schema version of kubernetes_secret.docker-registry-auth is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:19 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:19 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:19 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:19 [TRACE] GRPCProvider: ReadResource
2020-08-09T19:26:19.313+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:19 [INFO] Checking secret docker-registry-auth
2020-08-09T19:26:19.492+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:19 [DEBUG] timescale getRelease post run
2020-08-09T19:26:19.492+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:19 [DEBUG] timescale getRelease done
2020-08-09T19:26:19.492+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:19 [DEBUG] [resourceReleaseExists: timescale] Done
2020-08-09T19:26:19.492+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:19 [DEBUG] [resourceReleaseRead: timescale] Started
2020-08-09T19:26:19.492+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:19 [DEBUG] [INFO] GetHelmConfiguration start
2020-08-09T19:26:19.493+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:19 [INFO] Successfully initialized kubernetes config
2020-08-09T19:26:19.493+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:19 [DEBUG] [INFO] GetHelmConfiguration success
2020-08-09T19:26:19.493+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:19 [DEBUG] docker-registry getRelease wait for lock
2020-08-09T19:26:19.493+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:19 [DEBUG] [INFO] GetHelmConfiguration start
2020-08-09T19:26:19.493+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:19 [INFO] Successfully initialized kubernetes config
2020-08-09T19:26:19.493+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:19 [DEBUG] [INFO] GetHelmConfiguration success
2020-08-09T19:26:19.493+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:19 [DEBUG] redis getRelease wait for lock
2020-08-09T19:26:19.493+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:19 [DEBUG] [INFO] GetHelmConfiguration start
2020-08-09T19:26:19.493+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:19 [INFO] Successfully initialized kubernetes config
2020-08-09T19:26:19.493+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:19 [DEBUG] [INFO] GetHelmConfiguration success
2020-08-09T19:26:19.493+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:19 [DEBUG] sentry-k8s-errors getRelease wait for lock
2020-08-09T19:26:19.523+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:19 [INFO] Reading secret docker-registry-auth
2020-08-09T19:26:19.734+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:19 [INFO] Received secret: &v1.Secret{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"docker-registry-auth", GenerateName:"", Namespace:"docker", SelfLink:"/api/v1/namespaces/docker/secrets/docker-registry-auth", UID:"fea88531-030c-481a-8d12-b0ac371b5338", ResourceVersion:"18634", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63732058002, loc:(*time.Location)(0x2dde260)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc0002aaaa0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0002aab00)}}}, Data:map[string][]uint8{"auth":[]uint8{0x64, 0x69, 0x73, 0x68, 0x3a, 0x24, 0x61, 0x70, 0x72, 0x31, 0x24, 0x6f, 0x32, 0x65, 0x68, 0x46, 0x72, 0x6a, 0x30, 0x24, 0x55, 0x62, 0x62, 0x59, 0x68, 0x6c, 0x42, 0x77, 0x7a, 0x55, 0x68, 0x44, 0x63, 0x65, 0x6c, 0x43, 0x6c, 0x70, 0x4b, 0x6a, 0x64, 0x2f}}, StringData:map[string]string(nil), Type:"Opaque"}
2020/08/09 19:26:19 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:19 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_secret.docker-registry-auth
2020/08/09 19:26:19 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.docker-registry-auth
2020/08/09 19:26:19 [TRACE] [walkRefresh] Exiting eval tree: kubernetes_secret.docker-registry-auth
2020/08/09 19:26:19 [TRACE] vertex "kubernetes_secret.docker-registry-auth": visit complete
2020/08/09 19:26:19 [TRACE] vertex "kubernetes_secret.docker-registry-auth": dynamic subgraph completed successfully
2020/08/09 19:26:19 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:19 [TRACE] vertex "kubernetes_secret.docker-registry-auth": visit complete
2020/08/09 19:26:19 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:19 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:19 [TRACE] EvalReadState: reading state for kubernetes_persistent_volume_claim.image-proxy
2020/08/09 19:26:19 [TRACE] UpgradeResourceState: schema version of kubernetes_persistent_volume_claim.image-proxy is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:19 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:19 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:19 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:19 [TRACE] GRPCProvider: ReadResource
2020-08-09T19:26:19.737+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:19 [INFO] Checking persistent volume claim image-proxy-pvc
2020-08-09T19:26:19.949+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:19 [INFO] Reading persistent volume claim image-proxy-pvc
2020-08-09T19:26:20.038+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:20 [DEBUG] [resourceDiff: postgres-ha] Got chart
2020-08-09T19:26:20.038+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:20 [DEBUG] [resourceDiff: postgres-ha] Release validated
2020-08-09T19:26:20.039+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:20 [DEBUG] [INFO] GetHelmConfiguration start
2020-08-09T19:26:20.039+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:20 [INFO] Successfully initialized kubernetes config
2020-08-09T19:26:20.039+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:20 [DEBUG] [INFO] GetHelmConfiguration success
2020-08-09T19:26:20.039+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:20 [DEBUG] sentry getRelease wait for lock
2020/08/09 19:26:20 [WARN] Provider "registry.terraform.io/-/helm" produced an invalid plan for helm_release.postgres-ha, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .dependency_update: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .disable_webhooks: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .max_history: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .atomic: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .disable_openapi_validation: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .lint: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .timeout: planned value cty.NumberIntVal(300) does not match config value cty.NullVal(cty.Number)
      - .wait: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .reuse_values: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .disable_crd_hooks: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .render_subchart_notes: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .verify: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .cleanup_on_fail: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .create_namespace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .force_update: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .reset_values: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .recreate_pods: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .replace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .skip_crds: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/08/09 19:26:20 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:20 [TRACE] EvalWriteState: recording 0 dependencies for helm_release.postgres-ha
2020/08/09 19:26:20 [TRACE] EvalWriteState: writing current state object for helm_release.postgres-ha
2020/08/09 19:26:20 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:20 [TRACE] EvalWriteDiff: recorded Create change for helm_release.postgres-ha
2020/08/09 19:26:20 [TRACE] [walkRefresh] Exiting eval tree: helm_release.postgres-ha
2020/08/09 19:26:20 [TRACE] vertex "helm_release.postgres-ha": visit complete
2020/08/09 19:26:20 [TRACE] vertex "helm_release.postgres-ha": dynamic subgraph completed successfully
2020/08/09 19:26:20 [TRACE] vertex "helm_release.postgres-ha": visit complete
2020/08/09 19:26:20 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:20 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:20 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:20 [TRACE] EvalReadState: reading state for kubernetes_namespace.docker
2020/08/09 19:26:20 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.docker is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:20 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:20 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:20 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:20 [TRACE] GRPCProvider: ReadResource
2020-08-09T19:26:20.041+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:20 [INFO] Checking namespace docker
2020-08-09T19:26:20.159+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:20 [INFO] Received persistent volume claim: &v1.PersistentVolumeClaim{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"image-proxy-pvc", GenerateName:"", Namespace:"default", SelfLink:"/api/v1/namespaces/default/persistentvolumeclaims/image-proxy-pvc", UID:"e77ea53e-e34b-4883-9200-5e9f56bd5c8e", ResourceVersion:"2877", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63732054356, loc:(*time.Location)(0x2dde260)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string{"pv.kubernetes.io/bind-completed":"yes", "pv.kubernetes.io/bound-by-controller":"yes", "volume.beta.kubernetes.io/storage-provisioner":"dobs.csi.digitalocean.com"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string{"kubernetes.io/pvc-protection"}, ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000fc7740), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fc7760)}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000fc7780), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fc77a0)}}}, Spec:v1.PersistentVolumeClaimSpec{AccessModes:[]v1.PersistentVolumeAccessMode{"ReadWriteOnce"}, Selector:(*v1.LabelSelector)(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList{"storage":resource.Quantity{i:resource.int64Amount{value:5368709120, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"5Gi", Format:"BinarySI"}}}, VolumeName:"pvc-e77ea53e-e34b-4883-9200-5e9f56bd5c8e", StorageClassName:(*string)(0xc000dc6360), VolumeMode:(*v1.PersistentVolumeMode)(0xc000dc6370), DataSource:(*v1.TypedLocalObjectReference)(nil)}, Status:v1.PersistentVolumeClaimStatus{Phase:"Bound", AccessModes:[]v1.PersistentVolumeAccessMode{"ReadWriteOnce"}, Capacity:v1.ResourceList{"storage":resource.Quantity{i:resource.int64Amount{value:5368709120, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"5Gi", Format:"BinarySI"}}, Conditions:[]v1.PersistentVolumeClaimCondition(nil)}}
2020/08/09 19:26:20 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:20 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_persistent_volume_claim.image-proxy
2020/08/09 19:26:20 [TRACE] EvalWriteState: writing current state object for kubernetes_persistent_volume_claim.image-proxy
2020/08/09 19:26:20 [TRACE] [walkRefresh] Exiting eval tree: kubernetes_persistent_volume_claim.image-proxy
2020/08/09 19:26:20 [TRACE] vertex "kubernetes_persistent_volume_claim.image-proxy": visit complete
2020/08/09 19:26:20 [TRACE] vertex "kubernetes_persistent_volume_claim.image-proxy": dynamic subgraph completed successfully
2020/08/09 19:26:20 [TRACE] vertex "kubernetes_persistent_volume_claim.image-proxy": visit complete
2020/08/09 19:26:20 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:20 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:20 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:20 [TRACE] EvalReadState: reading state for kubernetes_namespace.rio
2020/08/09 19:26:20 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.rio is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:20 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:20 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:20 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:20 [TRACE] GRPCProvider: ReadResource
2020-08-09T19:26:20.165+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:20 [INFO] Checking namespace rio-system
2020-08-09T19:26:20.251+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:20 [INFO] Namespace docker exists
2020-08-09T19:26:20.253+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:20 [INFO] Reading namespace docker
2020-08-09T19:26:20.376+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:20 [INFO] Namespace rio-system exists
2020-08-09T19:26:20.377+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:20 [INFO] Reading namespace rio-system
2020-08-09T19:26:20.463+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:20 [INFO] Received namespace: &v1.Namespace{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"docker", GenerateName:"", Namespace:"", SelfLink:"/api/v1/namespaces/docker", UID:"9aa22225-d50e-4876-990e-ea645241fd99", ResourceVersion:"18628", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63732058002, loc:(*time.Location)(0x2dde260)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc00117b400), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00117b420)}}}, Spec:v1.NamespaceSpec{Finalizers:[]v1.FinalizerName{"kubernetes"}}, Status:v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}}
2020/08/09 19:26:20 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:20 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_namespace.docker
2020/08/09 19:26:20 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.docker
2020/08/09 19:26:20 [TRACE] [walkRefresh] Exiting eval tree: kubernetes_namespace.docker
2020/08/09 19:26:20 [TRACE] vertex "kubernetes_namespace.docker": visit complete
2020/08/09 19:26:20 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:20 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:20 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:20 [TRACE] vertex "kubernetes_namespace.docker": dynamic subgraph completed successfully
2020/08/09 19:26:20 [TRACE] vertex "kubernetes_namespace.docker": visit complete
2020/08/09 19:26:20 [TRACE] EvalReadState: reading state for kubernetes_namespace.nginx-ingress
2020/08/09 19:26:20 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.nginx-ingress is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:20 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:20 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:20 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:20 [TRACE] GRPCProvider: ReadResource
2020-08-09T19:26:20.466+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:20 [INFO] Checking namespace nginx-ingress
2020-08-09T19:26:20.685+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:20 [INFO] Received namespace: &v1.Namespace{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"rio-system", GenerateName:"", Namespace:"", SelfLink:"/api/v1/namespaces/rio-system", UID:"11006daa-458c-42da-836f-47b4aabddc6a", ResourceVersion:"5084", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63732054356, loc:(*time.Location)(0x2dde260)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"objectset.rio.cattle.io/hash":"899a33b18b9e8c9ef48706203cee2719ceb0aa94", "rio.cattle.io/is-system":"true"}, Annotations:map[string]string{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{},\"labels\":{\"rio.cattle.io/is-system\":\"true\"},\"name\":\"rio-system\"}}\n", "objectset.rio.cattle.io/applied":"{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"objectset.rio.cattle.io/id\":\"system-stack-rio-bootstrap\",\"objectset.rio.cattle.io/owner-gvk\":\"admin.rio.cattle.io/v1, Kind=SystemStack\",\"objectset.rio.cattle.io/owner-name\":\"rio-bootstrap\",\"objectset.rio.cattle.io/owner-namespace\":\"\"},\"labels\":{\"objectset.rio.cattle.io/hash\":\"899a33b18b9e8c9ef48706203cee2719ceb0aa94\",\"rio.cattle.io/is-system\":\"true\"},\"name\":\"rio-system\",\"ownerReferences\":[{\"apiVersion\":\"admin.rio.cattle.io/v1\",\"blockOwnerDeletion\":true,\"controller\":true,\"kind\":\"SystemStack\",\"name\":\"rio-bootstrap\",\"uid\":\"73dcdb6d-98a4-4bc7-8d14-3cb3fec60ca1\"}]}}", "objectset.rio.cattle.io/id":"system-stack-rio-bootstrap", "objectset.rio.cattle.io/owner-gvk":"admin.rio.cattle.io/v1, Kind=SystemStack", "objectset.rio.cattle.io/owner-name":"rio-bootstrap", "objectset.rio.cattle.io/owner-namespace":""}, OwnerReferences:[]v1.OwnerReference{v1.OwnerReference{APIVersion:"admin.rio.cattle.io/v1", Kind:"SystemStack", Name:"rio-bootstrap", UID:"73dcdb6d-98a4-4bc7-8d14-3cb3fec60ca1", Controller:(*bool)(0xc00118c6eb), BlockOwnerDeletion:(*bool)(0xc00118c6ec)}}, Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000c3a420), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3a440)}, v1.ManagedFieldsEntry{Manager:"kubectl", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000c3a460), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3a480)}, v1.ManagedFieldsEntry{Manager:"rio-controller", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000c3a4a0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3a4c0)}}}, Spec:v1.NamespaceSpec{Finalizers:[]v1.FinalizerName{"kubernetes"}}, Status:v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}}
2020/08/09 19:26:20 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:20 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_namespace.rio
2020/08/09 19:26:20 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.rio
2020/08/09 19:26:20 [TRACE] [walkRefresh] Exiting eval tree: kubernetes_namespace.rio
2020/08/09 19:26:20 [TRACE] vertex "kubernetes_namespace.rio": visit complete
2020/08/09 19:26:20 [TRACE] vertex "kubernetes_namespace.rio": dynamic subgraph completed successfully
2020/08/09 19:26:20 [TRACE] vertex "kubernetes_namespace.rio": visit complete
2020/08/09 19:26:20 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:20 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:20 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:20 [TRACE] EvalReadState: reading state for kubernetes_namespace.postgres-ha
2020/08/09 19:26:20 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.postgres-ha is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:20 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:20 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:20 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:20 [TRACE] GRPCProvider: ReadResource
2020-08-09T19:26:20.687+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:20 [INFO] Checking namespace postgres-ha
2020-08-09T19:26:20.778+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:20 [INFO] Namespace nginx-ingress exists
2020-08-09T19:26:20.780+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:20 [INFO] Reading namespace nginx-ingress
2020-08-09T19:26:21.010+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:21 [INFO] Namespace postgres-ha exists
2020-08-09T19:26:21.010+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:21 [INFO] Reading namespace postgres-ha
2020-08-09T19:26:21.088+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:21 [INFO] Received namespace: &v1.Namespace{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"nginx-ingress", GenerateName:"", Namespace:"", SelfLink:"/api/v1/namespaces/nginx-ingress", UID:"22cea99c-6fca-440f-9f62-808b2e3b173e", ResourceVersion:"4178", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63732054908, loc:(*time.Location)(0x2dde260)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc0010f12e0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010f1300)}}}, Spec:v1.NamespaceSpec{Finalizers:[]v1.FinalizerName{"kubernetes"}}, Status:v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}}
2020/08/09 19:26:21 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:21 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_namespace.nginx-ingress
2020/08/09 19:26:21 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.nginx-ingress
2020/08/09 19:26:21 [TRACE] [walkRefresh] Exiting eval tree: kubernetes_namespace.nginx-ingress
2020/08/09 19:26:21 [TRACE] vertex "kubernetes_namespace.nginx-ingress": visit complete
2020/08/09 19:26:21 [TRACE] vertex "kubernetes_namespace.nginx-ingress": dynamic subgraph completed successfully
2020/08/09 19:26:21 [TRACE] vertex "kubernetes_namespace.nginx-ingress": visit complete
2020/08/09 19:26:21 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:21 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:21 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:21 [TRACE] EvalReadState: reading state for kubernetes_deployment.buildkitd
2020/08/09 19:26:21 [TRACE] UpgradeResourceState: schema version of kubernetes_deployment.buildkitd is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:21 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:21 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:21 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:21 [TRACE] GRPCProvider: ReadResource
2020-08-09T19:26:21.232+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:21 [INFO] Received namespace: &v1.Namespace{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"postgres-ha", GenerateName:"", Namespace:"", SelfLink:"/api/v1/namespaces/postgres-ha", UID:"bb9a6dd4-8f73-4862-b02b-71e549dd78c0", ResourceVersion:"2058524", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63732586718, loc:(*time.Location)(0x2dde260)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc0010f0180), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010f01a0)}}}, Spec:v1.NamespaceSpec{Finalizers:[]v1.FinalizerName{"kubernetes"}}, Status:v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}}
2020/08/09 19:26:21 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:21 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_namespace.postgres-ha
2020/08/09 19:26:21 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.postgres-ha
2020/08/09 19:26:21 [TRACE] [walkRefresh] Exiting eval tree: kubernetes_namespace.postgres-ha
2020/08/09 19:26:21 [TRACE] vertex "kubernetes_namespace.postgres-ha": visit complete
2020/08/09 19:26:21 [TRACE] vertex "kubernetes_namespace.postgres-ha": dynamic subgraph completed successfully
2020/08/09 19:26:21 [TRACE] vertex "kubernetes_namespace.postgres-ha": visit complete
2020/08/09 19:26:21 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:21 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:21 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:21 [TRACE] EvalReadState: reading state for helm_release.metrics-server
2020/08/09 19:26:21 [TRACE] UpgradeResourceState: schema version of helm_release.metrics-server is still 0; calling provider "registry.terraform.io/-/helm" for any other minor fixups
2020/08/09 19:26:21 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:21 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:21 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:21 [TRACE] GRPCProvider: ReadResource
2020-08-09T19:26:21.235+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:21 [DEBUG] [resourceReleaseExists: metrics-server] Start
2020-08-09T19:26:21.260+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:21 [INFO] Checking deployment buildkitd
2020-08-09T19:26:21.575+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:21 [INFO] Reading deployment buildkitd
2020-08-09T19:26:21.835+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:21 [INFO] Received deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"buildkitd", GenerateName:"", Namespace:"docker", SelfLink:"/apis/apps/v1/namespaces/docker/deployments/buildkitd", UID:"95f68562-443e-4a6d-aaf1-9a8fc89eaf23", ResourceVersion:"29303", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63732060653, loc:(*time.Location)(0x2dde260)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string{"deployment.kubernetes.io/revision":"1"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc00126e180), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00126e1a0)}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc00126e1c0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00126e1e0)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc0011fe51c), Selector:(*v1.LabelSelector)(0xc00126e200), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"app":"buildkitd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"buildkitd-config", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(0xc0004cc040), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}}, InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"buildkitd", Image:"moby/buildkit:master", Command:[]string(nil), Args:[]string{"--addr", "unix:///run/buildkit/buildkitd.sock", "--addr", "tcp://0.0.0.0:1234"}, WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:1234, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar{v1.EnvVar{Name:"DOCKER_CONFIG", Value:"/app", ValueFrom:(*v1.EnvVarSource)(nil)}}, Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:5, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"5", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:12884901888, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"12Gi", Format:"BinarySI"}}, Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"buildkitd-config", ReadOnly:false, MountPath:"/app/config.json", SubPath:"config.json", MountPropagation:(*v1.MountPropagationMode)(0xc0009d44b0), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(0xc000d88f90), ReadinessProbe:(*v1.Probe)(0xc000d88fc0), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(0xc0009ec0a0), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0011fe6e8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string{"doks.digitalocean.com/node-pool":"dish-ci-pool"}, ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc0011fe6f9), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc0011fe6fa), SecurityContext:(*v1.PodSecurityContext)(0xc0006f2000), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(nil), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc0009d4500)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc0011fe764), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc0011fe768)}, Status:v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63732060745, loc:(*time.Location)(0x2dde260)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63732060745, loc:(*time.Location)(0x2dde260)}}, Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63732060745, loc:(*time.Location)(0x2dde260)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63732060653, loc:(*time.Location)(0x2dde260)}}, Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"buildkitd-65647766f6\" has successfully progressed."}}, CollisionCount:(*int32)(nil)}}
2020/08/09 19:26:21 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:21 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.buildkitd
2020/08/09 19:26:21 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.buildkitd
2020/08/09 19:26:21 [TRACE] [walkRefresh] Exiting eval tree: kubernetes_deployment.buildkitd
2020/08/09 19:26:21 [TRACE] vertex "kubernetes_deployment.buildkitd": visit complete
2020/08/09 19:26:21 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:21 [TRACE] vertex "kubernetes_deployment.buildkitd": dynamic subgraph completed successfully
2020/08/09 19:26:21 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:21 [TRACE] vertex "kubernetes_deployment.buildkitd": visit complete
2020/08/09 19:26:21 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:21 [TRACE] EvalReadState: reading state for kubernetes_namespace.timescale
2020/08/09 19:26:21 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.timescale is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:21 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:21 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:21 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:21 [TRACE] GRPCProvider: ReadResource
2020-08-09T19:26:21.931+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:21 [INFO] Checking namespace timescale
2020-08-09T19:26:22.206+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:22 [INFO] Namespace timescale exists
2020-08-09T19:26:22.206+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:22 [INFO] Reading namespace timescale
2020-08-09T19:26:22.485+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:22 [INFO] Received namespace: &v1.Namespace{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"timescale", GenerateName:"", Namespace:"", SelfLink:"/api/v1/namespaces/timescale", UID:"d9395c40-5f9a-4041-9100-63619c43e2c1", ResourceVersion:"2820", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63732054356, loc:(*time.Location)(0x2dde260)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000b1e3a0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b1e3c0)}}}, Spec:v1.NamespaceSpec{Finalizers:[]v1.FinalizerName{"kubernetes"}}, Status:v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}}
2020/08/09 19:26:22 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:22 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_namespace.timescale
2020/08/09 19:26:22 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.timescale
2020/08/09 19:26:22 [TRACE] [walkRefresh] Exiting eval tree: kubernetes_namespace.timescale
2020/08/09 19:26:22 [TRACE] vertex "kubernetes_namespace.timescale": visit complete
2020/08/09 19:26:22 [TRACE] vertex "kubernetes_namespace.timescale": dynamic subgraph completed successfully
2020/08/09 19:26:22 [TRACE] vertex "kubernetes_namespace.timescale": visit complete
2020/08/09 19:26:22 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:22 [TRACE] dag/walk: visiting "kubernetes_secret.timescale-certificates"
2020/08/09 19:26:22 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:22 [TRACE] vertex "kubernetes_secret.timescale-certificates": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:22 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:22 [TRACE] vertex "kubernetes_secret.timescale-certificates": expanding dynamic subgraph
2020/08/09 19:26:22 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:22 [TRACE] dag/walk: visiting "kubernetes_secret.timescale-credentials"
2020/08/09 19:26:22 [TRACE] vertex "kubernetes_secret.timescale-credentials": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:22 [TRACE] EvalReadState: reading state for kubernetes_namespace.monitoring
2020/08/09 19:26:22 [TRACE] vertex "kubernetes_secret.timescale-credentials": expanding dynamic subgraph
2020/08/09 19:26:22 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_secret.timescale-certificates - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:22 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:22 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:22 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:22 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:22 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:22 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:22 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:22 [DEBUG] ReferenceTransformer: "kubernetes_secret.timescale-certificates" references: []
2020/08/09 19:26:22 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:22 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:22 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:22 [TRACE] vertex "kubernetes_secret.timescale-certificates": entering dynamic subgraph
2020/08/09 19:26:22 [TRACE] dag/walk: updating graph
2020/08/09 19:26:22 [TRACE] dag/walk: added new vertex: "kubernetes_secret.timescale-certificates"
2020/08/09 19:26:22 [TRACE] dag/walk: visiting "kubernetes_secret.timescale-certificates"
2020/08/09 19:26:22 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.monitoring is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:22 [TRACE] vertex "kubernetes_secret.timescale-certificates": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:22 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:22 [TRACE] NodeRefreshableManagedResourceInstance: kubernetes_secret.timescale-certificates will be refreshed
2020/08/09 19:26:22 [TRACE] vertex "kubernetes_secret.timescale-certificates": evaluating
2020/08/09 19:26:22 [TRACE] [walkRefresh] Entering eval tree: kubernetes_secret.timescale-certificates
2020/08/09 19:26:22 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:22 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_secret.timescale-credentials - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:22 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:22 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:22 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:22 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:22 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:22 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:22 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:22 [DEBUG] ReferenceTransformer: "kubernetes_secret.timescale-credentials" references: []
2020/08/09 19:26:22 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:22 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:22 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:22 [TRACE] vertex "kubernetes_secret.timescale-credentials": entering dynamic subgraph
2020/08/09 19:26:22 [TRACE] dag/walk: updating graph
2020/08/09 19:26:22 [TRACE] dag/walk: added new vertex: "kubernetes_secret.timescale-credentials"
2020/08/09 19:26:22 [TRACE] dag/walk: visiting "kubernetes_secret.timescale-credentials"
2020/08/09 19:26:22 [TRACE] vertex "kubernetes_secret.timescale-credentials": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:22 [TRACE] NodeRefreshableManagedResourceInstance: kubernetes_secret.timescale-credentials will be refreshed
2020/08/09 19:26:22 [TRACE] vertex "kubernetes_secret.timescale-credentials": evaluating
2020/08/09 19:26:22 [TRACE] [walkRefresh] Entering eval tree: kubernetes_secret.timescale-credentials
2020/08/09 19:26:22 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:22 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:22 [TRACE] GRPCProvider: ReadResource
2020-08-09T19:26:22.487+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:22 [INFO] Checking namespace monitoring
2020/08/09 19:26:22 [TRACE] dag/walk: vertex "helm_release.nginx-ingress" is waiting for "data.helm_repository.stable"
2020/08/09 19:26:22 [TRACE] dag/walk: vertex "null_resource.rio-app-domains" is waiting for "null_resource.rio-setup"
2020/08/09 19:26:22 [TRACE] dag/walk: vertex "module.cluster.output.cluster-id" is waiting for "module.cluster.digitalocean_kubernetes_cluster.dish"
2020/08/09 19:26:22 [TRACE] dag/walk: vertex "null_resource.cert-manager-setup" is waiting for "helm_release.cert-manager"
2020/08/09 19:26:22 [TRACE] dag/walk: vertex "kubernetes_ingress.rio-ingress" is waiting for "helm_release.cert-manager"
2020/08/09 19:26:22 [TRACE] dag/walk: vertex "provider.null (close)" is waiting for "null_resource.create-timescaledb-setup"
2020/08/09 19:26:22 [TRACE] dag/walk: vertex "null_resource.rio-custom-domain" is waiting for "null_resource.rio-setup"
2020/08/09 19:26:22 [TRACE] dag/walk: vertex "module.cluster.provider.digitalocean (close)" is waiting for "module.cluster.digitalocean_kubernetes_node_pool.ci"
2020/08/09 19:26:22 [TRACE] dag/walk: vertex "kubernetes_secret.cloudflare-dns-api-token" is waiting for "helm_release.cert-manager"
2020/08/09 19:26:22 [TRACE] dag/walk: vertex "root" is waiting for "module.cluster.output.cluster-id"
2020/08/09 19:26:22 [TRACE] dag/walk: vertex "null_resource.rio-setup" is waiting for "helm_release.cert-manager"
2020/08/09 19:26:22 [TRACE] dag/walk: vertex "module.cluster.digitalocean_kubernetes_node_pool.ancillary" is waiting for "module.cluster.digitalocean_kubernetes_cluster.dish"
2020/08/09 19:26:22 [TRACE] dag/walk: vertex "module.cluster.digitalocean_kubernetes_node_pool.workers" is waiting for "module.cluster.digitalocean_kubernetes_cluster.dish"
2020/08/09 19:26:22 [TRACE] dag/walk: vertex "module.cluster.digitalocean_kubernetes_node_pool.ci" is waiting for "module.cluster.digitalocean_kubernetes_cluster.dish"
2020-08-09T19:26:22.757+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:22 [INFO] Namespace monitoring exists
2020-08-09T19:26:22.757+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:22 [INFO] Reading namespace monitoring
2020-08-09T19:26:23.013+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:23 [INFO] Received namespace: &v1.Namespace{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"monitoring", GenerateName:"", Namespace:"", SelfLink:"/api/v1/namespaces/monitoring", UID:"8806c9a6-5a34-4722-b985-4940d0d2d7fb", ResourceVersion:"4223", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63732054910, loc:(*time.Location)(0x2dde260)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000eb3460), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000eb3480)}}}, Spec:v1.NamespaceSpec{Finalizers:[]v1.FinalizerName{"kubernetes"}}, Status:v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}}
2020/08/09 19:26:23 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:23 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_namespace.monitoring
2020/08/09 19:26:23 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.monitoring
2020/08/09 19:26:23 [TRACE] [walkRefresh] Exiting eval tree: kubernetes_namespace.monitoring
2020/08/09 19:26:23 [TRACE] vertex "kubernetes_namespace.monitoring": visit complete
2020/08/09 19:26:23 [TRACE] vertex "kubernetes_namespace.monitoring": dynamic subgraph completed successfully
2020/08/09 19:26:23 [TRACE] vertex "kubernetes_namespace.monitoring": visit complete
2020/08/09 19:26:23 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:23 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:23 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:23 [TRACE] EvalReadState: reading state for kubernetes_ingress.sentry-ingress
2020/08/09 19:26:23 [TRACE] UpgradeResourceState: schema version of kubernetes_ingress.sentry-ingress is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:23 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:23 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:23 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:23 [TRACE] GRPCProvider: ReadResource
2020-08-09T19:26:23.016+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:23 [INFO] Checking ingress sentry-ingress
2020/08/09 19:26:23 [TRACE] dag/walk: vertex "null_resource.create-timescaledb-setup" is waiting for "helm_release.timescaledb"
2020-08-09T19:26:23.290+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:23 [INFO] Reading ingress sentry-ingress
2020-08-09T19:26:23.557+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:23 [INFO] Received ingress: &v1beta1.Ingress{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"sentry-ingress", GenerateName:"", Namespace:"sentry", SelfLink:"/apis/extensions/v1beta1/namespaces/sentry/ingresses/sentry-ingress", UID:"f8ac635b-0ec9-47b1-b1c7-4326f7f21aca", ResourceVersion:"1104395", Generation:3, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63732067125, loc:(*time.Location)(0x2dde260)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string{"cert-manager.io/acme-challenge-type":"http01", "cert-manager.io/cluster-issuer":"letsencrypt-prod", "kubernetes.io/ingress.class":"nginx"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"extensions/v1beta1", Time:(*v1.Time)(0xc000ecae40), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ecae60)}, v1.ManagedFieldsEntry{Manager:"nginx-ingress-controller", Operation:"Update", APIVersion:"networking.k8s.io/v1beta1", Time:(*v1.Time)(0xc000ecae80), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ecaea0)}}}, Spec:v1beta1.IngressSpec{Backend:(*v1beta1.IngressBackend)(0xc000ddc420), TLS:[]v1beta1.IngressTLS{v1beta1.IngressTLS{Hosts:[]string{"sentry.k8s.dishapp.com"}, SecretName:"sentry-tls"}}, Rules:[]v1beta1.IngressRule{v1beta1.IngressRule{Host:"sentry.k8s.dishapp.com", IngressRuleValue:v1beta1.IngressRuleValue{HTTP:(*v1beta1.HTTPIngressRuleValue)(0xc000ecaee0)}}}}, Status:v1beta1.IngressStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress{v1.LoadBalancerIngress{IP:"138.68.230.152", Hostname:""}, v1.LoadBalancerIngress{IP:"138.68.61.179", Hostname:""}}}}}
2020-08-09T19:26:23.558+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:23 [DEBUG] Flattened ingress spec: []interface {}{map[string]interface {}{"backend":[]interface {}{map[string]interface {}{"service_name":"sentry-web", "service_port":"9000"}}, "rule":[]interface {}{map[string]interface {}{"host":"sentry.k8s.dishapp.com", "http":[]interface {}{map[string]interface {}{"path":[]interface {}{map[string]interface {}{"backend":[]interface {}{map[string]interface {}{"service_name":"sentry-web", "service_port":"9000"}}, "path":"/*"}}}}}}, "tls":[]interface {}{map[string]interface {}{"hosts":[]string{"sentry.k8s.dishapp.com"}, "secret_name":"sentry-tls"}}}}
2020/08/09 19:26:23 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:23 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_ingress.sentry-ingress
2020/08/09 19:26:23 [TRACE] EvalWriteState: writing current state object for kubernetes_ingress.sentry-ingress
2020/08/09 19:26:23 [TRACE] [walkRefresh] Exiting eval tree: kubernetes_ingress.sentry-ingress
2020/08/09 19:26:23 [TRACE] vertex "kubernetes_ingress.sentry-ingress": visit complete
2020/08/09 19:26:23 [TRACE] vertex "kubernetes_ingress.sentry-ingress": dynamic subgraph completed successfully
2020/08/09 19:26:23 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:23 [TRACE] vertex "kubernetes_ingress.sentry-ingress": visit complete
2020/08/09 19:26:23 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:23 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:23 [TRACE] EvalReadState: reading state for kubernetes_namespace.sentry
2020/08/09 19:26:23 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.sentry is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:23 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:23 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:23 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:23 [TRACE] GRPCProvider: ReadResource
2020-08-09T19:26:23.560+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:23 [INFO] Checking namespace sentry
2020-08-09T19:26:23.827+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:23 [INFO] Namespace sentry exists
2020-08-09T19:26:23.827+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:23 [INFO] Reading namespace sentry
2020/08/09 19:26:23 [TRACE] dag/walk: vertex "provider.helm (close)" is waiting for "helm_release.sentry-k8s-erros"
2020-08-09T19:26:24.098+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:24 [INFO] Received namespace: &v1.Namespace{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"sentry", GenerateName:"", Namespace:"", SelfLink:"/api/v1/namespaces/sentry", UID:"45a18eec-2386-49ab-bac5-0210daf62149", ResourceVersion:"55745", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63732067125, loc:(*time.Location)(0x2dde260)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000d04a40), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d04a60)}}}, Spec:v1.NamespaceSpec{Finalizers:[]v1.FinalizerName{"kubernetes"}}, Status:v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}}
2020/08/09 19:26:24 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:24 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_namespace.sentry
2020/08/09 19:26:24 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.sentry
2020/08/09 19:26:24 [TRACE] [walkRefresh] Exiting eval tree: kubernetes_namespace.sentry
2020/08/09 19:26:24 [TRACE] vertex "kubernetes_namespace.sentry": visit complete
2020/08/09 19:26:24 [TRACE] vertex "kubernetes_namespace.sentry": dynamic subgraph completed successfully
2020/08/09 19:26:24 [TRACE] vertex "kubernetes_namespace.sentry": visit complete
2020/08/09 19:26:24 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:24 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:24 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:24 [TRACE] EvalReadState: reading state for kubernetes_service.buildkitd
2020/08/09 19:26:24 [TRACE] UpgradeResourceState: schema version of kubernetes_service.buildkitd is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:24 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:24 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:24 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:24 [TRACE] GRPCProvider: ReadResource
2020-08-09T19:26:24.101+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:24 [INFO] Checking service buildkitd
2020-08-09T19:26:24.311+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:24 [INFO] Reading service buildkitd
2020-08-09T19:26:24.521+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:24 [INFO] Received service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"buildkitd", GenerateName:"", Namespace:"docker", SelfLink:"/api/v1/namespaces/docker/services/buildkitd", UID:"d51ec684-b2c0-4fe4-a648-39960c105f27", ResourceVersion:"28732", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63732060597, loc:(*time.Location)(0x2dde260)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000d141e0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d14200)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"http", Protocol:"TCP", Port:1234, TargetPort:intstr.IntOrString{Type:0, IntVal:1234, StrVal:""}, NodePort:0}}, Selector:map[string]string{"app":"buildkitd"}, ClusterIP:"10.245.201.169", Type:"ClusterIP", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}
2020-08-09T19:26:24.521+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:24 [DEBUG] Flattened service spec: []interface {}{map[string]interface {}{"cluster_ip":"10.245.201.169", "port":[]interface {}{map[string]interface {}{"name":"http", "node_port":0, "port":1234, "protocol":"TCP", "target_port":"1234"}}, "publish_not_ready_addresses":false, "selector":map[string]string{"app":"buildkitd"}, "session_affinity":"None", "type":"ClusterIP"}}
2020/08/09 19:26:24 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:24 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_service.buildkitd
2020/08/09 19:26:24 [TRACE] EvalWriteState: writing current state object for kubernetes_service.buildkitd
2020/08/09 19:26:24 [TRACE] [walkRefresh] Exiting eval tree: kubernetes_service.buildkitd
2020/08/09 19:26:24 [TRACE] vertex "kubernetes_service.buildkitd": visit complete
2020/08/09 19:26:24 [TRACE] vertex "kubernetes_service.buildkitd": dynamic subgraph completed successfully
2020/08/09 19:26:24 [TRACE] vertex "kubernetes_service.buildkitd": visit complete
2020/08/09 19:26:24 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/08/09 19:26:24 [TRACE] GRPCProvider: Close
2020-08-09T19:26:24.524+0300 [DEBUG] plugin: plugin process exited: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-local_v1.4.0_x4 pid=4110921
2020-08-09T19:26:24.524+0300 [DEBUG] plugin: plugin exited
2020/08/09 19:26:24 [TRACE] [walkRefresh] Exiting eval tree: provider.local (close)
2020/08/09 19:26:24 [TRACE] vertex "provider.local (close)": visit complete
2020/08/09 19:26:24 [TRACE] module.cluster: eval: *terraform.EvalSequence
2020/08/09 19:26:24 [TRACE] module.cluster: eval: *terraform.EvalGetProvider
2020/08/09 19:26:24 [TRACE] module.cluster: eval: *terraform.EvalReadState
2020/08/09 19:26:24 [TRACE] EvalReadState: reading state for module.cluster.digitalocean_kubernetes_cluster.dish
2020/08/09 19:26:24 [TRACE] UpgradeResourceState: schema version of module.cluster.digitalocean_kubernetes_cluster.dish is still 2; calling provider "registry.terraform.io/-/digitalocean" for any other minor fixups
2020/08/09 19:26:24 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:24 [TRACE] module.cluster: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:24 [TRACE] module.cluster: eval: *terraform.EvalRefresh
2020/08/09 19:26:24 [TRACE] GRPCProvider: ReadResource
2020/08/09 19:26:25 [TRACE] <root>: eval: *terraform.EvalIf
2020/08/09 19:26:25 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:25 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:25 [TRACE] EvalWriteState: writing current state object for data.helm_repository.stable
2020/08/09 19:26:25 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2020/08/09 19:26:25 [TRACE] [walkRefresh] Exiting eval tree: data.helm_repository.stable
2020/08/09 19:26:25 [TRACE] vertex "data.helm_repository.stable": visit complete
2020/08/09 19:26:25 [TRACE] vertex "data.helm_repository.stable": dynamic subgraph completed successfully
2020/08/09 19:26:25 [TRACE] vertex "data.helm_repository.stable": visit complete
2020/08/09 19:26:25 [TRACE] dag/walk: visiting "helm_release.nginx-ingress"
2020/08/09 19:26:25 [TRACE] vertex "helm_release.nginx-ingress": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:25 [TRACE] vertex "helm_release.nginx-ingress": expanding dynamic subgraph
2020/08/09 19:26:25 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:25 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:25 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  helm_release.nginx-ingress - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:25 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:25 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:25 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:25 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:25 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:25 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:25 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:25 [TRACE] EvalReadState: reading state for helm_release.cert-manager
2020/08/09 19:26:25 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:25 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:25 [DEBUG] ReferenceTransformer: "helm_release.nginx-ingress" references: []
2020/08/09 19:26:25 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:25 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:25 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:25 [TRACE] vertex "helm_release.nginx-ingress": entering dynamic subgraph
2020/08/09 19:26:25 [TRACE] dag/walk: updating graph
2020/08/09 19:26:25 [TRACE] dag/walk: added new vertex: "helm_release.nginx-ingress"
2020/08/09 19:26:25 [TRACE] dag/walk: visiting "helm_release.nginx-ingress"
2020/08/09 19:26:25 [TRACE] vertex "helm_release.nginx-ingress": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:25 [TRACE] NodeRefreshableManagedResourceInstance: helm_release.nginx-ingress will be refreshed
2020/08/09 19:26:25 [TRACE] vertex "helm_release.nginx-ingress": evaluating
2020/08/09 19:26:25 [TRACE] [walkRefresh] Entering eval tree: helm_release.nginx-ingress
2020/08/09 19:26:25 [TRACE] UpgradeResourceState: schema version of helm_release.cert-manager is still 0; calling provider "registry.terraform.io/-/helm" for any other minor fixups
2020/08/09 19:26:25 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:25 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:25 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:25 [TRACE] GRPCProvider: ReadResource
2020-08-09T19:26:25.169+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:25 [DEBUG] [resourceReleaseExists: cert-manager] Start
2020/08/09 19:26:25 [TRACE] module.cluster: eval: *terraform.EvalWriteState
2020/08/09 19:26:25 [TRACE] EvalWriteState: recording 0 dependencies for module.cluster.digitalocean_kubernetes_cluster.dish
2020/08/09 19:26:25 [TRACE] EvalWriteState: writing current state object for module.cluster.digitalocean_kubernetes_cluster.dish
2020/08/09 19:26:25 [TRACE] [walkRefresh] Exiting eval tree: module.cluster.digitalocean_kubernetes_cluster.dish
2020/08/09 19:26:25 [TRACE] vertex "module.cluster.digitalocean_kubernetes_cluster.dish": visit complete
2020/08/09 19:26:25 [TRACE] vertex "module.cluster.digitalocean_kubernetes_cluster.dish": dynamic subgraph completed successfully
2020/08/09 19:26:25 [TRACE] vertex "module.cluster.digitalocean_kubernetes_cluster.dish": visit complete
2020/08/09 19:26:25 [TRACE] dag/walk: visiting "module.cluster.output.cluster-id"
2020/08/09 19:26:25 [TRACE] vertex "module.cluster.output.cluster-id": starting visit (*terraform.NodeApplyableOutput)
2020/08/09 19:26:25 [TRACE] vertex "module.cluster.output.cluster-id": evaluating
2020/08/09 19:26:25 [TRACE] dag/walk: visiting "module.cluster.digitalocean_kubernetes_node_pool.ci"
2020/08/09 19:26:25 [TRACE] [walkRefresh] Entering eval tree: module.cluster.output.cluster-id
2020/08/09 19:26:25 [TRACE] dag/walk: visiting "module.cluster.digitalocean_kubernetes_node_pool.workers"
2020/08/09 19:26:25 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ci": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:25 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:25 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.workers": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:25 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:25 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ci": expanding dynamic subgraph
2020/08/09 19:26:25 [TRACE] dag/walk: visiting "module.cluster.digitalocean_kubernetes_node_pool.ancillary"
2020/08/09 19:26:25 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.workers": expanding dynamic subgraph
2020/08/09 19:26:25 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:25 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ancillary": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:25 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:25 [TRACE] EvalReadState: reading state for kubernetes_secret.timescale-certificates
2020/08/09 19:26:25 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ancillary": expanding dynamic subgraph
2020/08/09 19:26:25 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:25 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:25 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:25 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:25 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:25 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:25 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:25 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:25 [DEBUG] ReferenceTransformer: "module.cluster.digitalocean_kubernetes_node_pool.ci" references: []
2020/08/09 19:26:25 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:25 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:25 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:25 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ci": entering dynamic subgraph
2020/08/09 19:26:25 [TRACE] dag/walk: updating graph
2020/08/09 19:26:25 [TRACE] dag/walk: added new vertex: "module.cluster.digitalocean_kubernetes_node_pool.ci"
2020/08/09 19:26:25 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:25 [TRACE] UpgradeResourceState: schema version of kubernetes_secret.timescale-certificates is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:25 [TRACE] dag/walk: visiting "module.cluster.digitalocean_kubernetes_node_pool.ci"
2020/08/09 19:26:25 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:25 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ci": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:25 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:25 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:25 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:25 [TRACE] NodeRefreshableManagedResourceInstance: module.cluster.digitalocean_kubernetes_node_pool.ci will be refreshed
2020/08/09 19:26:25 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:25 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ci": evaluating
2020/08/09 19:26:25 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:25 [TRACE] [walkRefresh] Entering eval tree: module.cluster.digitalocean_kubernetes_node_pool.ci
2020/08/09 19:26:25 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:25 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:25 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:25 [DEBUG] ReferenceTransformer: "module.cluster.digitalocean_kubernetes_node_pool.workers" references: []
2020/08/09 19:26:25 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:25 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:25 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:25 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.workers": entering dynamic subgraph
2020/08/09 19:26:25 [TRACE] dag/walk: updating graph
2020/08/09 19:26:25 [TRACE] dag/walk: added new vertex: "module.cluster.digitalocean_kubernetes_node_pool.workers"
2020/08/09 19:26:25 [TRACE] dag/walk: visiting "module.cluster.digitalocean_kubernetes_node_pool.workers"
2020/08/09 19:26:25 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.workers": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:25 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:25 [TRACE] NodeRefreshableManagedResourceInstance: module.cluster.digitalocean_kubernetes_node_pool.workers will be refreshed
2020/08/09 19:26:25 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:25 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:25 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.workers": evaluating
2020/08/09 19:26:25 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:25 [TRACE] [walkRefresh] Entering eval tree: module.cluster.digitalocean_kubernetes_node_pool.workers
2020/08/09 19:26:25 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:25 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:25 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:25 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:25 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:25 [DEBUG] ReferenceTransformer: "module.cluster.digitalocean_kubernetes_node_pool.ancillary" references: []
2020/08/09 19:26:25 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:25 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:25 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:25 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ancillary": entering dynamic subgraph
2020/08/09 19:26:25 [TRACE] dag/walk: updating graph
2020/08/09 19:26:25 [TRACE] dag/walk: added new vertex: "module.cluster.digitalocean_kubernetes_node_pool.ancillary"
2020/08/09 19:26:25 [TRACE] dag/walk: visiting "module.cluster.digitalocean_kubernetes_node_pool.ancillary"
2020/08/09 19:26:25 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ancillary": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:25 [TRACE] NodeRefreshableManagedResourceInstance: module.cluster.digitalocean_kubernetes_node_pool.ancillary will be refreshed
2020/08/09 19:26:25 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ancillary": evaluating
2020/08/09 19:26:25 [TRACE] [walkRefresh] Entering eval tree: module.cluster.digitalocean_kubernetes_node_pool.ancillary
2020/08/09 19:26:25 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:25 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:25 [TRACE] GRPCProvider: ReadResource
2020-08-09T19:26:25.394+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:25 [INFO] Checking secret timescale-certificate
2020-08-09T19:26:25.507+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:25 [DEBUG] [INFO] GetHelmConfiguration start
2020-08-09T19:26:25.507+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:25 [INFO] Successfully initialized kubernetes config
2020-08-09T19:26:25.507+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:25 [DEBUG] [INFO] GetHelmConfiguration success
2020-08-09T19:26:25.507+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:25 [DEBUG] prometheus-operator getRelease wait for lock
2020-08-09T19:26:25.507+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:25 [DEBUG] [INFO] GetHelmConfiguration start
2020/08/09 19:26:25 [TRACE] <root>: eval: *terraform.EvalIf
2020/08/09 19:26:25 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:25 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:25 [TRACE] EvalWriteState: writing current state object for data.helm_repository.sentry
2020-08-09T19:26:25.507+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:25 [INFO] Successfully initialized kubernetes config
2020-08-09T19:26:25.507+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:25 [DEBUG] [INFO] GetHelmConfiguration success
2020-08-09T19:26:25.507+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:25 [DEBUG] timescale getRelease wait for lock
2020-08-09T19:26:25.507+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:25 [DEBUG] docker-registry getRelease got lock, started
2020-08-09T19:26:25.507+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:25 [DEBUG] docker-registry getRelease post action created
2020/08/09 19:26:25 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2020/08/09 19:26:25 [TRACE] [walkRefresh] Exiting eval tree: data.helm_repository.sentry
2020/08/09 19:26:25 [TRACE] vertex "data.helm_repository.sentry": visit complete
2020/08/09 19:26:25 [TRACE] vertex "data.helm_repository.sentry": dynamic subgraph completed successfully
2020/08/09 19:26:25 [TRACE] vertex "data.helm_repository.sentry": visit complete
2020/08/09 19:26:25 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:25 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:25 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:25 [TRACE] EvalReadState: reading state for kubernetes_secret.timescale-credentials
2020/08/09 19:26:25 [TRACE] UpgradeResourceState: schema version of kubernetes_secret.timescale-credentials is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:25 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:25 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:25 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:25 [TRACE] GRPCProvider: ReadResource
2020-08-09T19:26:25.509+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:25 [INFO] Checking secret timescale-credentials
2020-08-09T19:26:25.608+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:25 [INFO] Reading secret timescale-certificate
2020-08-09T19:26:25.719+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:25 [INFO] Reading secret timescale-credentials
2020-08-09T19:26:25.869+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:25 [INFO] Received secret: &v1.Secret{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"timescale-certificate", GenerateName:"", Namespace:"timescale", SelfLink:"/api/v1/namespaces/timescale/secrets/timescale-certificate", UID:"93bc79ed-e1ec-4c03-a6e0-1b1c7726a330", ResourceVersion:"2857", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63732054357, loc:(*time.Location)(0x2dde260)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc0003abec0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0003abee0)}}}, Data:map[string][]uint8{"tls.crt":[]uint8{0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa, 0x4d, 0x49, 0x49, 0x46, 0x43, 0x54, 0x43, 0x43, 0x41, 0x76, 0x47, 0x67, 0x41, 0x77, 0x49, 0x42, 0x41, 0x67, 0x49, 0x55, 0x4d, 0x56, 0x42, 0x63, 0x73, 0x55, 0x70, 0x5a, 0x4d, 0x42, 0x6f, 0x2b, 0x6f, 0x38, 0x62, 0x4d, 0x45, 0x45, 0x65, 0x38, 0x75, 0x55, 0x31, 0x6a, 0x59, 0x38, 0x59, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x4c, 0xa, 0x42, 0x51, 0x41, 0x77, 0x46, 0x44, 0x45, 0x53, 0x4d, 0x42, 0x41, 0x47, 0x41, 0x31, 0x55, 0x45, 0x41, 0x77, 0x77, 0x4a, 0x64, 0x47, 0x6c, 0x74, 0x5a, 0x58, 0x4e, 0x6a, 0x59, 0x57, 0x78, 0x6c, 0x4d, 0x42, 0x34, 0x58, 0x44, 0x54, 0x49, 0x77, 0x4d, 0x44, 0x63, 0x7a, 0x4d, 0x44, 0x45, 0x31, 0x4d, 0x7a, 0x49, 0x30, 0x4e, 0x31, 0x6f, 0x58, 0x44, 0x54, 0x49, 0x77, 0x4d, 0x44, 0x63, 0x7a, 0xa, 0x4d, 0x54, 0x45, 0x31, 0x4d, 0x7a, 0x49, 0x30, 0x4e, 0x31, 0x6f, 0x77, 0x46, 0x44, 0x45, 0x53, 0x4d, 0x42, 0x41, 0x47, 0x41, 0x31, 0x55, 0x45, 0x41, 0x77, 0x77, 0x4a, 0x64, 0x47, 0x6c, 0x74, 0x5a, 0x58, 0x4e, 0x6a, 0x59, 0x57, 0x78, 0x6c, 0x4d, 0x49, 0x49, 0x43, 0x49, 0x6a, 0x41, 0x4e, 0x42, 0x67, 0x6b, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x39, 0x77, 0x30, 0x42, 0x41, 0x51, 0x45, 0x46, 0xa, 0x41, 0x41, 0x4f, 0x43, 0x41, 0x67, 0x38, 0x41, 0x4d, 0x49, 0x49, 0x43, 0x43, 0x67, 0x4b, 0x43, 0x41, 0x67, 0x45, 0x41, 0x78, 0x64, 0x45, 0x44, 0x6a, 0x71, 0x6e, 0x71, 0x58, 0x56, 0x73, 0x59, 0x56, 0x31, 0x53, 0x76, 0x41, 0x64, 0x42, 0x31, 0x63, 0x5a, 0x64, 0x73, 0x64, 0x72, 0x44, 0x75, 0x43, 0x47, 0x4c, 0x4c, 0x50, 0x51, 0x4b, 0x55, 0x39, 0x49, 0x6e, 0x2b, 0x46, 0x72, 0x43, 0x62, 0xa, 0x62, 0x56, 0x6e, 0x59, 0x5a, 0x4e, 0x2f, 0x54, 0x2b, 0x76, 0x41, 0x63, 0x67, 0x52, 0x31, 0x63, 0x75, 0x39, 0x4f, 0x36, 0x77, 0x4c, 0x72, 0x71, 0x72, 0x67, 0x2b, 0x42, 0x76, 0x7a, 0x45, 0x4e, 0x45, 0x67, 0x67, 0x67, 0x35, 0x5a, 0x53, 0x2b, 0x54, 0x41, 0x39, 0x5a, 0x38, 0x51, 0x67, 0x5a, 0x59, 0x71, 0x42, 0x4c, 0x63, 0x31, 0x77, 0x55, 0x5a, 0x43, 0x54, 0x4f, 0x6f, 0x54, 0x34, 0x4d, 0xa, 0x50, 0x55, 0x54, 0x32, 0x39, 0x2f, 0x6d, 0x34, 0x39, 0x6a, 0x57, 0x67, 0x65, 0x4a, 0x53, 0x69, 0x75, 0x36, 0x78, 0x2f, 0x59, 0x52, 0x65, 0x6f, 0x39, 0x4c, 0x5a, 0x6c, 0x31, 0x75, 0x53, 0x4e, 0x76, 0x37, 0x66, 0x34, 0x38, 0x42, 0x69, 0x6d, 0x34, 0x68, 0x51, 0x76, 0x39, 0x49, 0x2b, 0x2f, 0x38, 0x36, 0x45, 0x32, 0x46, 0x44, 0x46, 0x74, 0x70, 0x4b, 0x68, 0x4c, 0x39, 0x73, 0x4f, 0x46, 0xa, 0x36, 0x4a, 0x48, 0x62, 0x45, 0x38, 0x51, 0x31, 0x6b, 0x46, 0x6c, 0x2b, 0x6e, 0x63, 0x78, 0x62, 0x6c, 0x57, 0x32, 0x77, 0x62, 0x64, 0x38, 0x62, 0x31, 0x67, 0x65, 0x35, 0x57, 0x6e, 0x31, 0x4b, 0x64, 0x4d, 0x2b, 0x32, 0x6d, 0x2b, 0x55, 0x35, 0x67, 0x59, 0x65, 0x78, 0x79, 0x47, 0x55, 0x4d, 0x62, 0x62, 0x53, 0x75, 0x72, 0x73, 0x41, 0x49, 0x2b, 0x2b, 0x71, 0x79, 0x4d, 0x72, 0x71, 0x43, 0xa, 0x4e, 0x67, 0x53, 0x33, 0x33, 0x4d, 0x4a, 0x51, 0x4c, 0x63, 0x75, 0x66, 0x76, 0x4b, 0x51, 0x5a, 0x53, 0x64, 0x74, 0x6e, 0x30, 0x71, 0x61, 0x55, 0x6c, 0x6d, 0x36, 0x2f, 0x48, 0x78, 0x54, 0x4e, 0x47, 0x54, 0x78, 0x78, 0x4a, 0x41, 0x52, 0x4a, 0x67, 0x70, 0x43, 0x50, 0x43, 0x46, 0x63, 0x69, 0x7a, 0x55, 0x31, 0x7a, 0x35, 0x31, 0x32, 0x58, 0x30, 0x76, 0x4d, 0x4d, 0x51, 0x68, 0x5a, 0x54, 0xa, 0x52, 0x73, 0x45, 0x42, 0x53, 0x4b, 0x4f, 0x67, 0x2b, 0x50, 0x2f, 0x42, 0x73, 0x51, 0x57, 0x31, 0x77, 0x49, 0x35, 0x4e, 0x2b, 0x69, 0x75, 0x58, 0x55, 0x49, 0x34, 0x68, 0x70, 0x35, 0x46, 0x6e, 0x68, 0x59, 0x65, 0x6a, 0x4b, 0x43, 0x6f, 0x49, 0x63, 0x78, 0x49, 0x34, 0x6c, 0x38, 0x47, 0x74, 0x55, 0x55, 0x35, 0x38, 0x6d, 0x2f, 0x64, 0x4f, 0x5a, 0x44, 0x59, 0x35, 0x46, 0x53, 0x78, 0x41, 0xa, 0x72, 0x6c, 0x6f, 0x65, 0x77, 0x61, 0x58, 0x31, 0x66, 0x53, 0x79, 0x6c, 0x6c, 0x45, 0x41, 0x2f, 0x4f, 0x64, 0x75, 0x66, 0x43, 0x31, 0x2f, 0x4a, 0x53, 0x58, 0x52, 0x5a, 0x72, 0x69, 0x34, 0x46, 0x71, 0x4c, 0x62, 0x41, 0x2b, 0x69, 0x63, 0x78, 0x34, 0x6b, 0x43, 0x33, 0x44, 0x6e, 0x4c, 0x4c, 0x50, 0x4b, 0x66, 0x43, 0x45, 0x6d, 0x67, 0x35, 0x74, 0x74, 0x58, 0x57, 0x7a, 0x57, 0x41, 0x52, 0xa, 0x4a, 0x70, 0x45, 0x77, 0x59, 0x66, 0x78, 0x50, 0x35, 0x47, 0x48, 0x49, 0x4d, 0x70, 0x76, 0x58, 0x48, 0x6f, 0x61, 0x4b, 0x71, 0x46, 0x78, 0x65, 0x5a, 0x32, 0x50, 0x57, 0x5a, 0x39, 0x33, 0x54, 0x32, 0x36, 0x54, 0x76, 0x75, 0x6e, 0x66, 0x54, 0x44, 0x61, 0x46, 0x44, 0x2f, 0x45, 0x54, 0x47, 0x71, 0x78, 0x58, 0x54, 0x4d, 0x6f, 0x49, 0x75, 0x4a, 0x62, 0x7a, 0x2f, 0x4a, 0x65, 0x4f, 0x37, 0xa, 0x6a, 0x64, 0x37, 0x43, 0x72, 0x53, 0x39, 0x63, 0x56, 0x31, 0x47, 0x41, 0x55, 0x6e, 0x4a, 0x6f, 0x65, 0x34, 0x39, 0x42, 0x62, 0x32, 0x76, 0x46, 0x30, 0x67, 0x72, 0x78, 0x50, 0x4d, 0x67, 0x6f, 0x62, 0x6d, 0x36, 0x30, 0x66, 0x68, 0x6c, 0x4c, 0x50, 0x6f, 0x42, 0x78, 0x75, 0x47, 0x68, 0x53, 0x6d, 0x7a, 0x57, 0x6d, 0x51, 0x4d, 0x4e, 0x37, 0x68, 0x6b, 0x38, 0x47, 0x54, 0x42, 0x6b, 0x42, 0xa, 0x30, 0x66, 0x70, 0x79, 0x67, 0x76, 0x58, 0x71, 0x44, 0x68, 0x6e, 0x4f, 0x43, 0x4c, 0x31, 0x75, 0x57, 0x61, 0x79, 0x47, 0x45, 0x63, 0x39, 0x35, 0x47, 0x62, 0x54, 0x68, 0x53, 0x46, 0x78, 0x6b, 0x58, 0x5a, 0x73, 0x66, 0x76, 0x42, 0x42, 0x49, 0x33, 0x33, 0x63, 0x2b, 0x47, 0x4f, 0x7a, 0x4b, 0x57, 0x63, 0x79, 0x4a, 0x63, 0x35, 0x57, 0x43, 0x45, 0x4f, 0x2f, 0x76, 0x52, 0x53, 0x34, 0x2b, 0xa, 0x4e, 0x33, 0x54, 0x4e, 0x33, 0x6d, 0x58, 0x4e, 0x38, 0x6e, 0x34, 0x39, 0x75, 0x56, 0x76, 0x6f, 0x30, 0x4a, 0x43, 0x30, 0x54, 0x45, 0x58, 0x57, 0x70, 0x62, 0x2b, 0x62, 0x2f, 0x47, 0x65, 0x37, 0x30, 0x64, 0x77, 0x35, 0x34, 0x62, 0x57, 0x42, 0x74, 0x2b, 0x42, 0x58, 0x72, 0x32, 0x42, 0x54, 0x72, 0x31, 0x4d, 0x31, 0x2f, 0x4c, 0x7a, 0x57, 0x6e, 0x77, 0x54, 0x62, 0x43, 0x53, 0x6b, 0x43, 0xa, 0x41, 0x77, 0x45, 0x41, 0x41, 0x61, 0x4e, 0x54, 0x4d, 0x46, 0x45, 0x77, 0x48, 0x51, 0x59, 0x44, 0x56, 0x52, 0x30, 0x4f, 0x42, 0x42, 0x59, 0x45, 0x46, 0x44, 0x6b, 0x77, 0x2b, 0x4a, 0x52, 0x2f, 0x38, 0x57, 0x61, 0x78, 0x59, 0x68, 0x57, 0x6e, 0x75, 0x6a, 0x41, 0x4b, 0x32, 0x42, 0x57, 0x73, 0x7a, 0x57, 0x72, 0x37, 0x4d, 0x42, 0x38, 0x47, 0x41, 0x31, 0x55, 0x64, 0x49, 0x77, 0x51, 0x59, 0xa, 0x4d, 0x42, 0x61, 0x41, 0x46, 0x44, 0x6b, 0x77, 0x2b, 0x4a, 0x52, 0x2f, 0x38, 0x57, 0x61, 0x78, 0x59, 0x68, 0x57, 0x6e, 0x75, 0x6a, 0x41, 0x4b, 0x32, 0x42, 0x57, 0x73, 0x7a, 0x57, 0x72, 0x37, 0x4d, 0x41, 0x38, 0x47, 0x41, 0x31, 0x55, 0x64, 0x45, 0x77, 0x45, 0x42, 0x2f, 0x77, 0x51, 0x46, 0x4d, 0x41, 0x4d, 0x42, 0x41, 0x66, 0x38, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0xa, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x4c, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x49, 0x42, 0x41, 0x48, 0x50, 0x53, 0x51, 0x38, 0x35, 0x4f, 0x7a, 0x7a, 0x77, 0x73, 0x43, 0x77, 0x78, 0x55, 0x71, 0x43, 0x6b, 0x7a, 0x61, 0x30, 0x49, 0x64, 0x68, 0x2b, 0x38, 0x51, 0x64, 0x38, 0x65, 0x31, 0x46, 0x63, 0x53, 0x2f, 0x75, 0x51, 0x68, 0x76, 0x37, 0x2b, 0x6f, 0x45, 0x6d, 0x30, 0x4f, 0x6d, 0xa, 0x78, 0x2f, 0x2b, 0x4f, 0x51, 0x46, 0x53, 0x62, 0x55, 0x78, 0x39, 0x51, 0x52, 0x44, 0x37, 0x48, 0x53, 0x74, 0x39, 0x68, 0x75, 0x69, 0x6f, 0x50, 0x43, 0x53, 0x56, 0x42, 0x59, 0x48, 0x70, 0x4c, 0x5a, 0x73, 0x30, 0x37, 0x7a, 0x6e, 0x6f, 0x79, 0x44, 0x56, 0x35, 0x34, 0x6d, 0x6c, 0x48, 0x56, 0x32, 0x57, 0x34, 0x79, 0x52, 0x75, 0x6e, 0x71, 0x38, 0x36, 0x54, 0x35, 0x77, 0x79, 0x41, 0x51, 0xa, 0x62, 0x49, 0x78, 0x34, 0x67, 0x72, 0x74, 0x49, 0x70, 0x70, 0x54, 0x6d, 0x77, 0x31, 0x42, 0x47, 0x5a, 0x59, 0x6d, 0x6c, 0x6c, 0x69, 0x54, 0x4f, 0x39, 0x70, 0x46, 0x76, 0x33, 0x6b, 0x7a, 0x54, 0x37, 0x50, 0x68, 0x63, 0x6d, 0x41, 0x50, 0x78, 0x52, 0x52, 0x61, 0x47, 0x75, 0x65, 0x2f, 0x70, 0x68, 0x32, 0x49, 0x4b, 0x64, 0x53, 0x34, 0x2f, 0x6c, 0x2b, 0x41, 0x69, 0x33, 0x58, 0x4d, 0x48, 0xa, 0x76, 0x52, 0x6a, 0x50, 0x67, 0x78, 0x65, 0x32, 0x36, 0x49, 0x46, 0x53, 0x54, 0x71, 0x46, 0x61, 0x50, 0x2f, 0x52, 0x2f, 0x74, 0x38, 0x47, 0x43, 0x30, 0x77, 0x42, 0x78, 0x5a, 0x4d, 0x4d, 0x44, 0x38, 0x50, 0x5a, 0x4e, 0x7a, 0x4e, 0x62, 0x43, 0x44, 0x6c, 0x4b, 0x4e, 0x54, 0x39, 0x41, 0x45, 0x4a, 0x34, 0x30, 0x31, 0x46, 0x67, 0x49, 0x31, 0x35, 0x52, 0x72, 0x42, 0x53, 0x45, 0x42, 0x53, 0xa, 0x70, 0x66, 0x2f, 0x30, 0x6a, 0x53, 0x65, 0x32, 0x63, 0x6e, 0x4e, 0x64, 0x70, 0x4b, 0x54, 0x4d, 0x35, 0x4d, 0x31, 0x51, 0x4f, 0x78, 0x63, 0x72, 0x4d, 0x42, 0x37, 0x46, 0x58, 0x38, 0x79, 0x58, 0x39, 0x34, 0x30, 0x4c, 0x35, 0x41, 0x6a, 0x4a, 0x30, 0x33, 0x71, 0x33, 0x44, 0x49, 0x54, 0x77, 0x75, 0x66, 0x42, 0x55, 0x5a, 0x32, 0x38, 0x72, 0x48, 0x31, 0x6c, 0x63, 0x74, 0x68, 0x74, 0x2b, 0xa, 0x4d, 0x33, 0x45, 0x6e, 0x6a, 0x64, 0x31, 0x70, 0x45, 0x4a, 0x6a, 0x59, 0x50, 0x48, 0x6c, 0x7a, 0x75, 0x55, 0x6a, 0x73, 0x70, 0x67, 0x33, 0x65, 0x46, 0x6a, 0x58, 0x38, 0x31, 0x42, 0x31, 0x66, 0x53, 0x61, 0x34, 0x2f, 0x65, 0x73, 0x55, 0x38, 0x6f, 0x2f, 0x65, 0x33, 0x42, 0x79, 0x52, 0x57, 0x78, 0x39, 0x6a, 0x56, 0x6f, 0x52, 0x6b, 0x59, 0x78, 0x34, 0x46, 0x52, 0x6f, 0x61, 0x6e, 0x55, 0xa, 0x64, 0x73, 0x67, 0x4b, 0x4f, 0x63, 0x69, 0x6c, 0x6a, 0x4f, 0x75, 0x68, 0x7a, 0x51, 0x38, 0x45, 0x6f, 0x31, 0x41, 0x78, 0x54, 0x33, 0x68, 0x42, 0x58, 0x5a, 0x74, 0x56, 0x43, 0x71, 0x4f, 0x54, 0x55, 0x79, 0x4e, 0x4e, 0x4d, 0x34, 0x45, 0x64, 0x61, 0x75, 0x59, 0x2b, 0x57, 0x65, 0x35, 0x37, 0x53, 0x31, 0x44, 0x64, 0x45, 0x57, 0x48, 0x46, 0x68, 0x32, 0x73, 0x42, 0x31, 0x57, 0x64, 0x5a, 0xa, 0x71, 0x54, 0x31, 0x32, 0x71, 0x6f, 0x63, 0x41, 0x62, 0x4b, 0x64, 0x4d, 0x7a, 0x79, 0x66, 0x53, 0x43, 0x4b, 0x66, 0x74, 0x77, 0x35, 0x68, 0x46, 0x62, 0x62, 0x73, 0x52, 0x2f, 0x51, 0x70, 0x75, 0x34, 0x58, 0x37, 0x61, 0x6f, 0x74, 0x44, 0x44, 0x72, 0x4e, 0x70, 0x63, 0x2f, 0x4c, 0x34, 0x6a, 0x4b, 0x65, 0x62, 0x68, 0x38, 0x49, 0x67, 0x6c, 0x4b, 0x2b, 0x75, 0x46, 0x4c, 0x50, 0x58, 0x4d, 0xa, 0x37, 0x61, 0x42, 0x58, 0x32, 0x58, 0x65, 0x67, 0x48, 0x78, 0x41, 0x72, 0x70, 0x48, 0x45, 0x33, 0x6b, 0x50, 0x65, 0x32, 0x37, 0x43, 0x6a, 0x59, 0x50, 0x6c, 0x66, 0x68, 0x2b, 0x76, 0x67, 0x30, 0x6c, 0x2b, 0x35, 0x58, 0x30, 0x46, 0x33, 0x37, 0x78, 0x37, 0x50, 0x50, 0x52, 0x69, 0x67, 0x6d, 0x69, 0x77, 0x58, 0x4c, 0x53, 0x46, 0x34, 0x75, 0x44, 0x75, 0x51, 0x31, 0x68, 0x48, 0x72, 0x52, 0xa, 0x79, 0x34, 0x63, 0x34, 0x57, 0x35, 0x52, 0x68, 0x2f, 0x53, 0x77, 0x45, 0x71, 0x6c, 0x43, 0x4e, 0x77, 0x7a, 0x6c, 0x46, 0x75, 0x68, 0x37, 0x4f, 0x41, 0x65, 0x72, 0x41, 0x55, 0x52, 0x46, 0x4b, 0x2f, 0x53, 0x74, 0x6e, 0x50, 0x5a, 0x75, 0x56, 0x72, 0x58, 0x31, 0x6d, 0x71, 0x43, 0x4c, 0x68, 0x38, 0x39, 0x6f, 0x6f, 0x31, 0x5a, 0x61, 0x4d, 0x49, 0x32, 0x4f, 0x56, 0x43, 0x6c, 0x4e, 0x64, 0xa, 0x49, 0x48, 0x59, 0x41, 0x6b, 0x61, 0x4c, 0x77, 0x46, 0x68, 0x4c, 0x64, 0x46, 0x6d, 0x59, 0x41, 0x2b, 0x45, 0x35, 0x4e, 0x46, 0x2f, 0x34, 0x41, 0x4e, 0x59, 0x53, 0x33, 0x6c, 0x49, 0x4d, 0x36, 0x4c, 0x50, 0x52, 0x2f, 0x78, 0x6f, 0x52, 0x51, 0x36, 0x4c, 0x4b, 0x33, 0x45, 0x6d, 0x30, 0x33, 0x2b, 0x30, 0x31, 0x33, 0x76, 0x70, 0x4c, 0x4c, 0x32, 0x65, 0x48, 0x2b, 0xa, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x45, 0x4e, 0x44, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa}, "tls.key":[]uint8{0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x20, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x20, 0x4b, 0x45, 0x59, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa, 0x4d, 0x49, 0x49, 0x4a, 0x51, 0x77, 0x49, 0x42, 0x41, 0x44, 0x41, 0x4e, 0x42, 0x67, 0x6b, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x39, 0x77, 0x30, 0x42, 0x41, 0x51, 0x45, 0x46, 0x41, 0x41, 0x53, 0x43, 0x43, 0x53, 0x30, 0x77, 0x67, 0x67, 0x6b, 0x70, 0x41, 0x67, 0x45, 0x41, 0x41, 0x6f, 0x49, 0x43, 0x41, 0x51, 0x44, 0x46, 0x30, 0x51, 0x4f, 0x4f, 0x71, 0x65, 0x70, 0x64, 0x57, 0x78, 0x68, 0x58, 0xa, 0x56, 0x4b, 0x38, 0x42, 0x30, 0x48, 0x56, 0x78, 0x6c, 0x32, 0x78, 0x32, 0x73, 0x4f, 0x34, 0x49, 0x59, 0x73, 0x73, 0x39, 0x41, 0x70, 0x54, 0x30, 0x69, 0x66, 0x34, 0x57, 0x73, 0x4a, 0x74, 0x74, 0x57, 0x64, 0x68, 0x6b, 0x33, 0x39, 0x50, 0x36, 0x38, 0x42, 0x79, 0x42, 0x48, 0x56, 0x79, 0x37, 0x30, 0x37, 0x72, 0x41, 0x75, 0x75, 0x71, 0x75, 0x44, 0x34, 0x47, 0x2f, 0x4d, 0x51, 0x30, 0x53, 0xa, 0x43, 0x43, 0x44, 0x6c, 0x6c, 0x4c, 0x35, 0x4d, 0x44, 0x31, 0x6e, 0x78, 0x43, 0x42, 0x6c, 0x69, 0x6f, 0x45, 0x74, 0x7a, 0x58, 0x42, 0x52, 0x6b, 0x4a, 0x4d, 0x36, 0x68, 0x50, 0x67, 0x77, 0x39, 0x52, 0x50, 0x62, 0x33, 0x2b, 0x62, 0x6a, 0x32, 0x4e, 0x61, 0x42, 0x34, 0x6c, 0x4b, 0x4b, 0x37, 0x72, 0x48, 0x39, 0x68, 0x46, 0x36, 0x6a, 0x30, 0x74, 0x6d, 0x58, 0x57, 0x35, 0x49, 0x32, 0x2f, 0xa, 0x74, 0x2f, 0x6a, 0x77, 0x47, 0x4b, 0x62, 0x69, 0x46, 0x43, 0x2f, 0x30, 0x6a, 0x37, 0x2f, 0x7a, 0x6f, 0x54, 0x59, 0x55, 0x4d, 0x57, 0x32, 0x6b, 0x71, 0x45, 0x76, 0x32, 0x77, 0x34, 0x58, 0x6f, 0x6b, 0x64, 0x73, 0x54, 0x78, 0x44, 0x57, 0x51, 0x57, 0x58, 0x36, 0x64, 0x7a, 0x46, 0x75, 0x56, 0x62, 0x62, 0x42, 0x74, 0x33, 0x78, 0x76, 0x57, 0x42, 0x37, 0x6c, 0x61, 0x66, 0x55, 0x70, 0x30, 0xa, 0x7a, 0x37, 0x61, 0x62, 0x35, 0x54, 0x6d, 0x42, 0x68, 0x37, 0x48, 0x49, 0x5a, 0x51, 0x78, 0x74, 0x74, 0x4b, 0x36, 0x75, 0x77, 0x41, 0x6a, 0x37, 0x36, 0x72, 0x49, 0x79, 0x75, 0x6f, 0x49, 0x32, 0x42, 0x4c, 0x66, 0x63, 0x77, 0x6c, 0x41, 0x74, 0x79, 0x35, 0x2b, 0x38, 0x70, 0x42, 0x6c, 0x4a, 0x32, 0x32, 0x66, 0x53, 0x70, 0x70, 0x53, 0x57, 0x62, 0x72, 0x38, 0x66, 0x46, 0x4d, 0x30, 0x5a, 0xa, 0x50, 0x48, 0x45, 0x6b, 0x42, 0x45, 0x6d, 0x43, 0x6b, 0x49, 0x38, 0x49, 0x56, 0x79, 0x4c, 0x4e, 0x54, 0x58, 0x50, 0x6e, 0x58, 0x5a, 0x66, 0x53, 0x38, 0x77, 0x78, 0x43, 0x46, 0x6c, 0x4e, 0x47, 0x77, 0x51, 0x46, 0x49, 0x6f, 0x36, 0x44, 0x34, 0x2f, 0x38, 0x47, 0x78, 0x42, 0x62, 0x58, 0x41, 0x6a, 0x6b, 0x33, 0x36, 0x4b, 0x35, 0x64, 0x51, 0x6a, 0x69, 0x47, 0x6e, 0x6b, 0x57, 0x65, 0x46, 0xa, 0x68, 0x36, 0x4d, 0x6f, 0x4b, 0x67, 0x68, 0x7a, 0x45, 0x6a, 0x69, 0x58, 0x77, 0x61, 0x31, 0x52, 0x54, 0x6e, 0x79, 0x62, 0x39, 0x30, 0x35, 0x6b, 0x4e, 0x6a, 0x6b, 0x56, 0x4c, 0x45, 0x43, 0x75, 0x57, 0x68, 0x37, 0x42, 0x70, 0x66, 0x56, 0x39, 0x4c, 0x4b, 0x57, 0x55, 0x51, 0x44, 0x38, 0x35, 0x32, 0x35, 0x38, 0x4c, 0x58, 0x38, 0x6c, 0x4a, 0x64, 0x46, 0x6d, 0x75, 0x4c, 0x67, 0x57, 0x6f, 0xa, 0x74, 0x73, 0x44, 0x36, 0x4a, 0x7a, 0x48, 0x69, 0x51, 0x4c, 0x63, 0x4f, 0x63, 0x73, 0x73, 0x38, 0x70, 0x38, 0x49, 0x53, 0x61, 0x44, 0x6d, 0x32, 0x31, 0x64, 0x62, 0x4e, 0x59, 0x42, 0x45, 0x6d, 0x6b, 0x54, 0x42, 0x68, 0x2f, 0x45, 0x2f, 0x6b, 0x59, 0x63, 0x67, 0x79, 0x6d, 0x39, 0x63, 0x65, 0x68, 0x6f, 0x71, 0x6f, 0x58, 0x46, 0x35, 0x6e, 0x59, 0x39, 0x5a, 0x6e, 0x33, 0x64, 0x50, 0x62, 0xa, 0x70, 0x4f, 0x2b, 0x36, 0x64, 0x39, 0x4d, 0x4e, 0x6f, 0x55, 0x50, 0x38, 0x52, 0x4d, 0x61, 0x72, 0x46, 0x64, 0x4d, 0x79, 0x67, 0x69, 0x34, 0x6c, 0x76, 0x50, 0x38, 0x6c, 0x34, 0x37, 0x75, 0x4e, 0x33, 0x73, 0x4b, 0x74, 0x4c, 0x31, 0x78, 0x58, 0x55, 0x59, 0x42, 0x53, 0x63, 0x6d, 0x68, 0x37, 0x6a, 0x30, 0x46, 0x76, 0x61, 0x38, 0x58, 0x53, 0x43, 0x76, 0x45, 0x38, 0x79, 0x43, 0x68, 0x75, 0xa, 0x62, 0x72, 0x52, 0x2b, 0x47, 0x55, 0x73, 0x2b, 0x67, 0x48, 0x47, 0x34, 0x61, 0x46, 0x4b, 0x62, 0x4e, 0x61, 0x5a, 0x41, 0x77, 0x33, 0x75, 0x47, 0x54, 0x77, 0x5a, 0x4d, 0x47, 0x51, 0x48, 0x52, 0x2b, 0x6e, 0x4b, 0x43, 0x39, 0x65, 0x6f, 0x4f, 0x47, 0x63, 0x34, 0x49, 0x76, 0x57, 0x35, 0x5a, 0x72, 0x49, 0x59, 0x52, 0x7a, 0x33, 0x6b, 0x5a, 0x74, 0x4f, 0x46, 0x49, 0x58, 0x47, 0x52, 0x64, 0xa, 0x6d, 0x78, 0x2b, 0x38, 0x45, 0x45, 0x6a, 0x66, 0x64, 0x7a, 0x34, 0x59, 0x37, 0x4d, 0x70, 0x5a, 0x7a, 0x49, 0x6c, 0x7a, 0x6c, 0x59, 0x49, 0x51, 0x37, 0x2b, 0x39, 0x46, 0x4c, 0x6a, 0x34, 0x33, 0x64, 0x4d, 0x33, 0x65, 0x5a, 0x63, 0x33, 0x79, 0x66, 0x6a, 0x32, 0x35, 0x57, 0x2b, 0x6a, 0x51, 0x6b, 0x4c, 0x52, 0x4d, 0x52, 0x64, 0x61, 0x6c, 0x76, 0x35, 0x76, 0x38, 0x5a, 0x37, 0x76, 0x52, 0xa, 0x33, 0x44, 0x6e, 0x68, 0x74, 0x59, 0x47, 0x33, 0x34, 0x46, 0x65, 0x76, 0x59, 0x46, 0x4f, 0x76, 0x55, 0x7a, 0x58, 0x38, 0x76, 0x4e, 0x61, 0x66, 0x42, 0x4e, 0x73, 0x4a, 0x4b, 0x51, 0x49, 0x44, 0x41, 0x51, 0x41, 0x42, 0x41, 0x6f, 0x49, 0x43, 0x41, 0x46, 0x78, 0x62, 0x56, 0x37, 0x50, 0x56, 0x39, 0x51, 0x77, 0x64, 0x4b, 0x65, 0x49, 0x73, 0x4d, 0x59, 0x46, 0x42, 0x57, 0x48, 0x50, 0x75, 0xa, 0x5a, 0x4c, 0x2b, 0x4e, 0x6e, 0x37, 0x54, 0x65, 0x6d, 0x31, 0x45, 0x69, 0x30, 0x58, 0x54, 0x53, 0x73, 0x49, 0x54, 0x62, 0x63, 0x39, 0x57, 0x38, 0x4b, 0x75, 0x48, 0x39, 0x39, 0x72, 0x53, 0x6b, 0x51, 0x6b, 0x71, 0x74, 0x38, 0x4d, 0x76, 0x6f, 0x38, 0x4c, 0x70, 0x6e, 0x43, 0x6f, 0x61, 0x31, 0x79, 0x72, 0x66, 0x2f, 0x4b, 0x4d, 0x45, 0x51, 0x64, 0x6e, 0x74, 0x35, 0x31, 0x4e, 0x63, 0x69, 0xa, 0x47, 0x37, 0x59, 0x44, 0x4f, 0x41, 0x62, 0x71, 0x48, 0x42, 0x41, 0x43, 0x48, 0x36, 0x73, 0x5a, 0x33, 0x44, 0x64, 0x41, 0x42, 0x75, 0x72, 0x63, 0x4e, 0x67, 0x70, 0x55, 0x31, 0x31, 0x78, 0x73, 0x63, 0x54, 0x32, 0x61, 0x39, 0x39, 0x64, 0x7a, 0x6c, 0x41, 0x30, 0x36, 0x78, 0x4c, 0x46, 0x73, 0x4c, 0x32, 0x51, 0x44, 0x56, 0x59, 0x4c, 0x37, 0x58, 0x41, 0x69, 0x4e, 0x47, 0x65, 0x31, 0x58, 0xa, 0x79, 0x34, 0x50, 0x39, 0x55, 0x58, 0x74, 0x6e, 0x2b, 0x78, 0x32, 0x32, 0x62, 0x69, 0x43, 0x41, 0x53, 0x75, 0x63, 0x74, 0x4a, 0x6d, 0x6f, 0x4e, 0x48, 0x79, 0x47, 0x39, 0x61, 0x39, 0x79, 0x33, 0x53, 0x2f, 0x78, 0x55, 0x6d, 0x7a, 0x58, 0x4b, 0x2f, 0x71, 0x4a, 0x74, 0x6c, 0x6b, 0x74, 0x35, 0x55, 0x37, 0x72, 0x42, 0x34, 0x47, 0x39, 0x6c, 0x51, 0x7a, 0x62, 0x4a, 0x38, 0x4f, 0x31, 0x65, 0xa, 0x38, 0x30, 0x78, 0x43, 0x6b, 0x57, 0x6a, 0x76, 0x41, 0x4e, 0x65, 0x70, 0x35, 0x51, 0x66, 0x6f, 0x37, 0x63, 0x58, 0x74, 0x65, 0x6a, 0x6e, 0x4b, 0x50, 0x69, 0x57, 0x64, 0x75, 0x31, 0x32, 0x47, 0x51, 0x6c, 0x41, 0x4b, 0x74, 0x5a, 0x76, 0x63, 0x43, 0x6a, 0x38, 0x35, 0x63, 0x77, 0x70, 0x42, 0x4c, 0x6f, 0x35, 0x4f, 0x59, 0x65, 0x75, 0x30, 0x59, 0x6f, 0x61, 0x55, 0x55, 0x64, 0x58, 0x5a, 0xa, 0x74, 0x45, 0x34, 0x4b, 0x6b, 0x4c, 0x38, 0x56, 0x75, 0x46, 0x56, 0x2f, 0x52, 0x78, 0x46, 0x41, 0x56, 0x4b, 0x72, 0x4f, 0x54, 0x5a, 0x63, 0x74, 0x4b, 0x58, 0x4a, 0x47, 0x6f, 0x7a, 0x4e, 0x65, 0x42, 0x59, 0x71, 0x6d, 0x78, 0x64, 0x4c, 0x66, 0x48, 0x64, 0x7a, 0x39, 0x57, 0x53, 0x70, 0x4e, 0x45, 0x62, 0x31, 0x77, 0x6a, 0x38, 0x71, 0x79, 0x4a, 0x79, 0x54, 0x72, 0x61, 0x77, 0x47, 0x72, 0xa, 0x6f, 0x48, 0x43, 0x70, 0x51, 0x55, 0x6f, 0x6f, 0x43, 0x6a, 0x43, 0x7a, 0x41, 0x46, 0x6c, 0x4c, 0x4d, 0x69, 0x7a, 0x6f, 0x54, 0x43, 0x7a, 0x2f, 0x51, 0x51, 0x37, 0x4e, 0x67, 0x44, 0x66, 0x33, 0x35, 0x5a, 0x76, 0x70, 0x51, 0x4a, 0x51, 0x6c, 0x50, 0x54, 0x70, 0x63, 0x31, 0x32, 0x42, 0x6c, 0x68, 0x7a, 0x30, 0x65, 0x76, 0x6c, 0x61, 0x38, 0x48, 0x48, 0x61, 0x6b, 0x6b, 0x73, 0x4c, 0x73, 0xa, 0x53, 0x38, 0x63, 0x51, 0x44, 0x6e, 0x4b, 0x64, 0x54, 0x54, 0x50, 0x73, 0x52, 0x72, 0x66, 0x4a, 0x53, 0x73, 0x4a, 0x72, 0x65, 0x7a, 0x38, 0x39, 0x6a, 0x37, 0x58, 0x77, 0x63, 0x55, 0x4a, 0x34, 0x50, 0x57, 0x6c, 0x77, 0x55, 0x54, 0x6a, 0x43, 0x4d, 0x30, 0x52, 0x52, 0x34, 0x42, 0x63, 0x39, 0x49, 0x79, 0x43, 0x68, 0x49, 0x70, 0x73, 0x46, 0x72, 0x64, 0x4b, 0x45, 0x56, 0x50, 0x7a, 0x53, 0xa, 0x33, 0x55, 0x4f, 0x30, 0x73, 0x35, 0x64, 0x50, 0x4c, 0x4a, 0x4c, 0x55, 0x44, 0x43, 0x5a, 0x47, 0x2b, 0x39, 0x36, 0x30, 0x4c, 0x69, 0x4d, 0x38, 0x70, 0x6f, 0x76, 0x41, 0x6b, 0x54, 0x70, 0x46, 0x6c, 0x71, 0x66, 0x6d, 0x32, 0x5a, 0x71, 0x56, 0x48, 0x4d, 0x56, 0x67, 0x6b, 0x33, 0x6a, 0x7a, 0x6b, 0x2f, 0x4b, 0x36, 0x68, 0x32, 0x5a, 0x71, 0x34, 0x36, 0x50, 0x73, 0x56, 0x52, 0x37, 0x34, 0xa, 0x4f, 0x41, 0x38, 0x43, 0x51, 0x55, 0x68, 0x6d, 0x34, 0x77, 0x6d, 0x42, 0x37, 0x38, 0x6f, 0x43, 0x5a, 0x58, 0x76, 0x39, 0x4d, 0x79, 0x54, 0x69, 0x54, 0x50, 0x54, 0x57, 0x49, 0x41, 0x35, 0x75, 0x45, 0x6c, 0x33, 0x4e, 0x48, 0x35, 0x7a, 0x33, 0x66, 0x39, 0x32, 0x73, 0x46, 0x45, 0x67, 0x73, 0x5a, 0x2b, 0x4c, 0x55, 0x58, 0x67, 0x61, 0x32, 0x74, 0x4f, 0x55, 0x36, 0x74, 0x68, 0x66, 0x34, 0xa, 0x66, 0x37, 0x47, 0x34, 0x47, 0x31, 0x55, 0x6c, 0x5a, 0x79, 0x6a, 0x4d, 0x49, 0x6e, 0x6e, 0x79, 0x66, 0x78, 0x76, 0x6d, 0x41, 0x63, 0x75, 0x75, 0x50, 0x68, 0x4e, 0x69, 0x66, 0x68, 0x56, 0x57, 0x47, 0x71, 0x77, 0x58, 0x6e, 0x70, 0x72, 0x54, 0x35, 0x56, 0x76, 0x66, 0x34, 0x50, 0x4c, 0x51, 0x6f, 0x74, 0x49, 0x5a, 0x73, 0x5a, 0x59, 0x6a, 0x65, 0x43, 0x65, 0x73, 0x5a, 0x50, 0x64, 0x6b, 0xa, 0x56, 0x50, 0x6d, 0x45, 0x62, 0x73, 0x48, 0x4e, 0x36, 0x4b, 0x79, 0x30, 0x70, 0x58, 0x35, 0x74, 0x7a, 0x70, 0x64, 0x68, 0x41, 0x6f, 0x49, 0x42, 0x41, 0x51, 0x44, 0x33, 0x54, 0x67, 0x79, 0x61, 0x6c, 0x76, 0x76, 0x32, 0x58, 0x50, 0x58, 0x58, 0x75, 0x32, 0x4b, 0x72, 0x63, 0x48, 0x48, 0x33, 0x43, 0x43, 0x6e, 0x41, 0x2f, 0x78, 0x74, 0x4e, 0x57, 0x52, 0x4c, 0x4f, 0x49, 0x6d, 0x70, 0x4b, 0xa, 0x79, 0x36, 0x67, 0x67, 0x4b, 0x35, 0x72, 0x72, 0x43, 0x46, 0x7a, 0x69, 0x69, 0x73, 0x55, 0x67, 0x42, 0x33, 0x79, 0x6d, 0x62, 0x59, 0x4a, 0x7a, 0x75, 0x52, 0x6f, 0x63, 0x62, 0x6e, 0x52, 0x61, 0x2f, 0x2f, 0x53, 0x39, 0x76, 0x37, 0x32, 0x64, 0x59, 0x34, 0x4f, 0x34, 0x65, 0x4d, 0x52, 0x4f, 0x54, 0x4a, 0x68, 0x39, 0x2b, 0x56, 0x59, 0x4f, 0x4e, 0x5a, 0x72, 0x56, 0x6a, 0x2f, 0x4e, 0x56, 0xa, 0x77, 0x49, 0x62, 0x4c, 0x49, 0x6c, 0x41, 0x37, 0x49, 0x75, 0x77, 0x45, 0x70, 0x61, 0x2f, 0x79, 0x58, 0x75, 0x5a, 0x6f, 0x39, 0x32, 0x44, 0x46, 0x58, 0x72, 0x79, 0x6b, 0x2f, 0x37, 0x6f, 0x41, 0x33, 0x56, 0x41, 0x61, 0x4b, 0x58, 0x4c, 0x49, 0x52, 0x35, 0x6c, 0x31, 0x6c, 0x75, 0x2f, 0x38, 0x61, 0x71, 0x43, 0x75, 0x61, 0x67, 0x30, 0x77, 0x76, 0x70, 0x4e, 0x5a, 0x7a, 0x38, 0x33, 0x6d, 0xa, 0x59, 0x62, 0x61, 0x51, 0x6e, 0x6b, 0x78, 0x48, 0x33, 0x76, 0x4c, 0x48, 0x77, 0x43, 0x35, 0x76, 0x73, 0x33, 0x32, 0x38, 0x6a, 0x6e, 0x30, 0x4f, 0x78, 0x30, 0x42, 0x48, 0x44, 0x37, 0x2b, 0x36, 0x7a, 0x46, 0x4d, 0x5a, 0x42, 0x71, 0x33, 0x6e, 0x68, 0x49, 0x48, 0x38, 0x32, 0x53, 0x70, 0x71, 0x2f, 0x53, 0x30, 0x31, 0x72, 0x31, 0x63, 0x68, 0x35, 0x64, 0x56, 0x4e, 0x45, 0x33, 0x39, 0x6d, 0xa, 0x62, 0x4d, 0x39, 0x79, 0x70, 0x62, 0x76, 0x43, 0x57, 0x33, 0x42, 0x77, 0x66, 0x33, 0x75, 0x50, 0x50, 0x70, 0x69, 0x51, 0x6f, 0x73, 0x63, 0x6d, 0x58, 0x58, 0x53, 0x37, 0x38, 0x4a, 0x59, 0x31, 0x50, 0x59, 0x52, 0x35, 0x73, 0x61, 0x53, 0x48, 0x62, 0x76, 0x48, 0x4e, 0x33, 0x32, 0x57, 0x42, 0x6e, 0x53, 0x41, 0x30, 0x4c, 0x35, 0x58, 0x78, 0x4b, 0x39, 0x6e, 0x5a, 0x46, 0x4f, 0x31, 0x72, 0xa, 0x58, 0x74, 0x6b, 0x31, 0x38, 0x67, 0x58, 0x75, 0x58, 0x4c, 0x30, 0x39, 0x41, 0x70, 0x7a, 0x6d, 0x43, 0x76, 0x2b, 0x72, 0x4c, 0x46, 0x53, 0x42, 0x54, 0x39, 0x53, 0x6b, 0x7a, 0x47, 0x37, 0x6a, 0x39, 0x4b, 0x78, 0x55, 0x38, 0x6f, 0x36, 0x55, 0x51, 0x41, 0x65, 0x44, 0x52, 0x71, 0x39, 0x74, 0x41, 0x6f, 0x49, 0x42, 0x41, 0x51, 0x44, 0x4d, 0x78, 0x59, 0x63, 0x4a, 0x39, 0x49, 0x33, 0x62, 0xa, 0x69, 0x75, 0x73, 0x30, 0x56, 0x4d, 0x35, 0x35, 0x2b, 0x4b, 0x31, 0x74, 0x69, 0x51, 0x39, 0x30, 0x54, 0x33, 0x42, 0x70, 0x48, 0x6a, 0x67, 0x41, 0x5a, 0x47, 0x42, 0x6d, 0x73, 0x6e, 0x55, 0x57, 0x4c, 0x75, 0x4d, 0x54, 0x7a, 0x64, 0x6b, 0x7a, 0x70, 0x32, 0x35, 0x33, 0x7a, 0x51, 0x67, 0x45, 0x55, 0x59, 0x44, 0x6c, 0x52, 0x6b, 0x6b, 0x55, 0x43, 0x2b, 0x37, 0x59, 0x2b, 0x32, 0x5a, 0x57, 0xa, 0x52, 0x68, 0x2b, 0x69, 0x74, 0x4a, 0x44, 0x4a, 0x59, 0x52, 0x56, 0x51, 0x35, 0x35, 0x61, 0x4e, 0x54, 0x77, 0x4d, 0x36, 0x51, 0x77, 0x5a, 0x61, 0x43, 0x62, 0x2b, 0x65, 0x65, 0x39, 0x70, 0x41, 0x52, 0x4c, 0x4c, 0x48, 0x77, 0x63, 0x58, 0x4b, 0x58, 0x4f, 0x56, 0x55, 0x7a, 0x46, 0x71, 0x4e, 0x43, 0x50, 0x62, 0x34, 0x61, 0x33, 0x41, 0x70, 0x45, 0x38, 0x4c, 0x78, 0x65, 0x53, 0x30, 0x74, 0xa, 0x6d, 0x48, 0x38, 0x2f, 0x6a, 0x6e, 0x71, 0x56, 0x49, 0x5a, 0x55, 0x71, 0x4d, 0x50, 0x7a, 0x6c, 0x43, 0x45, 0x43, 0x66, 0x6a, 0x42, 0x61, 0x62, 0x42, 0x38, 0x31, 0x4f, 0x68, 0x51, 0x61, 0x51, 0x31, 0x77, 0x58, 0x48, 0x63, 0x62, 0x6f, 0x39, 0x63, 0x64, 0x50, 0x50, 0x49, 0x49, 0x4f, 0x43, 0x68, 0x6f, 0x66, 0x58, 0x34, 0x36, 0x44, 0x78, 0x53, 0x61, 0x35, 0x75, 0x4b, 0x36, 0x5a, 0x4e, 0xa, 0x46, 0x6b, 0x37, 0x2f, 0x6a, 0x2b, 0x68, 0x6f, 0x6d, 0x6c, 0x68, 0x73, 0x76, 0x39, 0x36, 0x72, 0x65, 0x74, 0x2f, 0x6d, 0x70, 0x6c, 0x50, 0x6a, 0x75, 0x75, 0x4f, 0x52, 0x73, 0x61, 0x66, 0x41, 0x4c, 0x36, 0x51, 0x74, 0x75, 0x71, 0x59, 0x79, 0x2f, 0x75, 0x34, 0x75, 0x69, 0x7a, 0x72, 0x30, 0x41, 0x49, 0x65, 0x64, 0x78, 0x64, 0x68, 0x70, 0x6a, 0x43, 0x79, 0x67, 0x63, 0x78, 0x71, 0x67, 0xa, 0x51, 0x37, 0x78, 0x61, 0x62, 0x78, 0x70, 0x57, 0x32, 0x4a, 0x34, 0x66, 0x45, 0x64, 0x4d, 0x51, 0x69, 0x38, 0x76, 0x4b, 0x41, 0x70, 0x42, 0x72, 0x56, 0x47, 0x4b, 0x41, 0x64, 0x47, 0x53, 0x38, 0x47, 0x41, 0x69, 0x76, 0x77, 0x4e, 0x57, 0x4a, 0x7a, 0x43, 0x4b, 0x63, 0x53, 0x45, 0x48, 0x58, 0x78, 0x33, 0x39, 0x47, 0x2f, 0x31, 0x39, 0x44, 0x72, 0x46, 0x57, 0x6b, 0x4e, 0x64, 0x7a, 0x72, 0xa, 0x64, 0x39, 0x56, 0x53, 0x36, 0x39, 0x38, 0x63, 0x38, 0x42, 0x38, 0x74, 0x41, 0x6f, 0x49, 0x42, 0x41, 0x42, 0x52, 0x4d, 0x4f, 0x4b, 0x61, 0x62, 0x69, 0x39, 0x53, 0x64, 0x72, 0x71, 0x50, 0x6c, 0x51, 0x6d, 0x54, 0x31, 0x31, 0x72, 0x54, 0x43, 0x32, 0x38, 0x4a, 0x32, 0x62, 0x63, 0x51, 0x38, 0x63, 0x6c, 0x6d, 0x75, 0x34, 0x33, 0x42, 0x2b, 0x4a, 0x4b, 0x39, 0x33, 0x52, 0x4d, 0x44, 0x54, 0xa, 0x72, 0x2b, 0x50, 0x38, 0x4a, 0x63, 0x2f, 0x4b, 0x4c, 0x59, 0x58, 0x76, 0x61, 0x51, 0x79, 0x63, 0x66, 0x62, 0x4d, 0x6c, 0x73, 0x62, 0x45, 0x69, 0x58, 0x76, 0x45, 0x51, 0x41, 0x72, 0x30, 0x66, 0x52, 0x4e, 0x6c, 0x6f, 0x4f, 0x42, 0x79, 0x42, 0x46, 0x75, 0x63, 0x49, 0x42, 0x76, 0x4d, 0x6c, 0x6e, 0x53, 0x36, 0x34, 0x49, 0x4f, 0x33, 0x42, 0x33, 0x6f, 0x35, 0x66, 0x6f, 0x35, 0x77, 0x6d, 0xa, 0x38, 0x70, 0x34, 0x7a, 0x42, 0x79, 0x7a, 0x71, 0x63, 0x78, 0x6a, 0x63, 0x62, 0x50, 0x6e, 0x6d, 0x47, 0x36, 0x2b, 0x6a, 0x4f, 0x5a, 0x34, 0x47, 0x6a, 0x43, 0x4f, 0x4a, 0x6b, 0x56, 0x30, 0x30, 0x32, 0x7a, 0x69, 0x57, 0x69, 0x64, 0x33, 0x36, 0x31, 0x6e, 0x4e, 0x61, 0x53, 0x76, 0x6a, 0x63, 0x4f, 0x33, 0x58, 0x63, 0x6f, 0x33, 0x61, 0x73, 0x51, 0x48, 0x4c, 0x41, 0x4f, 0x31, 0x79, 0x4f, 0xa, 0x78, 0x50, 0x68, 0x32, 0x49, 0x70, 0x6d, 0x53, 0x62, 0x74, 0x69, 0x43, 0x44, 0x57, 0x75, 0x67, 0x47, 0x50, 0x74, 0x38, 0x4a, 0x47, 0x31, 0x74, 0x68, 0x63, 0x69, 0x42, 0x44, 0x74, 0x62, 0x34, 0x76, 0x6a, 0x36, 0x46, 0x69, 0x49, 0x43, 0x39, 0x68, 0x4f, 0x39, 0x71, 0x45, 0x38, 0x6d, 0x35, 0x64, 0x6e, 0x64, 0x63, 0x43, 0x56, 0x48, 0x62, 0x7a, 0x6d, 0x38, 0x48, 0x67, 0x56, 0x43, 0x6a, 0xa, 0x64, 0x71, 0x67, 0x56, 0x48, 0x6f, 0x77, 0x55, 0x52, 0x43, 0x74, 0x69, 0x34, 0x4e, 0x75, 0x61, 0x51, 0x68, 0x47, 0x47, 0x33, 0x70, 0x31, 0x43, 0x44, 0x6c, 0x52, 0x36, 0x71, 0x78, 0x6c, 0x65, 0x6c, 0x73, 0x51, 0x68, 0x2b, 0x4d, 0x2f, 0x5a, 0x6d, 0x4b, 0x49, 0x50, 0x34, 0x63, 0x75, 0x6f, 0x6f, 0x4c, 0x6d, 0x37, 0x69, 0x50, 0x30, 0x4f, 0x44, 0x4e, 0x2f, 0x72, 0x6e, 0x47, 0x63, 0x43, 0xa, 0x2f, 0x35, 0x6b, 0x35, 0x56, 0x4b, 0x31, 0x67, 0x36, 0x37, 0x6b, 0x64, 0x36, 0x31, 0x57, 0x74, 0x75, 0x72, 0x4e, 0x49, 0x41, 0x44, 0x58, 0x2f, 0x69, 0x41, 0x46, 0x30, 0x34, 0x78, 0x54, 0x78, 0x36, 0x47, 0x76, 0x79, 0x36, 0x6b, 0x55, 0x43, 0x67, 0x67, 0x45, 0x42, 0x41, 0x4b, 0x62, 0x4d, 0x6e, 0x39, 0x73, 0x30, 0x49, 0x66, 0x6d, 0x62, 0x68, 0x30, 0x76, 0x78, 0x61, 0x4e, 0x39, 0x68, 0xa, 0x2b, 0x61, 0x4d, 0x6e, 0x36, 0x6a, 0x62, 0x4d, 0x48, 0x72, 0x30, 0x42, 0x71, 0x49, 0x78, 0x70, 0x4e, 0x7a, 0x31, 0x77, 0x55, 0x48, 0x2f, 0x70, 0x59, 0x58, 0x39, 0x59, 0x52, 0x6e, 0x30, 0x55, 0x2f, 0x5a, 0x38, 0x49, 0x6e, 0x47, 0x63, 0x6f, 0x48, 0x4e, 0x36, 0x6d, 0x43, 0x68, 0x45, 0x53, 0x52, 0x31, 0x54, 0x6f, 0x4d, 0x38, 0x78, 0x44, 0x41, 0x72, 0x48, 0x2b, 0x63, 0x35, 0x49, 0x57, 0xa, 0x53, 0x73, 0x37, 0x45, 0x56, 0x70, 0x5a, 0x30, 0x72, 0x69, 0x52, 0x66, 0x52, 0x47, 0x56, 0x44, 0x57, 0x35, 0x73, 0x31, 0x4e, 0x2b, 0x72, 0x79, 0x43, 0x73, 0x38, 0x38, 0x77, 0x47, 0x69, 0x2b, 0x6b, 0x76, 0x41, 0x6f, 0x4a, 0x66, 0x71, 0x4d, 0x4f, 0x75, 0x44, 0x51, 0x59, 0x32, 0x53, 0x53, 0x66, 0x46, 0x46, 0x47, 0x61, 0x38, 0x36, 0x67, 0x55, 0x63, 0x62, 0x72, 0x77, 0x46, 0x36, 0x4b, 0xa, 0x4a, 0x48, 0x39, 0x68, 0x75, 0x42, 0x36, 0x34, 0x51, 0x69, 0x75, 0x30, 0x61, 0x52, 0x57, 0x50, 0x6e, 0x57, 0x56, 0x41, 0x5a, 0x73, 0x44, 0x45, 0x35, 0x69, 0x67, 0x34, 0x4d, 0x34, 0x53, 0x70, 0x6d, 0x2b, 0x63, 0x30, 0x6a, 0x4f, 0x74, 0x64, 0x75, 0x6e, 0x6e, 0x5a, 0x4b, 0x64, 0x68, 0x69, 0x4e, 0x48, 0x76, 0x35, 0x67, 0x6c, 0x56, 0x34, 0x76, 0x70, 0x44, 0x65, 0x49, 0x47, 0x70, 0x55, 0xa, 0x6a, 0x34, 0x4c, 0x47, 0x4b, 0x42, 0x4e, 0x32, 0x32, 0x37, 0x74, 0x39, 0x38, 0x51, 0x65, 0x6e, 0x7a, 0x49, 0x64, 0x35, 0x4e, 0x7a, 0x51, 0x4e, 0x6d, 0x71, 0x62, 0x46, 0x53, 0x32, 0x78, 0x75, 0x7a, 0x49, 0x57, 0x4e, 0x56, 0x46, 0x41, 0x39, 0x76, 0x6a, 0x70, 0x2b, 0x56, 0x6e, 0x4a, 0x6a, 0x68, 0x46, 0x61, 0x4f, 0x62, 0x44, 0x6e, 0x76, 0x38, 0x78, 0x57, 0x58, 0x4f, 0x74, 0x56, 0x54, 0xa, 0x54, 0x6a, 0x6e, 0x77, 0x77, 0x77, 0x54, 0x50, 0x57, 0x77, 0x6b, 0x4b, 0x58, 0x61, 0x6d, 0x50, 0x36, 0x30, 0x7a, 0x48, 0x67, 0x75, 0x62, 0x55, 0x6a, 0x50, 0x37, 0x64, 0x44, 0x52, 0x52, 0x5a, 0x2f, 0x44, 0x64, 0x68, 0x68, 0x49, 0x44, 0x49, 0x4f, 0x4a, 0x30, 0x55, 0x6c, 0x2f, 0x7a, 0x2f, 0x2f, 0x43, 0x4c, 0x75, 0x33, 0x53, 0x33, 0x52, 0x52, 0x79, 0x74, 0x73, 0x68, 0x79, 0x6d, 0x44, 0xa, 0x54, 0x32, 0x45, 0x43, 0x67, 0x67, 0x45, 0x42, 0x41, 0x4c, 0x65, 0x48, 0x65, 0x38, 0x41, 0x2f, 0x76, 0x6e, 0x72, 0x7a, 0x5a, 0x6c, 0x42, 0x57, 0x50, 0x54, 0x51, 0x2b, 0x6a, 0x65, 0x78, 0x76, 0x35, 0x52, 0x4d, 0x48, 0x44, 0x32, 0x66, 0x4d, 0x30, 0x4f, 0x6b, 0x48, 0x48, 0x30, 0x58, 0x63, 0x62, 0x46, 0x4f, 0x36, 0x47, 0x6d, 0x79, 0x78, 0x6e, 0x46, 0x54, 0x34, 0x38, 0x72, 0x67, 0x68, 0xa, 0x65, 0x78, 0x42, 0x70, 0x78, 0x65, 0x57, 0x59, 0x48, 0x70, 0x4c, 0x52, 0x78, 0x6f, 0x36, 0x57, 0x7a, 0x48, 0x48, 0x59, 0x42, 0x57, 0x47, 0x2b, 0x48, 0x76, 0x68, 0x4c, 0x49, 0x6d, 0x6c, 0x31, 0x32, 0x38, 0x34, 0x6a, 0x5a, 0x51, 0x6d, 0x64, 0x61, 0x65, 0x76, 0x33, 0x77, 0x41, 0x48, 0x4c, 0x72, 0x57, 0x6e, 0x48, 0x71, 0x57, 0x4b, 0x54, 0x74, 0x77, 0x44, 0x5a, 0x63, 0x79, 0x30, 0x52, 0xa, 0x39, 0x6c, 0x69, 0x35, 0x44, 0x44, 0x52, 0x74, 0x54, 0x46, 0x42, 0x2b, 0x35, 0x57, 0x44, 0x30, 0x79, 0x59, 0x78, 0x2f, 0x4e, 0x61, 0x52, 0x6f, 0x75, 0x65, 0x6b, 0x58, 0x57, 0x48, 0x5a, 0x51, 0x68, 0x68, 0x46, 0x42, 0x68, 0x2f, 0x77, 0x79, 0x4f, 0x6d, 0x72, 0x74, 0x70, 0x66, 0x58, 0x52, 0x78, 0x30, 0x52, 0x4f, 0x59, 0x47, 0x4b, 0x45, 0x54, 0x44, 0x34, 0x2f, 0x6b, 0x63, 0x72, 0x4b, 0xa, 0x4d, 0x68, 0x51, 0x58, 0x6c, 0x44, 0x55, 0x76, 0x38, 0x33, 0x66, 0x50, 0x6a, 0x4e, 0x38, 0x77, 0x77, 0x36, 0x69, 0x79, 0x64, 0x51, 0x75, 0x75, 0x53, 0x62, 0x6d, 0x57, 0x59, 0x62, 0x50, 0x45, 0x36, 0x6a, 0x5a, 0x34, 0x42, 0x50, 0x59, 0x4c, 0x34, 0x47, 0x6f, 0x4b, 0x6d, 0x78, 0x38, 0x68, 0x61, 0x2f, 0x74, 0x44, 0x71, 0x5a, 0x48, 0x53, 0x59, 0x30, 0x6e, 0x31, 0x44, 0x78, 0x34, 0x4a, 0xa, 0x78, 0x50, 0x36, 0x71, 0x50, 0x32, 0x59, 0x6a, 0x34, 0x49, 0x68, 0x32, 0x56, 0x65, 0x43, 0x56, 0x54, 0x30, 0x64, 0x6f, 0x66, 0x73, 0x42, 0x39, 0x33, 0x35, 0x51, 0x44, 0x79, 0x6d, 0x2f, 0x50, 0x61, 0x2b, 0x56, 0x31, 0x76, 0x65, 0x70, 0x49, 0x44, 0x56, 0x56, 0x4a, 0x5a, 0x57, 0x71, 0x57, 0x7a, 0x51, 0x42, 0x43, 0x37, 0x58, 0x76, 0x53, 0x71, 0x68, 0x54, 0x4f, 0x6f, 0x58, 0x45, 0x63, 0xa, 0x65, 0x54, 0x79, 0x47, 0x74, 0x41, 0x7a, 0x33, 0x68, 0x49, 0x42, 0x77, 0x6f, 0x72, 0x42, 0x6d, 0x36, 0x2b, 0x4b, 0x46, 0x5a, 0x50, 0x64, 0x74, 0x6f, 0x30, 0x68, 0x6e, 0x36, 0x31, 0x6f, 0x3d, 0xa, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x45, 0x4e, 0x44, 0x20, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x20, 0x4b, 0x45, 0x59, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa}}, StringData:map[string]string(nil), Type:"kubernetes.io/tls"}
2020/08/09 19:26:25 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:25 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_secret.timescale-certificates
2020/08/09 19:26:25 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.timescale-certificates
2020/08/09 19:26:25 [TRACE] [walkRefresh] Exiting eval tree: kubernetes_secret.timescale-certificates
2020/08/09 19:26:25 [TRACE] vertex "kubernetes_secret.timescale-certificates": visit complete
2020/08/09 19:26:25 [TRACE] vertex "kubernetes_secret.timescale-certificates": dynamic subgraph completed successfully
2020/08/09 19:26:25 [TRACE] vertex "kubernetes_secret.timescale-certificates": visit complete
2020/08/09 19:26:25 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:25 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:25 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:25 [TRACE] EvalReadState: reading state for helm_release.nginx-ingress
2020/08/09 19:26:25 [TRACE] UpgradeResourceState: schema version of helm_release.nginx-ingress is still 0; calling provider "registry.terraform.io/-/helm" for any other minor fixups
2020/08/09 19:26:25 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:25 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:25 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:25 [TRACE] GRPCProvider: ReadResource
2020-08-09T19:26:25.879+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:25 [DEBUG] [resourceReleaseExists: nginx-ingress] Start
2020-08-09T19:26:25.930+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:25 [INFO] Received secret: &v1.Secret{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"timescale-credentials", GenerateName:"", Namespace:"timescale", SelfLink:"/api/v1/namespaces/timescale/secrets/timescale-credentials", UID:"9d11bc12-d479-48f7-bc41-52da12c19bfd", ResourceVersion:"2856", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63732054357, loc:(*time.Location)(0x2dde260)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc0003b5700), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0003b5740)}}}, Data:map[string][]uint8{"PATRONI_REPLICATION_PASSWORD":[]uint8{0x42, 0x32, 0x70, 0x66, 0x50, 0x71, 0x26, 0x44, 0x6b, 0x46, 0x5a, 0x34, 0x35, 0x65, 0x40, 0x37, 0x44}, "PATRONI_SUPERUSER_PASSWORD":[]uint8{0x53, 0x6a, 0x56, 0x34, 0x49, 0x57, 0x4e, 0x70, 0x62, 0x6d, 0x30, 0x31, 0x55, 0x55, 0x35, 0x30, 0x5a, 0x55, 0x4a, 0x30}, "PATRONI_admin_PASSWORD":[]uint8{0x25, 0x32, 0x61, 0x4a, 0x70, 0x6b, 0x4b, 0x75, 0x52, 0x4c, 0x6a, 0x46, 0x4a, 0x24, 0x6f, 0x57, 0x59}}, StringData:map[string]string(nil), Type:"Opaque"}
2020/08/09 19:26:25 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:25 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_secret.timescale-credentials
2020/08/09 19:26:25 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.timescale-credentials
2020/08/09 19:26:25 [TRACE] [walkRefresh] Exiting eval tree: kubernetes_secret.timescale-credentials
2020/08/09 19:26:25 [TRACE] vertex "kubernetes_secret.timescale-credentials": visit complete
2020/08/09 19:26:25 [TRACE] vertex "kubernetes_secret.timescale-credentials": dynamic subgraph completed successfully
2020/08/09 19:26:25 [TRACE] vertex "kubernetes_secret.timescale-credentials": visit complete
2020/08/09 19:26:25 [TRACE] module.cluster: eval: *terraform.EvalSequence
2020/08/09 19:26:25 [TRACE] module.cluster: eval: *terraform.EvalOpFilter
2020/08/09 19:26:25 [TRACE] module.cluster: eval: *terraform.EvalWriteOutput
2020/08/09 19:26:25 [TRACE] EvalWriteOutput: Saving value for module.cluster.output.cluster-id in state
2020/08/09 19:26:25 [TRACE] EvalWriteOutput: Saving Create change for module.cluster.output.cluster-id in changeset
2020/08/09 19:26:25 [TRACE] [walkRefresh] Exiting eval tree: module.cluster.output.cluster-id
2020/08/09 19:26:25 [TRACE] vertex "module.cluster.output.cluster-id": visit complete
2020/08/09 19:26:25 [TRACE] module.cluster: eval: *terraform.EvalSequence
2020/08/09 19:26:25 [TRACE] module.cluster: eval: *terraform.EvalGetProvider
2020/08/09 19:26:25 [TRACE] module.cluster: eval: *terraform.EvalReadState
2020/08/09 19:26:25 [TRACE] EvalReadState: reading state for module.cluster.digitalocean_kubernetes_node_pool.ci
2020/08/09 19:26:25 [TRACE] UpgradeResourceState: schema version of module.cluster.digitalocean_kubernetes_node_pool.ci is still 1; calling provider "registry.terraform.io/-/digitalocean" for any other minor fixups
2020/08/09 19:26:25 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:25 [TRACE] module.cluster: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:25 [TRACE] module.cluster: eval: *terraform.EvalRefresh
2020/08/09 19:26:25 [TRACE] GRPCProvider: ReadResource
2020-08-09T19:26:26.191+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:26 [DEBUG] docker-registry getRelease post run
2020-08-09T19:26:26.191+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:26 [DEBUG] docker-registry getRelease done
2020-08-09T19:26:26.191+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:26 [DEBUG] [resourceReleaseExists: docker-registry] Done
2020-08-09T19:26:26.191+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:26 [DEBUG] redis getRelease got lock, started
2020-08-09T19:26:26.191+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:26 [DEBUG] redis getRelease post action created
2020-08-09T19:26:26.191+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:26 [DEBUG] [resourceReleaseRead: docker-registry] Started
2020/08/09 19:26:26 [TRACE] module.cluster: eval: *terraform.EvalWriteState
2020/08/09 19:26:26 [TRACE] EvalWriteState: recording 1 dependencies for module.cluster.digitalocean_kubernetes_node_pool.ci
2020/08/09 19:26:26 [TRACE] EvalWriteState: writing current state object for module.cluster.digitalocean_kubernetes_node_pool.ci
2020/08/09 19:26:26 [TRACE] [walkRefresh] Exiting eval tree: module.cluster.digitalocean_kubernetes_node_pool.ci
2020/08/09 19:26:26 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ci": visit complete
2020/08/09 19:26:26 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ci": dynamic subgraph completed successfully
2020/08/09 19:26:26 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ci": visit complete
2020/08/09 19:26:26 [TRACE] module.cluster: eval: *terraform.EvalSequence
2020/08/09 19:26:26 [TRACE] module.cluster: eval: *terraform.EvalGetProvider
2020/08/09 19:26:26 [TRACE] module.cluster: eval: *terraform.EvalReadState
2020/08/09 19:26:26 [TRACE] EvalReadState: reading state for module.cluster.digitalocean_kubernetes_node_pool.workers
2020/08/09 19:26:26 [TRACE] UpgradeResourceState: schema version of module.cluster.digitalocean_kubernetes_node_pool.workers is still 1; calling provider "registry.terraform.io/-/digitalocean" for any other minor fixups
2020/08/09 19:26:26 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:26 [TRACE] module.cluster: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:26 [TRACE] module.cluster: eval: *terraform.EvalRefresh
2020/08/09 19:26:26 [TRACE] GRPCProvider: ReadResource
2020/08/09 19:26:26 [TRACE] module.cluster: eval: *terraform.EvalWriteState
2020/08/09 19:26:26 [TRACE] EvalWriteState: recording 1 dependencies for module.cluster.digitalocean_kubernetes_node_pool.workers
2020/08/09 19:26:26 [TRACE] EvalWriteState: writing current state object for module.cluster.digitalocean_kubernetes_node_pool.workers
2020/08/09 19:26:26 [TRACE] [walkRefresh] Exiting eval tree: module.cluster.digitalocean_kubernetes_node_pool.workers
2020/08/09 19:26:26 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.workers": visit complete
2020/08/09 19:26:26 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.workers": dynamic subgraph completed successfully
2020/08/09 19:26:26 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.workers": visit complete
2020/08/09 19:26:26 [TRACE] module.cluster: eval: *terraform.EvalSequence
2020/08/09 19:26:26 [TRACE] module.cluster: eval: *terraform.EvalGetProvider
2020/08/09 19:26:26 [TRACE] module.cluster: eval: *terraform.EvalReadState
2020/08/09 19:26:26 [TRACE] EvalReadState: reading state for module.cluster.digitalocean_kubernetes_node_pool.ancillary
2020/08/09 19:26:26 [TRACE] UpgradeResourceState: schema version of module.cluster.digitalocean_kubernetes_node_pool.ancillary is still 1; calling provider "registry.terraform.io/-/digitalocean" for any other minor fixups
2020/08/09 19:26:26 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:26 [TRACE] module.cluster: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:26 [TRACE] module.cluster: eval: *terraform.EvalRefresh
2020/08/09 19:26:26 [TRACE] GRPCProvider: ReadResource
2020-08-09T19:26:27.113+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:27 [DEBUG] redis getRelease post run
2020-08-09T19:26:27.113+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:27 [DEBUG] redis getRelease done
2020-08-09T19:26:27.113+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:27 [DEBUG] [resourceReleaseExists: redis] Done
2020-08-09T19:26:27.113+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:27 [DEBUG] [resourceReleaseRead: redis] Started
2020-08-09T19:26:27.113+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:27 [DEBUG] sentry-k8s-errors getRelease got lock, started
2020-08-09T19:26:27.113+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:27 [DEBUG] sentry-k8s-errors getRelease post action created
2020/08/09 19:26:27 [TRACE] module.cluster: eval: *terraform.EvalWriteState
2020/08/09 19:26:27 [TRACE] EvalWriteState: recording 1 dependencies for module.cluster.digitalocean_kubernetes_node_pool.ancillary
2020/08/09 19:26:27 [TRACE] EvalWriteState: writing current state object for module.cluster.digitalocean_kubernetes_node_pool.ancillary
2020/08/09 19:26:27 [TRACE] [walkRefresh] Exiting eval tree: module.cluster.digitalocean_kubernetes_node_pool.ancillary
2020/08/09 19:26:27 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ancillary": visit complete
2020/08/09 19:26:27 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ancillary": dynamic subgraph completed successfully
2020/08/09 19:26:27 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ancillary": visit complete
2020/08/09 19:26:27 [TRACE] dag/walk: visiting "module.cluster.provider.digitalocean (close)"
2020/08/09 19:26:27 [TRACE] vertex "module.cluster.provider.digitalocean (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/08/09 19:26:27 [TRACE] vertex "module.cluster.provider.digitalocean (close)": evaluating
2020/08/09 19:26:27 [TRACE] [walkRefresh] Entering eval tree: module.cluster.provider.digitalocean (close)
2020/08/09 19:26:27 [TRACE] module.cluster: eval: *terraform.EvalCloseProvider
2020/08/09 19:26:27 [TRACE] GRPCProvider: Close
2020-08-09T19:26:27.213+0300 [DEBUG] plugin: plugin process exited: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-digitalocean_v1.22.0 pid=4110990
2020-08-09T19:26:27.213+0300 [DEBUG] plugin: plugin exited
2020/08/09 19:26:27 [TRACE] [walkRefresh] Exiting eval tree: module.cluster.provider.digitalocean (close)
2020/08/09 19:26:27 [TRACE] vertex "module.cluster.provider.digitalocean (close)": visit complete
2020-08-09T19:26:27.548+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:27 [DEBUG] sentry-k8s-errors getRelease post run
2020-08-09T19:26:27.548+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:27 [DEBUG] sentry-k8s-errors getRelease done
2020-08-09T19:26:27.548+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:27 [DEBUG] [resourceReleaseExists: sentry-k8s-errors] Done
2020-08-09T19:26:27.548+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:27 [DEBUG] [resourceReleaseRead: sentry-k8s-errors] Started
2020-08-09T19:26:27.548+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:27 [DEBUG] sentry getRelease got lock, started
2020-08-09T19:26:27.548+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:27 [DEBUG] sentry getRelease post action created
2020/08/09 19:26:27 [TRACE] dag/walk: vertex "null_resource.rio-custom-domain" is waiting for "null_resource.rio-setup"
2020/08/09 19:26:27 [TRACE] dag/walk: vertex "null_resource.cert-manager-setup" is waiting for "helm_release.cert-manager"
2020/08/09 19:26:27 [TRACE] dag/walk: vertex "provider.null (close)" is waiting for "null_resource.create-timescaledb-setup"
2020/08/09 19:26:27 [TRACE] dag/walk: vertex "kubernetes_secret.cloudflare-dns-api-token" is waiting for "helm_release.cert-manager"
2020/08/09 19:26:27 [TRACE] dag/walk: vertex "null_resource.rio-setup" is waiting for "helm_release.cert-manager"
2020/08/09 19:26:27 [TRACE] dag/walk: vertex "kubernetes_ingress.rio-ingress" is waiting for "helm_release.cert-manager"
2020/08/09 19:26:27 [TRACE] dag/walk: vertex "null_resource.rio-app-domains" is waiting for "null_resource.rio-setup"
2020/08/09 19:26:28 [TRACE] dag/walk: vertex "null_resource.create-timescaledb-setup" is waiting for "helm_release.timescaledb"
2020-08-09T19:26:28.701+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:28 [DEBUG] sentry getRelease post run
2020-08-09T19:26:28.701+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:28 [DEBUG] sentry getRelease done
2020-08-09T19:26:28.701+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:28 [DEBUG] [resourceReleaseExists: sentry] Done
2020-08-09T19:26:28.701+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:28 [DEBUG] [INFO] GetHelmConfiguration start
2020-08-09T19:26:28.701+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:28 [DEBUG] [resourceReleaseRead: sentry] Started
2020-08-09T19:26:28.701+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:28 [INFO] Successfully initialized kubernetes config
2020-08-09T19:26:28.701+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:28 [DEBUG] [INFO] GetHelmConfiguration success
2020-08-09T19:26:28.701+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:28 [DEBUG] metrics-server getRelease wait for lock
2020-08-09T19:26:28.701+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:28 [DEBUG] [INFO] GetHelmConfiguration start
2020-08-09T19:26:28.702+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:28 [INFO] Successfully initialized kubernetes config
2020-08-09T19:26:28.702+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:28 [DEBUG] [INFO] GetHelmConfiguration success
2020-08-09T19:26:28.702+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:28 [DEBUG] cert-manager getRelease wait for lock
2020-08-09T19:26:28.702+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:28 [DEBUG] prometheus-operator getRelease got lock, started
2020-08-09T19:26:28.702+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:28 [DEBUG] prometheus-operator getRelease post action created
2020/08/09 19:26:28 [TRACE] dag/walk: vertex "provider.helm (close)" is waiting for "helm_release.sentry-k8s-erros"
2020/08/09 19:26:29 [TRACE] dag/walk: vertex "provider.kubernetes (close)" is waiting for "kubernetes_ingress.rio-ingress"
2020-08-09T19:26:29.899+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:29 [DEBUG] prometheus-operator getRelease post run
2020-08-09T19:26:29.899+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:29 [DEBUG] prometheus-operator getRelease done
2020-08-09T19:26:29.899+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:29 [DEBUG] [resourceReleaseExists: prometheus-operator] Done
2020-08-09T19:26:29.899+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:29 [DEBUG] timescale getRelease got lock, started
2020-08-09T19:26:29.899+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:29 [DEBUG] [resourceReleaseRead: prometheus-operator] Started
2020-08-09T19:26:29.899+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:29 [DEBUG] timescale getRelease post action created
2020-08-09T19:26:30.374+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:30 [DEBUG] timescale getRelease post run
2020-08-09T19:26:30.374+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:30 [DEBUG] timescale getRelease done
2020-08-09T19:26:30.374+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:30 [DEBUG] [resourceReleaseRead: timescale] Done
2020-08-09T19:26:30.374+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:30 [DEBUG] [INFO] GetHelmConfiguration start
2020-08-09T19:26:30.374+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:30 [INFO] Successfully initialized kubernetes config
2020-08-09T19:26:30.374+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:30 [DEBUG] [INFO] GetHelmConfiguration success
2020-08-09T19:26:30.374+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:30 [DEBUG] nginx-ingress getRelease wait for lock
2020-08-09T19:26:30.374+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:30 [DEBUG] [INFO] GetHelmConfiguration start
2020-08-09T19:26:30.374+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:30 [INFO] Successfully initialized kubernetes config
2020-08-09T19:26:30.374+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:30 [DEBUG] [INFO] GetHelmConfiguration success
2020-08-09T19:26:30.374+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:30 [DEBUG] docker-registry getRelease wait for lock
2020-08-09T19:26:30.374+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:30 [DEBUG] [INFO] GetHelmConfiguration start
2020-08-09T19:26:30.374+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:30 [INFO] Successfully initialized kubernetes config
2020-08-09T19:26:30.374+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:30 [DEBUG] [INFO] GetHelmConfiguration success
2020-08-09T19:26:30.374+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:30 [DEBUG] redis getRelease wait for lock
2020-08-09T19:26:30.374+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:30 [DEBUG] [INFO] GetHelmConfiguration start
2020-08-09T19:26:30.375+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:30 [INFO] Successfully initialized kubernetes config
2020-08-09T19:26:30.375+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:30 [DEBUG] [INFO] GetHelmConfiguration success
2020-08-09T19:26:30.375+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:30 [DEBUG] sentry-k8s-errors getRelease wait for lock
2020-08-09T19:26:30.375+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:30 [DEBUG] [INFO] GetHelmConfiguration start
2020/08/09 19:26:30 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:30 [TRACE] EvalWriteState: recording 0 dependencies for helm_release.timescaledb
2020/08/09 19:26:30 [TRACE] EvalWriteState: writing current state object for helm_release.timescaledb
2020-08-09T19:26:30.375+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:30 [INFO] Successfully initialized kubernetes config
2020-08-09T19:26:30.375+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:30 [DEBUG] [INFO] GetHelmConfiguration success
2020-08-09T19:26:30.375+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:30 [DEBUG] sentry getRelease wait for lock
2020-08-09T19:26:30.375+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:30 [DEBUG] metrics-server getRelease got lock, started
2020-08-09T19:26:30.375+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:30 [DEBUG] metrics-server getRelease post action created
2020/08/09 19:26:30 [TRACE] [walkRefresh] Exiting eval tree: helm_release.timescaledb
2020/08/09 19:26:30 [TRACE] vertex "helm_release.timescaledb": visit complete
2020/08/09 19:26:30 [TRACE] vertex "helm_release.timescaledb": dynamic subgraph completed successfully
2020/08/09 19:26:30 [TRACE] vertex "helm_release.timescaledb": visit complete
2020/08/09 19:26:30 [TRACE] dag/walk: visiting "null_resource.create-timescaledb-setup"
2020/08/09 19:26:30 [TRACE] vertex "null_resource.create-timescaledb-setup": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:30 [TRACE] vertex "null_resource.create-timescaledb-setup": expanding dynamic subgraph
2020/08/09 19:26:30 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:30 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  null_resource.create-timescaledb-setup - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:30 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:30 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:30 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:30 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:30 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:30 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:30 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:30 [WARN] no schema for provisioner "local-exec" is attached to null_resource.create-timescaledb-setup, so provisioner block references cannot be detected
2020/08/09 19:26:30 [WARN] no schema for provisioner "local-exec" is attached to null_resource.create-timescaledb-setup, so provisioner block references cannot be detected
2020/08/09 19:26:30 [DEBUG] ReferenceTransformer: "null_resource.create-timescaledb-setup" references: []
2020/08/09 19:26:30 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:30 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:30 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:30 [TRACE] vertex "null_resource.create-timescaledb-setup": entering dynamic subgraph
2020/08/09 19:26:30 [TRACE] dag/walk: updating graph
2020/08/09 19:26:30 [TRACE] dag/walk: added new vertex: "null_resource.create-timescaledb-setup"
2020/08/09 19:26:30 [TRACE] dag/walk: visiting "null_resource.create-timescaledb-setup"
2020/08/09 19:26:30 [TRACE] vertex "null_resource.create-timescaledb-setup": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:30 [TRACE] NodeRefreshableManagedResourceInstance: null_resource.create-timescaledb-setup will be refreshed
2020/08/09 19:26:30 [TRACE] vertex "null_resource.create-timescaledb-setup": evaluating
2020/08/09 19:26:30 [TRACE] [walkRefresh] Entering eval tree: null_resource.create-timescaledb-setup
2020/08/09 19:26:30 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:30 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:30 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:30 [TRACE] EvalReadState: reading state for null_resource.create-timescaledb-setup
2020/08/09 19:26:30 [TRACE] UpgradeResourceState: schema version of null_resource.create-timescaledb-setup is still 0; calling provider "registry.terraform.io/-/null" for any other minor fixups
2020/08/09 19:26:30 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:30 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:30 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:30 [TRACE] GRPCProvider: ReadResource
2020/08/09 19:26:30 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:30 [TRACE] EvalWriteState: recording 1 dependencies for null_resource.create-timescaledb-setup
2020/08/09 19:26:30 [TRACE] EvalWriteState: writing current state object for null_resource.create-timescaledb-setup
2020/08/09 19:26:30 [TRACE] [walkRefresh] Exiting eval tree: null_resource.create-timescaledb-setup
2020/08/09 19:26:30 [TRACE] vertex "null_resource.create-timescaledb-setup": visit complete
2020/08/09 19:26:30 [TRACE] vertex "null_resource.create-timescaledb-setup": dynamic subgraph completed successfully
2020/08/09 19:26:30 [TRACE] vertex "null_resource.create-timescaledb-setup": visit complete
2020-08-09T19:26:30.869+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:30 [DEBUG] metrics-server getRelease post run
2020-08-09T19:26:30.869+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:30 [DEBUG] metrics-server getRelease done
2020-08-09T19:26:30.869+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:30 [DEBUG] [resourceReleaseExists: metrics-server] Done
2020-08-09T19:26:30.869+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:30 [DEBUG] [resourceReleaseRead: metrics-server] Started
2020-08-09T19:26:30.869+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:30 [DEBUG] cert-manager getRelease got lock, started
2020-08-09T19:26:30.869+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:30 [DEBUG] cert-manager getRelease post action created
2020/08/09 19:26:30 [TRACE] dag/walk: vertex "root" is waiting for "provider.kubernetes (close)"
2020-08-09T19:26:31.838+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:31 [DEBUG] cert-manager getRelease post run
2020-08-09T19:26:31.838+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:31 [DEBUG] cert-manager getRelease done
2020-08-09T19:26:31.838+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:31 [DEBUG] [resourceReleaseExists: cert-manager] Done
2020-08-09T19:26:31.838+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:31 [DEBUG] [resourceReleaseRead: cert-manager] Started
2020-08-09T19:26:31.838+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:31 [DEBUG] [INFO] GetHelmConfiguration start
2020-08-09T19:26:31.838+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:31 [INFO] Successfully initialized kubernetes config
2020-08-09T19:26:31.838+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:31 [DEBUG] [INFO] GetHelmConfiguration success
2020-08-09T19:26:31.838+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:31 [DEBUG] prometheus-operator getRelease wait for lock
2020-08-09T19:26:31.838+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:31 [DEBUG] nginx-ingress getRelease got lock, started
2020-08-09T19:26:31.838+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:31 [DEBUG] nginx-ingress getRelease post action created
2020-08-09T19:26:32.289+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:32 [DEBUG] nginx-ingress getRelease post run
2020-08-09T19:26:32.289+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:32 [DEBUG] nginx-ingress getRelease done
2020-08-09T19:26:32.289+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:32 [DEBUG] [resourceReleaseExists: nginx-ingress] Done
2020-08-09T19:26:32.289+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:32 [DEBUG] docker-registry getRelease got lock, started
2020-08-09T19:26:32.289+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:32 [DEBUG] docker-registry getRelease post action created
2020-08-09T19:26:32.289+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:32 [DEBUG] [resourceReleaseRead: nginx-ingress] Started
2020/08/09 19:26:32 [TRACE] dag/walk: vertex "null_resource.rio-setup" is waiting for "helm_release.cert-manager"
2020/08/09 19:26:32 [TRACE] dag/walk: vertex "null_resource.rio-app-domains" is waiting for "null_resource.rio-setup"
2020/08/09 19:26:32 [TRACE] dag/walk: vertex "kubernetes_secret.cloudflare-dns-api-token" is waiting for "helm_release.cert-manager"
2020/08/09 19:26:32 [TRACE] dag/walk: vertex "null_resource.rio-custom-domain" is waiting for "null_resource.rio-setup"
2020/08/09 19:26:32 [TRACE] dag/walk: vertex "kubernetes_ingress.rio-ingress" is waiting for "helm_release.cert-manager"
2020/08/09 19:26:32 [TRACE] dag/walk: vertex "null_resource.cert-manager-setup" is waiting for "helm_release.cert-manager"
2020-08-09T19:26:32.724+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:32 [DEBUG] docker-registry getRelease post run
2020-08-09T19:26:32.724+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:32 [DEBUG] docker-registry getRelease done
2020-08-09T19:26:32.724+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:32 [DEBUG] redis getRelease got lock, started
2020-08-09T19:26:32.724+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:32 [DEBUG] [resourceReleaseRead: docker-registry] Done
2020-08-09T19:26:32.724+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:32 [DEBUG] redis getRelease post action created
2020/08/09 19:26:32 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:32 [TRACE] EvalWriteState: recording 0 dependencies for helm_release.docker-registry
2020/08/09 19:26:32 [TRACE] EvalWriteState: writing current state object for helm_release.docker-registry
2020/08/09 19:26:32 [TRACE] [walkRefresh] Exiting eval tree: helm_release.docker-registry
2020/08/09 19:26:32 [TRACE] vertex "helm_release.docker-registry": visit complete
2020/08/09 19:26:32 [TRACE] vertex "helm_release.docker-registry": dynamic subgraph completed successfully
2020/08/09 19:26:32 [TRACE] vertex "helm_release.docker-registry": visit complete
2020-08-09T19:26:33.379+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:33 [DEBUG] redis getRelease post run
2020-08-09T19:26:33.379+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:33 [DEBUG] redis getRelease done
2020-08-09T19:26:33.379+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:33 [DEBUG] [resourceReleaseRead: redis] Done
2020-08-09T19:26:33.379+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:33 [DEBUG] sentry-k8s-errors getRelease got lock, started
2020-08-09T19:26:33.379+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:33 [DEBUG] sentry-k8s-errors getRelease post action created
2020/08/09 19:26:33 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:33 [TRACE] EvalWriteState: recording 0 dependencies for helm_release.redis
2020/08/09 19:26:33 [TRACE] EvalWriteState: writing current state object for helm_release.redis
2020/08/09 19:26:33 [TRACE] [walkRefresh] Exiting eval tree: helm_release.redis
2020/08/09 19:26:33 [TRACE] vertex "helm_release.redis": visit complete
2020/08/09 19:26:33 [TRACE] vertex "helm_release.redis": dynamic subgraph completed successfully
2020/08/09 19:26:33 [TRACE] vertex "helm_release.redis": visit complete
2020-08-09T19:26:33.819+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:33 [DEBUG] sentry-k8s-errors getRelease post run
2020-08-09T19:26:33.819+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:33 [DEBUG] sentry-k8s-errors getRelease done
2020-08-09T19:26:33.819+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:33 [DEBUG] [resourceReleaseRead: sentry-k8s-errors] Done
2020-08-09T19:26:33.819+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:33 [DEBUG] sentry getRelease got lock, started
2020-08-09T19:26:33.819+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:33 [DEBUG] sentry getRelease post action created
2020/08/09 19:26:33 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:33 [TRACE] EvalWriteState: recording 0 dependencies for helm_release.sentry-k8s-erros
2020/08/09 19:26:33 [TRACE] EvalWriteState: writing current state object for helm_release.sentry-k8s-erros
2020/08/09 19:26:33 [TRACE] [walkRefresh] Exiting eval tree: helm_release.sentry-k8s-erros
2020/08/09 19:26:33 [TRACE] vertex "helm_release.sentry-k8s-erros": visit complete
2020/08/09 19:26:33 [TRACE] vertex "helm_release.sentry-k8s-erros": dynamic subgraph completed successfully
2020/08/09 19:26:33 [TRACE] vertex "helm_release.sentry-k8s-erros": visit complete
2020/08/09 19:26:34 [TRACE] dag/walk: vertex "provider.kubernetes (close)" is waiting for "kubernetes_ingress.rio-ingress"
2020-08-09T19:26:34.746+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:34 [DEBUG] sentry getRelease post run
2020-08-09T19:26:34.746+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:34 [DEBUG] sentry getRelease done
2020-08-09T19:26:34.746+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:34 [DEBUG] [resourceReleaseRead: sentry] Done
2020-08-09T19:26:34.746+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:34 [DEBUG] [INFO] GetHelmConfiguration start
2020-08-09T19:26:34.746+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:34 [INFO] Successfully initialized kubernetes config
2020-08-09T19:26:34.746+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:34 [DEBUG] [INFO] GetHelmConfiguration success
2020-08-09T19:26:34.746+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:34 [DEBUG] metrics-server getRelease wait for lock
2020-08-09T19:26:34.746+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:34 [DEBUG] [INFO] GetHelmConfiguration start
2020-08-09T19:26:34.746+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:34 [INFO] Successfully initialized kubernetes config
2020-08-09T19:26:34.746+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:34 [DEBUG] [INFO] GetHelmConfiguration success
2020-08-09T19:26:34.746+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:34 [DEBUG] cert-manager getRelease wait for lock
2020-08-09T19:26:34.746+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:34 [DEBUG] prometheus-operator getRelease got lock, started
2020-08-09T19:26:34.746+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:34 [DEBUG] prometheus-operator getRelease post action created
2020/08/09 19:26:34 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:34 [TRACE] EvalWriteState: recording 0 dependencies for helm_release.sentry
2020/08/09 19:26:34 [TRACE] EvalWriteState: writing current state object for helm_release.sentry
2020/08/09 19:26:34 [TRACE] [walkRefresh] Exiting eval tree: helm_release.sentry
2020/08/09 19:26:34 [TRACE] vertex "helm_release.sentry": visit complete
2020/08/09 19:26:34 [TRACE] vertex "helm_release.sentry": dynamic subgraph completed successfully
2020/08/09 19:26:34 [TRACE] vertex "helm_release.sentry": visit complete
2020/08/09 19:26:35 [TRACE] dag/walk: vertex "provider.null (close)" is waiting for "null_resource.rio-app-domains"
2020-08-09T19:26:35.893+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:35 [DEBUG] prometheus-operator getRelease post run
2020-08-09T19:26:35.893+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:35 [DEBUG] prometheus-operator getRelease done
2020-08-09T19:26:35.893+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:35 [DEBUG] [resourceReleaseRead: prometheus-operator] Done
2020-08-09T19:26:35.894+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:35 [DEBUG] [INFO] GetHelmConfiguration start
2020-08-09T19:26:35.894+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:35 [INFO] Successfully initialized kubernetes config
2020-08-09T19:26:35.894+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:35 [DEBUG] [INFO] GetHelmConfiguration success
2020-08-09T19:26:35.894+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:35 [DEBUG] nginx-ingress getRelease wait for lock
2020-08-09T19:26:35.894+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:35 [DEBUG] metrics-server getRelease got lock, started
2020-08-09T19:26:35.894+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:35 [DEBUG] metrics-server getRelease post action created
2020/08/09 19:26:35 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:35 [TRACE] EvalWriteState: recording 0 dependencies for helm_release.prometheus-operator
2020/08/09 19:26:35 [TRACE] EvalWriteState: writing current state object for helm_release.prometheus-operator
2020/08/09 19:26:35 [TRACE] [walkRefresh] Exiting eval tree: helm_release.prometheus-operator
2020/08/09 19:26:35 [TRACE] vertex "helm_release.prometheus-operator": visit complete
2020/08/09 19:26:35 [TRACE] vertex "helm_release.prometheus-operator": dynamic subgraph completed successfully
2020/08/09 19:26:35 [TRACE] vertex "helm_release.prometheus-operator": visit complete
2020/08/09 19:26:35 [TRACE] dag/walk: vertex "root" is waiting for "provider.kubernetes (close)"
2020-08-09T19:26:36.328+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:36 [DEBUG] metrics-server getRelease post run
2020-08-09T19:26:36.328+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:36 [DEBUG] metrics-server getRelease done
2020-08-09T19:26:36.328+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:36 [DEBUG] cert-manager getRelease got lock, started
2020-08-09T19:26:36.328+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:36 [DEBUG] cert-manager getRelease post action created
2020-08-09T19:26:36.328+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:36 [DEBUG] [resourceReleaseRead: metrics-server] Done
2020/08/09 19:26:36 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:36 [TRACE] EvalWriteState: recording 0 dependencies for helm_release.metrics-server
2020/08/09 19:26:36 [TRACE] EvalWriteState: writing current state object for helm_release.metrics-server
2020/08/09 19:26:36 [TRACE] [walkRefresh] Exiting eval tree: helm_release.metrics-server
2020/08/09 19:26:36 [TRACE] vertex "helm_release.metrics-server": visit complete
2020/08/09 19:26:36 [TRACE] vertex "helm_release.metrics-server": dynamic subgraph completed successfully
2020/08/09 19:26:36 [TRACE] vertex "helm_release.metrics-server": visit complete
2020-08-09T19:26:37.239+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:37 [DEBUG] cert-manager getRelease post run
2020-08-09T19:26:37.239+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:37 [DEBUG] cert-manager getRelease done
2020-08-09T19:26:37.239+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:37 [DEBUG] [resourceReleaseRead: cert-manager] Done
2020-08-09T19:26:37.239+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:37 [DEBUG] nginx-ingress getRelease got lock, started
2020-08-09T19:26:37.239+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:37 [DEBUG] nginx-ingress getRelease post action created
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:37 [TRACE] EvalWriteState: recording 0 dependencies for helm_release.cert-manager
2020/08/09 19:26:37 [TRACE] EvalWriteState: writing current state object for helm_release.cert-manager
2020/08/09 19:26:37 [TRACE] [walkRefresh] Exiting eval tree: helm_release.cert-manager
2020/08/09 19:26:37 [TRACE] vertex "helm_release.cert-manager": visit complete
2020/08/09 19:26:37 [TRACE] vertex "helm_release.cert-manager": dynamic subgraph completed successfully
2020/08/09 19:26:37 [TRACE] vertex "helm_release.cert-manager": visit complete
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "null_resource.rio-setup"
2020/08/09 19:26:37 [TRACE] vertex "null_resource.rio-setup": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:37 [TRACE] vertex "null_resource.rio-setup": expanding dynamic subgraph
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "null_resource.cert-manager-setup"
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:37 [TRACE] vertex "null_resource.cert-manager-setup": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_ingress.rio-ingress"
2020/08/09 19:26:37 [TRACE] vertex "null_resource.cert-manager-setup": expanding dynamic subgraph
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  null_resource.rio-setup - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_ingress.rio-ingress": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_secret.cloudflare-dns-api-token"
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_ingress.rio-ingress": expanding dynamic subgraph
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_secret.cloudflare-dns-api-token": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_secret.cloudflare-dns-api-token": expanding dynamic subgraph
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:37 [WARN] no schema for provisioner "local-exec" is attached to null_resource.rio-setup, so provisioner block references cannot be detected
2020/08/09 19:26:37 [WARN] no schema for provisioner "local-exec" is attached to null_resource.rio-setup, so provisioner block references cannot be detected
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "null_resource.rio-setup" references: []
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:37 [TRACE] vertex "null_resource.rio-setup": entering dynamic subgraph
2020/08/09 19:26:37 [TRACE] dag/walk: updating graph
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "null_resource.rio-setup"
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "null_resource.rio-setup"
2020/08/09 19:26:37 [TRACE] vertex "null_resource.rio-setup": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:37 [TRACE] NodeRefreshableManagedResourceInstance: null_resource.rio-setup will be refreshed
2020/08/09 19:26:37 [TRACE] vertex "null_resource.rio-setup": evaluating
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  null_resource.cert-manager-setup - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:37 [TRACE] [walkRefresh] Entering eval tree: null_resource.rio-setup
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:37 [TRACE] EvalReadState: reading state for null_resource.rio-setup
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:37 [WARN] no schema for provisioner "local-exec" is attached to null_resource.cert-manager-setup, so provisioner block references cannot be detected
2020/08/09 19:26:37 [WARN] no schema for provisioner "local-exec" is attached to null_resource.cert-manager-setup, so provisioner block references cannot be detected
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "null_resource.cert-manager-setup" references: []
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:37 [TRACE] vertex "null_resource.cert-manager-setup": entering dynamic subgraph
2020/08/09 19:26:37 [TRACE] dag/walk: updating graph
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "null_resource.cert-manager-setup"
2020/08/09 19:26:37 [TRACE] UpgradeResourceState: schema version of null_resource.rio-setup is still 0; calling provider "registry.terraform.io/-/null" for any other minor fixups
2020/08/09 19:26:37 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "null_resource.cert-manager-setup"
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:37 [TRACE] vertex "null_resource.cert-manager-setup": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_ingress.rio-ingress - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:37 [TRACE] NodeRefreshableManagedResourceInstance: null_resource.cert-manager-setup will be refreshed
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:37 [TRACE] vertex "null_resource.cert-manager-setup": evaluating
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:37 [TRACE] [walkRefresh] Entering eval tree: null_resource.cert-manager-setup
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:37 [TRACE] EvalReadState: reading state for null_resource.cert-manager-setup
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:37 [TRACE] GRPCProvider: ReadResource
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_ingress.rio-ingress" references: []
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_ingress.rio-ingress": entering dynamic subgraph
2020/08/09 19:26:37 [TRACE] dag/walk: updating graph
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_ingress.rio-ingress"
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_ingress.rio-ingress"
2020/08/09 19:26:37 [TRACE] UpgradeResourceState: schema version of null_resource.cert-manager-setup is still 0; calling provider "registry.terraform.io/-/null" for any other minor fixups
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_ingress.rio-ingress": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:37 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:37 [TRACE] NodeRefreshableManagedResourceInstance: kubernetes_ingress.rio-ingress will be refreshed
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_ingress.rio-ingress": evaluating
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:37 [TRACE] [walkRefresh] Entering eval tree: kubernetes_ingress.rio-ingress
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:37 [TRACE] EvalReadState: reading state for kubernetes_ingress.rio-ingress
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_secret.cloudflare-dns-api-token" references: []
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_secret.cloudflare-dns-api-token": entering dynamic subgraph
2020/08/09 19:26:37 [TRACE] dag/walk: updating graph
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_secret.cloudflare-dns-api-token"
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_secret.cloudflare-dns-api-token"
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_secret.cloudflare-dns-api-token": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:37 [TRACE] NodeRefreshableManagedResourceInstance: kubernetes_secret.cloudflare-dns-api-token will be refreshed
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_secret.cloudflare-dns-api-token": evaluating
2020/08/09 19:26:37 [TRACE] [walkRefresh] Entering eval tree: kubernetes_secret.cloudflare-dns-api-token
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:37 [TRACE] EvalReadState: reading state for kubernetes_secret.cloudflare-dns-api-token
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:37 [TRACE] UpgradeResourceState: schema version of kubernetes_secret.cloudflare-dns-api-token is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:37 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:37 [TRACE] GRPCProvider: ReadResource
2020/08/09 19:26:37 [TRACE] UpgradeResourceState: schema version of kubernetes_ingress.rio-ingress is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:37 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:37 [TRACE] EvalWriteState: recording 1 dependencies for null_resource.rio-setup
2020/08/09 19:26:37 [TRACE] EvalWriteState: writing current state object for null_resource.rio-setup
2020/08/09 19:26:37 [TRACE] [walkRefresh] Exiting eval tree: null_resource.rio-setup
2020/08/09 19:26:37 [TRACE] vertex "null_resource.rio-setup": visit complete
2020/08/09 19:26:37 [TRACE] vertex "null_resource.rio-setup": dynamic subgraph completed successfully
2020/08/09 19:26:37 [TRACE] vertex "null_resource.rio-setup": visit complete
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "null_resource.rio-app-domains"
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "null_resource.rio-custom-domain"
2020/08/09 19:26:37 [TRACE] vertex "null_resource.rio-app-domains": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:37 [TRACE] vertex "null_resource.rio-custom-domain": starting visit (*terraform.NodeRefreshableManagedResource)
2020/08/09 19:26:37 [TRACE] vertex "null_resource.rio-app-domains": expanding dynamic subgraph
2020/08/09 19:26:37 [TRACE] vertex "null_resource.rio-custom-domain": expanding dynamic subgraph
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  null_resource.rio-app-domains - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:37 [WARN] no schema for provisioner "local-exec" is attached to null_resource.rio-app-domains, so provisioner block references cannot be detected
2020/08/09 19:26:37 [WARN] no schema for provisioner "local-exec" is attached to null_resource.rio-app-domains, so provisioner block references cannot be detected
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "null_resource.rio-app-domains" references: []
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:37 [TRACE] vertex "null_resource.rio-app-domains": entering dynamic subgraph
2020/08/09 19:26:37 [TRACE] dag/walk: updating graph
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "null_resource.rio-app-domains"
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "null_resource.rio-app-domains"
2020/08/09 19:26:37 [TRACE] vertex "null_resource.rio-app-domains": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:37 [TRACE] EvalWriteState: recording 1 dependencies for null_resource.cert-manager-setup
2020/08/09 19:26:37 [TRACE] EvalWriteState: writing current state object for null_resource.cert-manager-setup
2020/08/09 19:26:37 [TRACE] NodeRefreshableManagedResourceInstance: null_resource.rio-app-domains will be refreshed
2020/08/09 19:26:37 [TRACE] vertex "null_resource.rio-app-domains": evaluating
2020/08/09 19:26:37 [TRACE] [walkRefresh] Entering eval tree: null_resource.rio-app-domains
2020/08/09 19:26:37 [TRACE] [walkRefresh] Exiting eval tree: null_resource.cert-manager-setup
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] vertex "null_resource.cert-manager-setup": visit complete
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:37 [TRACE] EvalReadState: reading state for null_resource.rio-app-domains
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  null_resource.rio-custom-domain - *terraform.NodeRefreshableManagedResourceInstance
  ------
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:37 [WARN] no schema for provisioner "local-exec" is attached to null_resource.rio-custom-domain, so provisioner block references cannot be detected
2020/08/09 19:26:37 [TRACE] vertex "null_resource.cert-manager-setup": dynamic subgraph completed successfully
2020/08/09 19:26:37 [TRACE] vertex "null_resource.cert-manager-setup": visit complete
2020/08/09 19:26:37 [WARN] no schema for provisioner "local-exec" is attached to null_resource.rio-custom-domain, so provisioner block references cannot be detected
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "null_resource.rio-custom-domain" references: []
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:37 [TRACE] vertex "null_resource.rio-custom-domain": entering dynamic subgraph
2020/08/09 19:26:37 [TRACE] dag/walk: updating graph
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "null_resource.rio-custom-domain"
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "null_resource.rio-custom-domain"
2020/08/09 19:26:37 [TRACE] vertex "null_resource.rio-custom-domain": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/08/09 19:26:37 [TRACE] NodeRefreshableManagedResourceInstance: null_resource.rio-custom-domain will be refreshed
2020/08/09 19:26:37 [TRACE] vertex "null_resource.rio-custom-domain": evaluating
2020/08/09 19:26:37 [TRACE] [walkRefresh] Entering eval tree: null_resource.rio-custom-domain
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:37 [TRACE] EvalReadState: reading state for null_resource.rio-custom-domain
2020/08/09 19:26:37 [TRACE] UpgradeResourceState: schema version of null_resource.rio-custom-domain is still 0; calling provider "registry.terraform.io/-/null" for any other minor fixups
2020/08/09 19:26:37 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:37 [TRACE] UpgradeResourceState: schema version of null_resource.rio-app-domains is still 0; calling provider "registry.terraform.io/-/null" for any other minor fixups
2020/08/09 19:26:37 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:37 [TRACE] GRPCProvider: ReadResource
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:37 [TRACE] GRPCProvider: ReadResource
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:37 [TRACE] EvalWriteState: recording 2 dependencies for null_resource.rio-custom-domain
2020/08/09 19:26:37 [TRACE] EvalWriteState: writing current state object for null_resource.rio-custom-domain
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:37 [TRACE] [walkRefresh] Exiting eval tree: null_resource.rio-custom-domain
2020/08/09 19:26:37 [TRACE] EvalWriteState: recording 2 dependencies for null_resource.rio-app-domains
2020/08/09 19:26:37 [TRACE] vertex "null_resource.rio-custom-domain": visit complete
2020/08/09 19:26:37 [TRACE] EvalWriteState: writing current state object for null_resource.rio-app-domains
2020/08/09 19:26:37 [TRACE] vertex "null_resource.rio-custom-domain": dynamic subgraph completed successfully
2020/08/09 19:26:37 [TRACE] vertex "null_resource.rio-custom-domain": visit complete
2020/08/09 19:26:37 [TRACE] [walkRefresh] Exiting eval tree: null_resource.rio-app-domains
2020/08/09 19:26:37 [TRACE] vertex "null_resource.rio-app-domains": visit complete
2020/08/09 19:26:37 [TRACE] vertex "null_resource.rio-app-domains": dynamic subgraph completed successfully
2020/08/09 19:26:37 [TRACE] vertex "null_resource.rio-app-domains": visit complete
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "provider.null (close)"
2020/08/09 19:26:37 [TRACE] vertex "provider.null (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/08/09 19:26:37 [TRACE] vertex "provider.null (close)": evaluating
2020/08/09 19:26:37 [TRACE] [walkRefresh] Entering eval tree: provider.null (close)
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/08/09 19:26:37 [TRACE] GRPCProvider: Close
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:37 [TRACE] GRPCProvider: ReadResource
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/08/09 19:26:37 [TRACE] GRPCProvider: ReadResource
2020-08-09T19:26:37.245+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:37 [INFO] Checking secret cloudflare-dns-api-token
2020-08-09T19:26:37.246+0300 [DEBUG] plugin: plugin process exited: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-null_v2.1.2_x4 pid=4110936
2020-08-09T19:26:37.246+0300 [DEBUG] plugin: plugin exited
2020/08/09 19:26:37 [TRACE] [walkRefresh] Exiting eval tree: provider.null (close)
2020/08/09 19:26:37 [TRACE] vertex "provider.null (close)": visit complete
2020-08-09T19:26:37.246+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:37 [INFO] Checking ingress rio-ingress
2020-08-09T19:26:37.456+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:37 [INFO] Reading secret cloudflare-dns-api-token
2020-08-09T19:26:37.457+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:37 [INFO] Reading ingress rio-ingress
2020-08-09T19:26:37.691+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:37 [INFO] Received secret: &v1.Secret{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"cloudflare-dns-api-token", GenerateName:"", Namespace:"cert-manager", SelfLink:"/api/v1/namespaces/cert-manager/secrets/cloudflare-dns-api-token", UID:"b5457981-0ebe-4c0e-bd74-dc6eb378bb8a", ResourceVersion:"4834", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63732054947, loc:(*time.Location)(0x2dde260)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000a267e0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a26800)}}}, Data:map[string][]uint8{"api-token":[]uint8{0x64, 0x76, 0x75, 0x34, 0x54, 0x76, 0x4b, 0x4b, 0x49, 0x74, 0x50, 0x55, 0x6b, 0x61, 0x78, 0x30, 0x66, 0x57, 0x4b, 0x39, 0x41, 0x51, 0x45, 0x4c, 0x34, 0x74, 0x53, 0x69, 0x6a, 0x47, 0x64, 0x44, 0x39, 0x6c, 0x47, 0x45, 0x5f, 0x7a, 0x47, 0x64}}, StringData:map[string]string(nil), Type:"Opaque"}
2020-08-09T19:26:37.691+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:37 [INFO] Received ingress: &v1beta1.Ingress{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"rio-ingress", GenerateName:"", Namespace:"rio-system", SelfLink:"/apis/extensions/v1beta1/namespaces/rio-system/ingresses/rio-ingress", UID:"fa16e723-d54d-4f21-badc-9d1a7b40bb71", ResourceVersion:"1104394", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63732054947, loc:(*time.Location)(0x2dde260)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string{"cert-manager.io/acme-challenge-type":"dns01", "cert-manager.io/cluster-issuer":"letsencrypt-prod", "kubernetes.io/ingress.class":"nginx", "nginx.org/websocket-services":"gateway-proxy"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"extensions/v1beta1", Time:(*v1.Time)(0xc000e73b60), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e73b80)}, v1.ManagedFieldsEntry{Manager:"nginx-ingress-controller", Operation:"Update", APIVersion:"networking.k8s.io/v1beta1", Time:(*v1.Time)(0xc000e73ba0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e73bc0)}}}, Spec:v1beta1.IngressSpec{Backend:(*v1beta1.IngressBackend)(0xc000c3e7e0), TLS:[]v1beta1.IngressTLS{v1beta1.IngressTLS{Hosts:[]string{"*.rio.dishapp.com", "dishapp.com"}, SecretName:"rio-tls"}}, Rules:[]v1beta1.IngressRule{v1beta1.IngressRule{Host:"*.rio.dishapp.com", IngressRuleValue:v1beta1.IngressRuleValue{HTTP:(*v1beta1.HTTPIngressRuleValue)(0xc000e73c20)}}, v1beta1.IngressRule{Host:"dishapp.com", IngressRuleValue:v1beta1.IngressRuleValue{HTTP:(*v1beta1.HTTPIngressRuleValue)(0xc000e73c40)}}}}, Status:v1beta1.IngressStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress{v1.LoadBalancerIngress{IP:"138.68.230.152", Hostname:""}, v1.LoadBalancerIngress{IP:"138.68.61.179", Hostname:""}}}}}
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalWriteState
2020-08-09T19:26:37.692+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:37 [DEBUG] Flattened ingress spec: []interface {}{map[string]interface {}{"backend":[]interface {}{map[string]interface {}{"service_name":"gateway-proxy", "service_port":"80"}}, "rule":[]interface {}{map[string]interface {}{"host":"*.rio.dishapp.com", "http":[]interface {}{map[string]interface {}{"path":[]interface {}{map[string]interface {}{"backend":[]interface {}{map[string]interface {}{"service_name":"gateway-proxy", "service_port":"80"}}, "path":"/*"}}}}}, map[string]interface {}{"host":"dishapp.com", "http":[]interface {}{map[string]interface {}{"path":[]interface {}{map[string]interface {}{"backend":[]interface {}{map[string]interface {}{"service_name":"gateway-proxy", "service_port":"80"}}, "path":"/*"}}}}}}, "tls":[]interface {}{map[string]interface {}{"hosts":[]string{"*.rio.dishapp.com", "dishapp.com"}, "secret_name":"rio-tls"}}}}
2020/08/09 19:26:37 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_secret.cloudflare-dns-api-token
2020/08/09 19:26:37 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.cloudflare-dns-api-token
2020/08/09 19:26:37 [TRACE] [walkRefresh] Exiting eval tree: kubernetes_secret.cloudflare-dns-api-token
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_secret.cloudflare-dns-api-token": visit complete
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_secret.cloudflare-dns-api-token": dynamic subgraph completed successfully
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_secret.cloudflare-dns-api-token": visit complete
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:37 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_ingress.rio-ingress
2020/08/09 19:26:37 [TRACE] EvalWriteState: writing current state object for kubernetes_ingress.rio-ingress
2020/08/09 19:26:37 [TRACE] [walkRefresh] Exiting eval tree: kubernetes_ingress.rio-ingress
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_ingress.rio-ingress": visit complete
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_ingress.rio-ingress": dynamic subgraph completed successfully
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_ingress.rio-ingress": visit complete
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "provider.kubernetes (close)"
2020/08/09 19:26:37 [TRACE] vertex "provider.kubernetes (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/08/09 19:26:37 [TRACE] vertex "provider.kubernetes (close)": evaluating
2020/08/09 19:26:37 [TRACE] [walkRefresh] Entering eval tree: provider.kubernetes (close)
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/08/09 19:26:37 [TRACE] GRPCProvider: Close
2020-08-09T19:26:37.693+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:37 [DEBUG] nginx-ingress getRelease post run
2020-08-09T19:26:37.693+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:37 [DEBUG] nginx-ingress getRelease done
2020-08-09T19:26:37.693+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:37 [DEBUG] [resourceReleaseRead: nginx-ingress] Done
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:37 [TRACE] EvalWriteState: recording 0 dependencies for helm_release.nginx-ingress
2020/08/09 19:26:37 [TRACE] EvalWriteState: writing current state object for helm_release.nginx-ingress
2020/08/09 19:26:37 [TRACE] [walkRefresh] Exiting eval tree: helm_release.nginx-ingress
2020/08/09 19:26:37 [TRACE] vertex "helm_release.nginx-ingress": visit complete
2020/08/09 19:26:37 [TRACE] vertex "helm_release.nginx-ingress": dynamic subgraph completed successfully
2020/08/09 19:26:37 [TRACE] vertex "helm_release.nginx-ingress": visit complete
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "provider.helm (close)"
2020/08/09 19:26:37 [TRACE] vertex "provider.helm (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/08/09 19:26:37 [TRACE] vertex "provider.helm (close)": evaluating
2020/08/09 19:26:37 [TRACE] [walkRefresh] Entering eval tree: provider.helm (close)
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020-08-09T19:26:37.696+0300 [DEBUG] plugin: plugin process exited: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-kubernetes_v1.12.0_x4 pid=4110962
2020-08-09T19:26:37.696+0300 [DEBUG] plugin: plugin exited
2020/08/09 19:26:37 [TRACE] [walkRefresh] Exiting eval tree: provider.kubernetes (close)
2020/08/09 19:26:37 [TRACE] vertex "provider.kubernetes (close)": visit complete
2020/08/09 19:26:37 [TRACE] GRPCProvider: Close
2020-08-09T19:26:37.706+0300 [DEBUG] plugin: plugin process exited: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-helm_v1.2.4_x4 pid=4110975
2020-08-09T19:26:37.706+0300 [DEBUG] plugin: plugin exited
2020/08/09 19:26:37 [TRACE] [walkRefresh] Exiting eval tree: provider.helm (close)
2020/08/09 19:26:37 [TRACE] vertex "provider.helm (close)": visit complete
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "root"
2020/08/09 19:26:37 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/08/09 19:26:37 [TRACE] vertex "root": visit complete
2020/08/09 19:26:37 [INFO] backend/local: apply calling Plan
2020/08/09 19:26:37 [INFO] terraform: building graph: GraphTypePlan
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/08/09 19:26:37 [TRACE] ConfigTransformer: Starting for path: 
2020/08/09 19:26:37 [TRACE] ConfigTransformer: Starting for path: cluster
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodePlannableResource
  data.helm_repository.incubator - *terraform.NodePlannableResource
  data.helm_repository.jetstack - *terraform.NodePlannableResource
  data.helm_repository.sentry - *terraform.NodePlannableResource
  data.helm_repository.stable - *terraform.NodePlannableResource
  data.helm_repository.timescale - *terraform.NodePlannableResource
  data.local_file.cert_manager_setup - *terraform.NodePlannableResource
  data.local_file.rio-app-domains - *terraform.NodePlannableResource
  data.local_file.rio-custom-domain - *terraform.NodePlannableResource
  data.local_file.rio-yaml - *terraform.NodePlannableResource
  helm_release.cert-manager - *terraform.NodePlannableResource
  helm_release.docker-registry - *terraform.NodePlannableResource
  helm_release.metrics-server - *terraform.NodePlannableResource
  helm_release.nginx-ingress - *terraform.NodePlannableResource
  helm_release.postgres-ha - *terraform.NodePlannableResource
  helm_release.prometheus-operator - *terraform.NodePlannableResource
  helm_release.redis - *terraform.NodePlannableResource
  helm_release.sentry - *terraform.NodePlannableResource
  helm_release.sentry-k8s-erros - *terraform.NodePlannableResource
  helm_release.timescaledb - *terraform.NodePlannableResource
  kubernetes_config_map.buildkitd-config - *terraform.NodePlannableResource
  kubernetes_deployment.buildkitd - *terraform.NodePlannableResource
  kubernetes_ingress.docker-registry-ingress - *terraform.NodePlannableResource
  kubernetes_ingress.grafana-ingress - *terraform.NodePlannableResource
  kubernetes_ingress.rio-ingress - *terraform.NodePlannableResource
  kubernetes_ingress.sentry-ingress - *terraform.NodePlannableResource
  kubernetes_namespace.cert-manager - *terraform.NodePlannableResource
  kubernetes_namespace.docker - *terraform.NodePlannableResource
  kubernetes_namespace.metrics-server - *terraform.NodePlannableResource
  kubernetes_namespace.monitoring - *terraform.NodePlannableResource
  kubernetes_namespace.nginx-ingress - *terraform.NodePlannableResource
  kubernetes_namespace.postgres-ha - *terraform.NodePlannableResource
  kubernetes_namespace.redis - *terraform.NodePlannableResource
  kubernetes_namespace.rio - *terraform.NodePlannableResource
  kubernetes_namespace.sentry - *terraform.NodePlannableResource
  kubernetes_namespace.timescale - *terraform.NodePlannableResource
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodePlannableResource
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodePlannableResource
  kubernetes_secret.docker-config-json - *terraform.NodePlannableResource
  kubernetes_secret.docker-registry-auth - *terraform.NodePlannableResource
  kubernetes_secret.timescale-certificates - *terraform.NodePlannableResource
  kubernetes_secret.timescale-credentials - *terraform.NodePlannableResource
  kubernetes_service.buildkitd - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodePlannableResource
  null_resource.cert-manager-setup - *terraform.NodePlannableResource
  null_resource.create-timescaledb-setup - *terraform.NodePlannableResource
  null_resource.rio-app-domains - *terraform.NodePlannableResource
  null_resource.rio-custom-domain - *terraform.NodePlannableResource
  null_resource.rio-setup - *terraform.NodePlannableResource
  ------
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodePlannableResource
  data.helm_repository.incubator - *terraform.NodePlannableResource
  data.helm_repository.jetstack - *terraform.NodePlannableResource
  data.helm_repository.sentry - *terraform.NodePlannableResource
  data.helm_repository.stable - *terraform.NodePlannableResource
  data.helm_repository.timescale - *terraform.NodePlannableResource
  data.local_file.cert_manager_setup - *terraform.NodePlannableResource
  data.local_file.rio-app-domains - *terraform.NodePlannableResource
  data.local_file.rio-custom-domain - *terraform.NodePlannableResource
  data.local_file.rio-yaml - *terraform.NodePlannableResource
  helm_release.cert-manager - *terraform.NodePlannableResource
  helm_release.docker-registry - *terraform.NodePlannableResource
  helm_release.metrics-server - *terraform.NodePlannableResource
  helm_release.nginx-ingress - *terraform.NodePlannableResource
  helm_release.postgres-ha - *terraform.NodePlannableResource
  helm_release.prometheus-operator - *terraform.NodePlannableResource
  helm_release.redis - *terraform.NodePlannableResource
  helm_release.sentry - *terraform.NodePlannableResource
  helm_release.sentry-k8s-erros - *terraform.NodePlannableResource
  helm_release.timescaledb - *terraform.NodePlannableResource
  kubernetes_config_map.buildkitd-config - *terraform.NodePlannableResource
  kubernetes_deployment.buildkitd - *terraform.NodePlannableResource
  kubernetes_ingress.docker-registry-ingress - *terraform.NodePlannableResource
  kubernetes_ingress.grafana-ingress - *terraform.NodePlannableResource
  kubernetes_ingress.rio-ingress - *terraform.NodePlannableResource
  kubernetes_ingress.sentry-ingress - *terraform.NodePlannableResource
  kubernetes_namespace.cert-manager - *terraform.NodePlannableResource
  kubernetes_namespace.docker - *terraform.NodePlannableResource
  kubernetes_namespace.metrics-server - *terraform.NodePlannableResource
  kubernetes_namespace.monitoring - *terraform.NodePlannableResource
  kubernetes_namespace.nginx-ingress - *terraform.NodePlannableResource
  kubernetes_namespace.postgres-ha - *terraform.NodePlannableResource
  kubernetes_namespace.redis - *terraform.NodePlannableResource
  kubernetes_namespace.rio - *terraform.NodePlannableResource
  kubernetes_namespace.sentry - *terraform.NodePlannableResource
  kubernetes_namespace.timescale - *terraform.NodePlannableResource
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodePlannableResource
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodePlannableResource
  kubernetes_secret.docker-config-json - *terraform.NodePlannableResource
  kubernetes_secret.docker-registry-auth - *terraform.NodePlannableResource
  kubernetes_secret.timescale-certificates - *terraform.NodePlannableResource
  kubernetes_secret.timescale-credentials - *terraform.NodePlannableResource
  kubernetes_service.buildkitd - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodePlannableResource
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  null_resource.cert-manager-setup - *terraform.NodePlannableResource
  null_resource.create-timescaledb-setup - *terraform.NodePlannableResource
  null_resource.rio-app-domains - *terraform.NodePlannableResource
  null_resource.rio-custom-domain - *terraform.NodePlannableResource
  null_resource.rio-setup - *terraform.NodePlannableResource
  ------
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.StateTransformer
2020/08/09 19:26:37 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "null_resource.rio-app-domains" (*terraform.NodePlannableResource) config from rio.tf:65,1-43
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "data.helm_repository.incubator" (*terraform.NodePlannableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:35, Column:1, Byte:952}, End:hcl.Pos{Line:35, Column:35, Byte:986}}
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.sentry" (*terraform.NodePlannableResource) config from sentry.tf:1,1-41
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.monitoring" (*terraform.NodePlannableResource) config from prometheus.tf:6,1-45
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.docker-config-json" (*terraform.NodePlannableResource) config from rio.tf:135,1-50
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.postgres-ha" (*terraform.NodePlannableResource) config from postgres-ha.tf:7,1-38
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.buildkitd" (*terraform.NodePlannableResource) config from buildkitd.tf:100,1-42
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_ingress.sentry-ingress" (*terraform.NodePlannableResource) config from sentry.tf:93,1-47
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.redis" (*terraform.NodePlannableResource) config from redis.tf:7,1-32
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.metrics-server" (*terraform.NodePlannableResource) config from metrics-server.tf:7,1-41
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_persistent_volume_claim.image-proxy" (*terraform.NodePlannableResource) config from rio.tf:147,1-60
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.postgres-ha" (*terraform.NodePlannableResource) config from postgres-ha.tf:1,1-46
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.rio" (*terraform.NodePlannableResource) config from rio.tf:1,1-38
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.cert-manager" (*terraform.NodePlannableResource) config from cert-manager.tf:18,1-47
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.timescale-certificates" (*terraform.NodePlannableResource) config from timescaledb.tf:40,1-54
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.prometheus-operator" (*terraform.NodePlannableResource) config from prometheus.tf:12,1-46
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "module.cluster.digitalocean_kubernetes_node_pool.ci" (*terraform.NodePlannableResource) config from cluster/main.tf:48,1-50
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_ingress.grafana-ingress" (*terraform.NodePlannableResource) config from prometheus.tf:28,1-48
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.nginx-ingress" (*terraform.NodePlannableResource) config from nginx-ingress.tf:1,1-48
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "null_resource.rio-setup" (*terraform.NodePlannableResource) config from rio.tf:26,1-37
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_config_map.buildkitd-config" (*terraform.NodePlannableResource) config from buildkitd.tf:90,1-52
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.docker-registry" (*terraform.NodePlannableResource) config from docker-registry.tf:7,1-42
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.metrics-server" (*terraform.NodePlannableResource) config from metrics-server.tf:1,1-49
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_ingress.rio-ingress" (*terraform.NodePlannableResource) config from rio.tf:83,1-44
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "null_resource.rio-custom-domain" (*terraform.NodePlannableResource) config from rio.tf:45,1-45
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "module.cluster.digitalocean_kubernetes_node_pool.ancillary" (*terraform.NodePlannableResource) config from cluster/main.tf:30,1-57
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "module.cluster.digitalocean_kubernetes_node_pool.workers" (*terraform.NodePlannableResource) config from cluster/main.tf:39,1-55
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.timescaledb" (*terraform.NodePlannableResource) config from timescaledb.tf:12,1-38
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.docker" (*terraform.NodePlannableResource) config from docker-registry.tf:1,1-41
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "data.local_file.rio-yaml" (*terraform.NodePlannableResource) config from hcl.Range{Filename:"rio.tf", Start:hcl.Pos{Line:14, Column:1, Byte:188}, End:hcl.Pos{Line:14, Column:29, Byte:216}}
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "data.local_file.rio-app-domains" (*terraform.NodePlannableResource) config from hcl.Range{Filename:"rio.tf", Start:hcl.Pos{Line:22, Column:1, Byte:367}, End:hcl.Pos{Line:22, Column:36, Byte:402}}
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "data.helm_repository.stable" (*terraform.NodePlannableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:30, Column:1, Byte:836}, End:hcl.Pos{Line:30, Column:32, Byte:867}}
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.nginx-ingress" (*terraform.NodePlannableResource) config from nginx-ingress.tf:9,1-40
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.sentry" (*terraform.NodePlannableResource) config from sentry.tf:25,1-33
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "data.helm_repository.jetstack" (*terraform.NodePlannableResource) config from hcl.Range{Filename:"cert-manager.tf", Start:hcl.Pos{Line:13, Column:1, Byte:219}, End:hcl.Pos{Line:13, Column:34, Byte:252}}
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "module.cluster.digitalocean_kubernetes_cluster.dish" (*terraform.NodePlannableResource) config from cluster/main.tf:11,1-50
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "data.local_file.cert_manager_setup" (*terraform.NodePlannableResource) config from hcl.Range{Filename:"cert-manager.tf", Start:hcl.Pos{Line:9, Column:1, Byte:122}, End:hcl.Pos{Line:9, Column:39, Byte:160}}
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "data.helm_repository.sentry" (*terraform.NodePlannableResource) config from hcl.Range{Filename:"sentry.tf", Start:hcl.Pos{Line:7, Column:1, Byte:83}, End:hcl.Pos{Line:7, Column:32, Byte:114}}
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_ingress.docker-registry-ingress" (*terraform.NodePlannableResource) config from docker-registry.tf:47,1-56
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.sentry-k8s-erros" (*terraform.NodePlannableResource) config from sentry.tf:12,1-43
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.timescale-credentials" (*terraform.NodePlannableResource) config from timescaledb.tf:23,1-53
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.cert-manager" (*terraform.NodePlannableResource) config from cert-manager.tf:24,1-39
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "null_resource.create-timescaledb-setup" (*terraform.NodePlannableResource) config from timescaledb.tf:56,1-52
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "data.helm_repository.timescale" (*terraform.NodePlannableResource) config from hcl.Range{Filename:"timescaledb.tf", Start:hcl.Pos{Line:7, Column:1, Byte:89}, End:hcl.Pos{Line:7, Column:35, Byte:123}}
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "data.helm_repository.bitnami" (*terraform.NodePlannableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:40, Column:1, Byte:1084}, End:hcl.Pos{Line:40, Column:33, Byte:1116}}
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.redis" (*terraform.NodePlannableResource) config from redis.tf:1,1-40
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "data.local_file.rio-custom-domain" (*terraform.NodePlannableResource) config from hcl.Range{Filename:"rio.tf", Start:hcl.Pos{Line:18, Column:1, Byte:266}, End:hcl.Pos{Line:18, Column:38, Byte:303}}
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.buildkitd" (*terraform.NodePlannableResource) config from buildkitd.tf:1,1-45
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "null_resource.cert-manager-setup" (*terraform.NodePlannableResource) config from cert-manager.tf:42,1-46
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.docker-registry-auth" (*terraform.NodePlannableResource) config from docker-registry.tf:34,1-52
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.cloudflare-dns-api-token" (*terraform.NodePlannableResource) config from cert-manager.tf:60,1-56
2020/08/09 19:26:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.timescale" (*terraform.NodePlannableResource) config from timescaledb.tf:1,1-44
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodePlannableResource
  data.helm_repository.incubator - *terraform.NodePlannableResource
  data.helm_repository.jetstack - *terraform.NodePlannableResource
  data.helm_repository.sentry - *terraform.NodePlannableResource
  data.helm_repository.stable - *terraform.NodePlannableResource
  data.helm_repository.timescale - *terraform.NodePlannableResource
  data.local_file.cert_manager_setup - *terraform.NodePlannableResource
  data.local_file.rio-app-domains - *terraform.NodePlannableResource
  data.local_file.rio-custom-domain - *terraform.NodePlannableResource
  data.local_file.rio-yaml - *terraform.NodePlannableResource
  helm_release.cert-manager - *terraform.NodePlannableResource
  helm_release.docker-registry - *terraform.NodePlannableResource
  helm_release.metrics-server - *terraform.NodePlannableResource
  helm_release.nginx-ingress - *terraform.NodePlannableResource
  helm_release.postgres-ha - *terraform.NodePlannableResource
  helm_release.prometheus-operator - *terraform.NodePlannableResource
  helm_release.redis - *terraform.NodePlannableResource
  helm_release.sentry - *terraform.NodePlannableResource
  helm_release.sentry-k8s-erros - *terraform.NodePlannableResource
  helm_release.timescaledb - *terraform.NodePlannableResource
  kubernetes_config_map.buildkitd-config - *terraform.NodePlannableResource
  kubernetes_deployment.buildkitd - *terraform.NodePlannableResource
  kubernetes_ingress.docker-registry-ingress - *terraform.NodePlannableResource
  kubernetes_ingress.grafana-ingress - *terraform.NodePlannableResource
  kubernetes_ingress.rio-ingress - *terraform.NodePlannableResource
  kubernetes_ingress.sentry-ingress - *terraform.NodePlannableResource
  kubernetes_namespace.cert-manager - *terraform.NodePlannableResource
  kubernetes_namespace.docker - *terraform.NodePlannableResource
  kubernetes_namespace.metrics-server - *terraform.NodePlannableResource
  kubernetes_namespace.monitoring - *terraform.NodePlannableResource
  kubernetes_namespace.nginx-ingress - *terraform.NodePlannableResource
  kubernetes_namespace.postgres-ha - *terraform.NodePlannableResource
  kubernetes_namespace.redis - *terraform.NodePlannableResource
  kubernetes_namespace.rio - *terraform.NodePlannableResource
  kubernetes_namespace.sentry - *terraform.NodePlannableResource
  kubernetes_namespace.timescale - *terraform.NodePlannableResource
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodePlannableResource
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodePlannableResource
  kubernetes_secret.docker-config-json - *terraform.NodePlannableResource
  kubernetes_secret.docker-registry-auth - *terraform.NodePlannableResource
  kubernetes_secret.timescale-certificates - *terraform.NodePlannableResource
  kubernetes_secret.timescale-credentials - *terraform.NodePlannableResource
  kubernetes_service.buildkitd - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodePlannableResource
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  null_resource.cert-manager-setup - *terraform.NodePlannableResource
  null_resource.create-timescaledb-setup - *terraform.NodePlannableResource
  null_resource.rio-app-domains - *terraform.NodePlannableResource
  null_resource.rio-custom-domain - *terraform.NodePlannableResource
  null_resource.rio-setup - *terraform.NodePlannableResource
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/08/09 19:26:37 [TRACE] MissingProviderTransformer: added implicit provisioner local-exec, first implied by null_resource.rio-setup
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodePlannableResource
  data.helm_repository.incubator - *terraform.NodePlannableResource
  data.helm_repository.jetstack - *terraform.NodePlannableResource
  data.helm_repository.sentry - *terraform.NodePlannableResource
  data.helm_repository.stable - *terraform.NodePlannableResource
  data.helm_repository.timescale - *terraform.NodePlannableResource
  data.local_file.cert_manager_setup - *terraform.NodePlannableResource
  data.local_file.rio-app-domains - *terraform.NodePlannableResource
  data.local_file.rio-custom-domain - *terraform.NodePlannableResource
  data.local_file.rio-yaml - *terraform.NodePlannableResource
  helm_release.cert-manager - *terraform.NodePlannableResource
  helm_release.docker-registry - *terraform.NodePlannableResource
  helm_release.metrics-server - *terraform.NodePlannableResource
  helm_release.nginx-ingress - *terraform.NodePlannableResource
  helm_release.postgres-ha - *terraform.NodePlannableResource
  helm_release.prometheus-operator - *terraform.NodePlannableResource
  helm_release.redis - *terraform.NodePlannableResource
  helm_release.sentry - *terraform.NodePlannableResource
  helm_release.sentry-k8s-erros - *terraform.NodePlannableResource
  helm_release.timescaledb - *terraform.NodePlannableResource
  kubernetes_config_map.buildkitd-config - *terraform.NodePlannableResource
  kubernetes_deployment.buildkitd - *terraform.NodePlannableResource
  kubernetes_ingress.docker-registry-ingress - *terraform.NodePlannableResource
  kubernetes_ingress.grafana-ingress - *terraform.NodePlannableResource
  kubernetes_ingress.rio-ingress - *terraform.NodePlannableResource
  kubernetes_ingress.sentry-ingress - *terraform.NodePlannableResource
  kubernetes_namespace.cert-manager - *terraform.NodePlannableResource
  kubernetes_namespace.docker - *terraform.NodePlannableResource
  kubernetes_namespace.metrics-server - *terraform.NodePlannableResource
  kubernetes_namespace.monitoring - *terraform.NodePlannableResource
  kubernetes_namespace.nginx-ingress - *terraform.NodePlannableResource
  kubernetes_namespace.postgres-ha - *terraform.NodePlannableResource
  kubernetes_namespace.redis - *terraform.NodePlannableResource
  kubernetes_namespace.rio - *terraform.NodePlannableResource
  kubernetes_namespace.sentry - *terraform.NodePlannableResource
  kubernetes_namespace.timescale - *terraform.NodePlannableResource
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodePlannableResource
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodePlannableResource
  kubernetes_secret.docker-config-json - *terraform.NodePlannableResource
  kubernetes_secret.docker-registry-auth - *terraform.NodePlannableResource
  kubernetes_secret.timescale-certificates - *terraform.NodePlannableResource
  kubernetes_secret.timescale-credentials - *terraform.NodePlannableResource
  kubernetes_service.buildkitd - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodePlannableResource
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  null_resource.cert-manager-setup - *terraform.NodePlannableResource
  null_resource.create-timescaledb-setup - *terraform.NodePlannableResource
  null_resource.rio-app-domains - *terraform.NodePlannableResource
  null_resource.rio-custom-domain - *terraform.NodePlannableResource
  null_resource.rio-setup - *terraform.NodePlannableResource
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/08/09 19:26:37 [TRACE] ProvisionerTransformer: null_resource.rio-app-domains is provisioned by local-exec ("provisioner.local-exec")
2020/08/09 19:26:37 [TRACE] ProvisionerTransformer: null_resource.rio-setup is provisioned by local-exec ("provisioner.local-exec")
2020/08/09 19:26:37 [TRACE] ProvisionerTransformer: null_resource.rio-custom-domain is provisioned by local-exec ("provisioner.local-exec")
2020/08/09 19:26:37 [TRACE] ProvisionerTransformer: null_resource.create-timescaledb-setup is provisioned by local-exec ("provisioner.local-exec")
2020/08/09 19:26:37 [TRACE] ProvisionerTransformer: null_resource.cert-manager-setup is provisioned by local-exec ("provisioner.local-exec")
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ProvisionerTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodePlannableResource
  data.helm_repository.incubator - *terraform.NodePlannableResource
  data.helm_repository.jetstack - *terraform.NodePlannableResource
  data.helm_repository.sentry - *terraform.NodePlannableResource
  data.helm_repository.stable - *terraform.NodePlannableResource
  data.helm_repository.timescale - *terraform.NodePlannableResource
  data.local_file.cert_manager_setup - *terraform.NodePlannableResource
  data.local_file.rio-app-domains - *terraform.NodePlannableResource
  data.local_file.rio-custom-domain - *terraform.NodePlannableResource
  data.local_file.rio-yaml - *terraform.NodePlannableResource
  helm_release.cert-manager - *terraform.NodePlannableResource
  helm_release.docker-registry - *terraform.NodePlannableResource
  helm_release.metrics-server - *terraform.NodePlannableResource
  helm_release.nginx-ingress - *terraform.NodePlannableResource
  helm_release.postgres-ha - *terraform.NodePlannableResource
  helm_release.prometheus-operator - *terraform.NodePlannableResource
  helm_release.redis - *terraform.NodePlannableResource
  helm_release.sentry - *terraform.NodePlannableResource
  helm_release.sentry-k8s-erros - *terraform.NodePlannableResource
  helm_release.timescaledb - *terraform.NodePlannableResource
  kubernetes_config_map.buildkitd-config - *terraform.NodePlannableResource
  kubernetes_deployment.buildkitd - *terraform.NodePlannableResource
  kubernetes_ingress.docker-registry-ingress - *terraform.NodePlannableResource
  kubernetes_ingress.grafana-ingress - *terraform.NodePlannableResource
  kubernetes_ingress.rio-ingress - *terraform.NodePlannableResource
  kubernetes_ingress.sentry-ingress - *terraform.NodePlannableResource
  kubernetes_namespace.cert-manager - *terraform.NodePlannableResource
  kubernetes_namespace.docker - *terraform.NodePlannableResource
  kubernetes_namespace.metrics-server - *terraform.NodePlannableResource
  kubernetes_namespace.monitoring - *terraform.NodePlannableResource
  kubernetes_namespace.nginx-ingress - *terraform.NodePlannableResource
  kubernetes_namespace.postgres-ha - *terraform.NodePlannableResource
  kubernetes_namespace.redis - *terraform.NodePlannableResource
  kubernetes_namespace.rio - *terraform.NodePlannableResource
  kubernetes_namespace.sentry - *terraform.NodePlannableResource
  kubernetes_namespace.timescale - *terraform.NodePlannableResource
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodePlannableResource
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodePlannableResource
  kubernetes_secret.docker-config-json - *terraform.NodePlannableResource
  kubernetes_secret.docker-registry-auth - *terraform.NodePlannableResource
  kubernetes_secret.timescale-certificates - *terraform.NodePlannableResource
  kubernetes_secret.timescale-credentials - *terraform.NodePlannableResource
  kubernetes_service.buildkitd - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodePlannableResource
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  null_resource.cert-manager-setup - *terraform.NodePlannableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup - *terraform.NodePlannableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains - *terraform.NodePlannableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain - *terraform.NodePlannableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup - *terraform.NodePlannableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodePlannableResource
  data.helm_repository.incubator - *terraform.NodePlannableResource
  data.helm_repository.jetstack - *terraform.NodePlannableResource
  data.helm_repository.sentry - *terraform.NodePlannableResource
  data.helm_repository.stable - *terraform.NodePlannableResource
  data.helm_repository.timescale - *terraform.NodePlannableResource
  data.local_file.cert_manager_setup - *terraform.NodePlannableResource
  data.local_file.rio-app-domains - *terraform.NodePlannableResource
  data.local_file.rio-custom-domain - *terraform.NodePlannableResource
  data.local_file.rio-yaml - *terraform.NodePlannableResource
  helm_release.cert-manager - *terraform.NodePlannableResource
  helm_release.docker-registry - *terraform.NodePlannableResource
  helm_release.metrics-server - *terraform.NodePlannableResource
  helm_release.nginx-ingress - *terraform.NodePlannableResource
  helm_release.postgres-ha - *terraform.NodePlannableResource
  helm_release.prometheus-operator - *terraform.NodePlannableResource
  helm_release.redis - *terraform.NodePlannableResource
  helm_release.sentry - *terraform.NodePlannableResource
  helm_release.sentry-k8s-erros - *terraform.NodePlannableResource
  helm_release.timescaledb - *terraform.NodePlannableResource
  kubernetes_config_map.buildkitd-config - *terraform.NodePlannableResource
  kubernetes_deployment.buildkitd - *terraform.NodePlannableResource
  kubernetes_ingress.docker-registry-ingress - *terraform.NodePlannableResource
  kubernetes_ingress.grafana-ingress - *terraform.NodePlannableResource
  kubernetes_ingress.rio-ingress - *terraform.NodePlannableResource
  kubernetes_ingress.sentry-ingress - *terraform.NodePlannableResource
  kubernetes_namespace.cert-manager - *terraform.NodePlannableResource
  kubernetes_namespace.docker - *terraform.NodePlannableResource
  kubernetes_namespace.metrics-server - *terraform.NodePlannableResource
  kubernetes_namespace.monitoring - *terraform.NodePlannableResource
  kubernetes_namespace.nginx-ingress - *terraform.NodePlannableResource
  kubernetes_namespace.postgres-ha - *terraform.NodePlannableResource
  kubernetes_namespace.redis - *terraform.NodePlannableResource
  kubernetes_namespace.rio - *terraform.NodePlannableResource
  kubernetes_namespace.sentry - *terraform.NodePlannableResource
  kubernetes_namespace.timescale - *terraform.NodePlannableResource
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodePlannableResource
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodePlannableResource
  kubernetes_secret.docker-config-json - *terraform.NodePlannableResource
  kubernetes_secret.docker-registry-auth - *terraform.NodePlannableResource
  kubernetes_secret.timescale-certificates - *terraform.NodePlannableResource
  kubernetes_secret.timescale-credentials - *terraform.NodePlannableResource
  kubernetes_service.buildkitd - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodePlannableResource
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  null_resource.cert-manager-setup - *terraform.NodePlannableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup - *terraform.NodePlannableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains - *terraform.NodePlannableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain - *terraform.NodePlannableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup - *terraform.NodePlannableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/08/09 19:26:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/08/09 19:26:37 [TRACE] ProviderConfigTransformer: attaching to "module.cluster.provider.kubernetes" provider configuration from cluster/main.tf:63,1-22
2020/08/09 19:26:37 [TRACE] ProviderConfigTransformer: attaching to "module.cluster.provider.digitalocean" provider configuration from cluster/main.tf:5,1-24
2020/08/09 19:26:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodePlannableResource
  data.helm_repository.incubator - *terraform.NodePlannableResource
  data.helm_repository.jetstack - *terraform.NodePlannableResource
  data.helm_repository.sentry - *terraform.NodePlannableResource
  data.helm_repository.stable - *terraform.NodePlannableResource
  data.helm_repository.timescale - *terraform.NodePlannableResource
  data.local_file.cert_manager_setup - *terraform.NodePlannableResource
  data.local_file.rio-app-domains - *terraform.NodePlannableResource
  data.local_file.rio-custom-domain - *terraform.NodePlannableResource
  data.local_file.rio-yaml - *terraform.NodePlannableResource
  helm_release.cert-manager - *terraform.NodePlannableResource
  helm_release.docker-registry - *terraform.NodePlannableResource
  helm_release.metrics-server - *terraform.NodePlannableResource
  helm_release.nginx-ingress - *terraform.NodePlannableResource
  helm_release.postgres-ha - *terraform.NodePlannableResource
  helm_release.prometheus-operator - *terraform.NodePlannableResource
  helm_release.redis - *terraform.NodePlannableResource
  helm_release.sentry - *terraform.NodePlannableResource
  helm_release.sentry-k8s-erros - *terraform.NodePlannableResource
  helm_release.timescaledb - *terraform.NodePlannableResource
  kubernetes_config_map.buildkitd-config - *terraform.NodePlannableResource
  kubernetes_deployment.buildkitd - *terraform.NodePlannableResource
  kubernetes_ingress.docker-registry-ingress - *terraform.NodePlannableResource
  kubernetes_ingress.grafana-ingress - *terraform.NodePlannableResource
  kubernetes_ingress.rio-ingress - *terraform.NodePlannableResource
  kubernetes_ingress.sentry-ingress - *terraform.NodePlannableResource
  kubernetes_namespace.cert-manager - *terraform.NodePlannableResource
  kubernetes_namespace.docker - *terraform.NodePlannableResource
  kubernetes_namespace.metrics-server - *terraform.NodePlannableResource
  kubernetes_namespace.monitoring - *terraform.NodePlannableResource
  kubernetes_namespace.nginx-ingress - *terraform.NodePlannableResource
  kubernetes_namespace.postgres-ha - *terraform.NodePlannableResource
  kubernetes_namespace.redis - *terraform.NodePlannableResource
  kubernetes_namespace.rio - *terraform.NodePlannableResource
  kubernetes_namespace.sentry - *terraform.NodePlannableResource
  kubernetes_namespace.timescale - *terraform.NodePlannableResource
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodePlannableResource
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodePlannableResource
  kubernetes_secret.docker-config-json - *terraform.NodePlannableResource
  kubernetes_secret.docker-registry-auth - *terraform.NodePlannableResource
  kubernetes_secret.timescale-certificates - *terraform.NodePlannableResource
  kubernetes_secret.timescale-credentials - *terraform.NodePlannableResource
  kubernetes_service.buildkitd - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodePlannableResource
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.provider.kubernetes - *terraform.NodeApplyableProvider
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  null_resource.cert-manager-setup - *terraform.NodePlannableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup - *terraform.NodePlannableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains - *terraform.NodePlannableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain - *terraform.NodePlannableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup - *terraform.NodePlannableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/08/09 19:26:37 [DEBUG] adding implicit provider configuration provider.helm, implied first by data.helm_repository.incubator
2020/08/09 19:26:37 [DEBUG] adding implicit provider configuration provider.null, implied first by null_resource.rio-app-domains
2020/08/09 19:26:37 [DEBUG] adding implicit provider configuration provider.kubernetes, implied first by kubernetes_namespace.sentry
2020/08/09 19:26:37 [DEBUG] adding implicit provider configuration provider.digitalocean, implied first by module.cluster.digitalocean_kubernetes_node_pool.ci
2020/08/09 19:26:37 [DEBUG] adding implicit provider configuration provider.local, implied first by data.local_file.rio-yaml
2020/08/09 19:26:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodePlannableResource
  data.helm_repository.incubator - *terraform.NodePlannableResource
  data.helm_repository.jetstack - *terraform.NodePlannableResource
  data.helm_repository.sentry - *terraform.NodePlannableResource
  data.helm_repository.stable - *terraform.NodePlannableResource
  data.helm_repository.timescale - *terraform.NodePlannableResource
  data.local_file.cert_manager_setup - *terraform.NodePlannableResource
  data.local_file.rio-app-domains - *terraform.NodePlannableResource
  data.local_file.rio-custom-domain - *terraform.NodePlannableResource
  data.local_file.rio-yaml - *terraform.NodePlannableResource
  helm_release.cert-manager - *terraform.NodePlannableResource
  helm_release.docker-registry - *terraform.NodePlannableResource
  helm_release.metrics-server - *terraform.NodePlannableResource
  helm_release.nginx-ingress - *terraform.NodePlannableResource
  helm_release.postgres-ha - *terraform.NodePlannableResource
  helm_release.prometheus-operator - *terraform.NodePlannableResource
  helm_release.redis - *terraform.NodePlannableResource
  helm_release.sentry - *terraform.NodePlannableResource
  helm_release.sentry-k8s-erros - *terraform.NodePlannableResource
  helm_release.timescaledb - *terraform.NodePlannableResource
  kubernetes_config_map.buildkitd-config - *terraform.NodePlannableResource
  kubernetes_deployment.buildkitd - *terraform.NodePlannableResource
  kubernetes_ingress.docker-registry-ingress - *terraform.NodePlannableResource
  kubernetes_ingress.grafana-ingress - *terraform.NodePlannableResource
  kubernetes_ingress.rio-ingress - *terraform.NodePlannableResource
  kubernetes_ingress.sentry-ingress - *terraform.NodePlannableResource
  kubernetes_namespace.cert-manager - *terraform.NodePlannableResource
  kubernetes_namespace.docker - *terraform.NodePlannableResource
  kubernetes_namespace.metrics-server - *terraform.NodePlannableResource
  kubernetes_namespace.monitoring - *terraform.NodePlannableResource
  kubernetes_namespace.nginx-ingress - *terraform.NodePlannableResource
  kubernetes_namespace.postgres-ha - *terraform.NodePlannableResource
  kubernetes_namespace.redis - *terraform.NodePlannableResource
  kubernetes_namespace.rio - *terraform.NodePlannableResource
  kubernetes_namespace.sentry - *terraform.NodePlannableResource
  kubernetes_namespace.timescale - *terraform.NodePlannableResource
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodePlannableResource
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodePlannableResource
  kubernetes_secret.docker-config-json - *terraform.NodePlannableResource
  kubernetes_secret.docker-registry-auth - *terraform.NodePlannableResource
  kubernetes_secret.timescale-certificates - *terraform.NodePlannableResource
  kubernetes_secret.timescale-credentials - *terraform.NodePlannableResource
  kubernetes_service.buildkitd - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodePlannableResource
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.provider.kubernetes - *terraform.NodeApplyableProvider
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  null_resource.cert-manager-setup - *terraform.NodePlannableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup - *terraform.NodePlannableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains - *terraform.NodePlannableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain - *terraform.NodePlannableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup - *terraform.NodePlannableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  provider.digitalocean - *terraform.NodeApplyableProvider
  provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/08/09 19:26:37 [TRACE] ProviderTransformer: kubernetes_ingress.grafana-ingress is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: kubernetes_namespace.nginx-ingress is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: null_resource.rio-setup is provided by provider.null or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: kubernetes_config_map.buildkitd-config is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: helm_release.docker-registry is provided by provider.helm or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: kubernetes_namespace.metrics-server is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: kubernetes_ingress.rio-ingress is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: null_resource.rio-custom-domain is provided by provider.null or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: module.cluster.digitalocean_kubernetes_node_pool.ancillary is provided by module.cluster.provider.digitalocean or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: module.cluster.digitalocean_kubernetes_node_pool.workers is provided by module.cluster.provider.digitalocean or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: helm_release.timescaledb is provided by provider.helm or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: kubernetes_namespace.docker is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: data.local_file.rio-yaml is provided by provider.local or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: data.local_file.rio-app-domains is provided by provider.local or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: data.helm_repository.stable is provided by provider.helm or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: helm_release.nginx-ingress is provided by provider.helm or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: helm_release.sentry is provided by provider.helm or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: data.helm_repository.jetstack is provided by provider.helm or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: module.cluster.digitalocean_kubernetes_cluster.dish is provided by module.cluster.provider.digitalocean or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: data.local_file.cert_manager_setup is provided by provider.local or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: data.helm_repository.sentry is provided by provider.helm or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: helm_release.sentry-k8s-erros is provided by provider.helm or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: kubernetes_secret.timescale-credentials is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: kubernetes_ingress.docker-registry-ingress is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: helm_release.cert-manager is provided by provider.helm or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: null_resource.create-timescaledb-setup is provided by provider.null or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: data.helm_repository.timescale is provided by provider.helm or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: data.helm_repository.bitnami is provided by provider.helm or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: kubernetes_deployment.buildkitd is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: null_resource.cert-manager-setup is provided by provider.null or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: kubernetes_secret.docker-registry-auth is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: kubernetes_namespace.redis is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: data.local_file.rio-custom-domain is provided by provider.local or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: kubernetes_secret.cloudflare-dns-api-token is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: kubernetes_namespace.timescale is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: null_resource.rio-app-domains is provided by provider.null or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: data.helm_repository.incubator is provided by provider.helm or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: kubernetes_namespace.sentry is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: kubernetes_namespace.monitoring is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: helm_release.metrics-server is provided by provider.helm or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: helm_release.postgres-ha is provided by provider.helm or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: kubernetes_service.buildkitd is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: kubernetes_ingress.sentry-ingress is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: helm_release.redis is provided by provider.helm or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: kubernetes_secret.docker-config-json is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: kubernetes_persistent_volume_claim.image-proxy is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: kubernetes_namespace.postgres-ha is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: kubernetes_namespace.rio is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: kubernetes_namespace.cert-manager is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: kubernetes_secret.timescale-certificates is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: helm_release.prometheus-operator is provided by provider.helm or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: module.cluster.digitalocean_kubernetes_node_pool.ci is provided by module.cluster.provider.digitalocean or inherited equivalent
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for module.cluster.provider.digitalocean serving module.cluster.digitalocean_kubernetes_node_pool.workers
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "module.cluster.digitalocean_kubernetes_node_pool.workers" (*terraform.NodePlannableResource) needs module.cluster.provider.digitalocean
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.helm serving data.helm_repository.stable
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "data.helm_repository.stable" (*terraform.NodePlannableResource) needs provider.helm
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.null serving null_resource.create-timescaledb-setup
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "null_resource.create-timescaledb-setup" (*terraform.NodePlannableResource) needs provider.null
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.cert-manager
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "kubernetes_namespace.cert-manager" (*terraform.NodePlannableResource) needs provider.kubernetes
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_secret.timescale-certificates
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "kubernetes_secret.timescale-certificates" (*terraform.NodePlannableResource) needs provider.kubernetes
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_ingress.grafana-ingress
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "kubernetes_ingress.grafana-ingress" (*terraform.NodePlannableResource) needs provider.kubernetes
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.docker-registry
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "helm_release.docker-registry" (*terraform.NodePlannableResource) needs provider.helm
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for module.cluster.provider.digitalocean serving module.cluster.digitalocean_kubernetes_node_pool.ancillary
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "module.cluster.digitalocean_kubernetes_node_pool.ancillary" (*terraform.NodePlannableResource) needs module.cluster.provider.digitalocean
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_secret.docker-registry-auth
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "kubernetes_secret.docker-registry-auth" (*terraform.NodePlannableResource) needs provider.kubernetes
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_service.buildkitd
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "kubernetes_service.buildkitd" (*terraform.NodePlannableResource) needs provider.kubernetes
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.null serving null_resource.rio-setup
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "null_resource.rio-setup" (*terraform.NodePlannableResource) needs provider.null
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.docker
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "kubernetes_namespace.docker" (*terraform.NodePlannableResource) needs provider.kubernetes
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.sentry
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "helm_release.sentry" (*terraform.NodePlannableResource) needs provider.helm
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.cert-manager
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "helm_release.cert-manager" (*terraform.NodePlannableResource) needs provider.helm
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.helm serving data.helm_repository.timescale
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "data.helm_repository.timescale" (*terraform.NodePlannableResource) needs provider.helm
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.helm serving data.helm_repository.bitnami
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "data.helm_repository.bitnami" (*terraform.NodePlannableResource) needs provider.helm
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.redis
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "kubernetes_namespace.redis" (*terraform.NodePlannableResource) needs provider.kubernetes
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.null serving null_resource.rio-app-domains
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "null_resource.rio-app-domains" (*terraform.NodePlannableResource) needs provider.null
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.postgres-ha
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "kubernetes_namespace.postgres-ha" (*terraform.NodePlannableResource) needs provider.kubernetes
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.prometheus-operator
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "helm_release.prometheus-operator" (*terraform.NodePlannableResource) needs provider.helm
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.null serving null_resource.rio-custom-domain
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "null_resource.rio-custom-domain" (*terraform.NodePlannableResource) needs provider.null
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.timescaledb
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "helm_release.timescaledb" (*terraform.NodePlannableResource) needs provider.helm
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for module.cluster.provider.digitalocean serving module.cluster.digitalocean_kubernetes_cluster.dish
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "module.cluster.digitalocean_kubernetes_cluster.dish" (*terraform.NodePlannableResource) needs module.cluster.provider.digitalocean
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_secret.timescale-credentials
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "kubernetes_secret.timescale-credentials" (*terraform.NodePlannableResource) needs provider.kubernetes
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.sentry
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "kubernetes_namespace.sentry" (*terraform.NodePlannableResource) needs provider.kubernetes
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_secret.docker-config-json
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "kubernetes_secret.docker-config-json" (*terraform.NodePlannableResource) needs provider.kubernetes
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for module.cluster.provider.digitalocean serving module.cluster.digitalocean_kubernetes_node_pool.ci
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "module.cluster.digitalocean_kubernetes_node_pool.ci" (*terraform.NodePlannableResource) needs module.cluster.provider.digitalocean
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_ingress.docker-registry-ingress
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "kubernetes_ingress.docker-registry-ingress" (*terraform.NodePlannableResource) needs provider.kubernetes
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.monitoring
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "kubernetes_namespace.monitoring" (*terraform.NodePlannableResource) needs provider.kubernetes
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.postgres-ha
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "helm_release.postgres-ha" (*terraform.NodePlannableResource) needs provider.helm
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_persistent_volume_claim.image-proxy
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "kubernetes_persistent_volume_claim.image-proxy" (*terraform.NodePlannableResource) needs provider.kubernetes
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_config_map.buildkitd-config
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "kubernetes_config_map.buildkitd-config" (*terraform.NodePlannableResource) needs provider.kubernetes
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.nginx-ingress
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "helm_release.nginx-ingress" (*terraform.NodePlannableResource) needs provider.helm
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.local serving data.local_file.cert_manager_setup
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "data.local_file.cert_manager_setup" (*terraform.NodePlannableResource) needs provider.local
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.local serving data.local_file.rio-custom-domain
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "data.local_file.rio-custom-domain" (*terraform.NodePlannableResource) needs provider.local
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_secret.cloudflare-dns-api-token
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "kubernetes_secret.cloudflare-dns-api-token" (*terraform.NodePlannableResource) needs provider.kubernetes
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.redis
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "helm_release.redis" (*terraform.NodePlannableResource) needs provider.helm
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.metrics-server
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "kubernetes_namespace.metrics-server" (*terraform.NodePlannableResource) needs provider.kubernetes
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_ingress.rio-ingress
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "kubernetes_ingress.rio-ingress" (*terraform.NodePlannableResource) needs provider.kubernetes
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.local serving data.local_file.rio-yaml
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "data.local_file.rio-yaml" (*terraform.NodePlannableResource) needs provider.local
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.local serving data.local_file.rio-app-domains
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "data.local_file.rio-app-domains" (*terraform.NodePlannableResource) needs provider.local
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.helm serving data.helm_repository.sentry
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "data.helm_repository.sentry" (*terraform.NodePlannableResource) needs provider.helm
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_deployment.buildkitd
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "kubernetes_deployment.buildkitd" (*terraform.NodePlannableResource) needs provider.kubernetes
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.rio
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "kubernetes_namespace.rio" (*terraform.NodePlannableResource) needs provider.kubernetes
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.nginx-ingress
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "kubernetes_namespace.nginx-ingress" (*terraform.NodePlannableResource) needs provider.kubernetes
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.helm serving data.helm_repository.jetstack
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "data.helm_repository.jetstack" (*terraform.NodePlannableResource) needs provider.helm
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.sentry-k8s-erros
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "helm_release.sentry-k8s-erros" (*terraform.NodePlannableResource) needs provider.helm
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.null serving null_resource.cert-manager-setup
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "null_resource.cert-manager-setup" (*terraform.NodePlannableResource) needs provider.null
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.timescale
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "kubernetes_namespace.timescale" (*terraform.NodePlannableResource) needs provider.kubernetes
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.helm serving data.helm_repository.incubator
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "data.helm_repository.incubator" (*terraform.NodePlannableResource) needs provider.helm
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.metrics-server
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "helm_release.metrics-server" (*terraform.NodePlannableResource) needs provider.helm
2020/08/09 19:26:37 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_ingress.sentry-ingress
2020/08/09 19:26:37 [DEBUG] ProviderTransformer: "kubernetes_ingress.sentry-ingress" (*terraform.NodePlannableResource) needs provider.kubernetes
2020/08/09 19:26:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.docker-registry - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.prometheus-operator - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.redis - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry-k8s-erros - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.timescaledb - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_deployment.buildkitd - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.grafana-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.rio-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.sentry-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.cert-manager - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-config-json - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-registry-auth - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-certificates - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-credentials - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_service.buildkitd - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.provider.kubernetes - *terraform.NodeApplyableProvider
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  null_resource.cert-manager-setup - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  provider.digitalocean - *terraform.NodeApplyableProvider
  provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/08/09 19:26:37 [DEBUG] pruning unused provider.digitalocean
2020/08/09 19:26:37 [DEBUG] pruning unused module.cluster.provider.kubernetes
2020/08/09 19:26:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.docker-registry - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.prometheus-operator - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.redis - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry-k8s-erros - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.timescaledb - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_deployment.buildkitd - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.grafana-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.rio-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.sentry-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.cert-manager - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-config-json - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-registry-auth - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-certificates - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-credentials - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_service.buildkitd - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  null_resource.cert-manager-setup - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/08/09 19:26:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  data.helm_repository.bitnami - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.docker-registry - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.prometheus-operator - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.redis - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry-k8s-erros - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.timescaledb - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_deployment.buildkitd - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.grafana-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.rio-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.sentry-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.cert-manager - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-config-json - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-registry-auth - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-certificates - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-credentials - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_service.buildkitd - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  null_resource.cert-manager-setup - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.sentry
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.monitoring
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.metrics-server
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.helm
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.postgres-ha
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.buildkitd
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_ingress.sentry-ingress
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.redis
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.docker-config-json
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_persistent_volume_claim.image-proxy
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.postgres-ha
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.rio
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.cert-manager
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.timescale-certificates
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.prometheus-operator
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to module.cluster.digitalocean_kubernetes_node_pool.ci
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_ingress.grafana-ingress
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.nginx-ingress
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to null_resource.rio-setup
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to null_resource.rio-setup
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_config_map.buildkitd-config
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.docker-registry
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching provider config schema to module.cluster.provider.digitalocean
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.metrics-server
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_ingress.rio-ingress
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to null_resource.rio-custom-domain
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to null_resource.rio-custom-domain
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to module.cluster.digitalocean_kubernetes_node_pool.ancillary
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to module.cluster.digitalocean_kubernetes_node_pool.workers
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.timescaledb
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.docker
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to data.local_file.rio-yaml
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to data.local_file.rio-app-domains
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to data.helm_repository.stable
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.kubernetes
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.nginx-ingress
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.sentry
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to data.helm_repository.jetstack
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to module.cluster.digitalocean_kubernetes_cluster.dish
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to data.local_file.cert_manager_setup
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to data.helm_repository.sentry
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.sentry-k8s-erros
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.timescale-credentials
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_ingress.docker-registry-ingress
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.cert-manager
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to null_resource.create-timescaledb-setup
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to null_resource.create-timescaledb-setup
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to data.helm_repository.timescale
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to data.helm_repository.bitnami
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.buildkitd
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to null_resource.cert-manager-setup
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to null_resource.cert-manager-setup
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.docker-registry-auth
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.redis
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to data.local_file.rio-custom-domain
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.cloudflare-dns-api-token
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.local
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.timescale
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to null_resource.rio-app-domains
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to null_resource.rio-app-domains
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching resource schema to data.helm_repository.incubator
2020/08/09 19:26:37 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.null
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "helm_release.sentry-k8s-erros" references: [var.K8S_DSN]
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_secret.timescale-credentials" references: [kubernetes_namespace.timescale var.TIMESCALE_SU_PASS var.TIMESCALE_REPLICATION_PASS var.TIMESCALE_ADMIN_PASS]
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_ingress.docker-registry-ingress" references: [var.dish_domain var.dish_domain]
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "helm_release.cert-manager" references: [data.helm_repository.jetstack var.cert_manager_version]
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "null_resource.create-timescaledb-setup" references: [helm_release.timescaledb]
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "data.helm_repository.timescale" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "data.helm_repository.bitnami" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "module.cluster.output.cluster-id" references: [module.cluster.digitalocean_kubernetes_cluster.dish]
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "var.POSTGRES_PASSWORD" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_deployment.buildkitd" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "null_resource.cert-manager-setup" references: [helm_release.cert-manager data.local_file.cert_manager_setup data.local_file.cert_manager_setup]
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_secret.docker-registry-auth" references: [var.DOCKER_REGISTRY_HTTP_AUTH]
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_namespace.redis" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "data.local_file.rio-custom-domain" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_secret.cloudflare-dns-api-token" references: [helm_release.cert-manager var.CLOUDFLARE_DNS_API_TOKEN]
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "var.DOCKER_CONFIG_JSON" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "provisioner.local-exec" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "provider.local" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_namespace.timescale" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "var.K8S_DSN" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "var.SENTRY_PG_PASS" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "null_resource.rio-app-domains" references: [null_resource.rio-setup data.local_file.rio-app-domains data.local_file.rio-app-domains]
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "data.helm_repository.incubator" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "provider.null" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_namespace.sentry" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "var.GRAFANA_PASSWORD" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_namespace.monitoring" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "var.DO_SPACES_ID" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "provider.helm" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "helm_release.postgres-ha" references: [var.POSTGRES_PASSWORD var.POSTGRES_REPMGR_PASSWORD]
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_service.buildkitd" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_ingress.sentry-ingress" references: [var.dish_domain var.dish_domain]
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "helm_release.redis" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_secret.docker-config-json" references: [var.DOCKER_CONFIG_JSON]
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "helm_release.metrics-server" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_persistent_volume_claim.image-proxy" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_namespace.postgres-ha" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_namespace.rio" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "var.GMAIL_APP_PASSWORD" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "var.POSTGRES_REPMGR_PASSWORD" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_namespace.cert-manager" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_secret.timescale-certificates" references: [kubernetes_namespace.timescale]
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "helm_release.prometheus-operator" references: [var.GRAFANA_PASSWORD]
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "module.cluster.digitalocean_kubernetes_node_pool.ci" references: [module.cluster.digitalocean_kubernetes_cluster.dish]
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "var.TIMESCALE_REPLICATION_PASS" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "var.DO_DISH_KEY" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_ingress.grafana-ingress" references: [var.dish_domain var.dish_domain]
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_namespace.nginx-ingress" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "null_resource.rio-setup" references: [helm_release.cert-manager data.local_file.rio-yaml data.local_file.rio-yaml]
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_config_map.buildkitd-config" references: [var.DOCKER_CONFIG_JSON]
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "helm_release.docker-registry" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "var.SENTRY_USER_PASS" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "module.cluster.provider.digitalocean" references: [module.cluster.var.DO_DISH_KEY]
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_namespace.metrics-server" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_ingress.rio-ingress" references: [helm_release.cert-manager var.dish_domain var.dish_domain var.dish_domain var.dish_domain]
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "null_resource.rio-custom-domain" references: [null_resource.rio-setup data.local_file.rio-custom-domain data.local_file.rio-custom-domain]
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "module.cluster.digitalocean_kubernetes_node_pool.ancillary" references: [module.cluster.digitalocean_kubernetes_cluster.dish]
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "module.cluster.digitalocean_kubernetes_node_pool.workers" references: [module.cluster.digitalocean_kubernetes_cluster.dish]
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "var.TIMESCALE_ADMIN_PASS" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "var.DOCKER_REGISTRY_HTTP_AUTH" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "var.CLOUDFLARE_DNS_API_TOKEN" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "helm_release.timescaledb" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_namespace.docker" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "data.local_file.rio-yaml" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "data.local_file.rio-app-domains" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "data.helm_repository.stable" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "var.dish_domain" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "module.cluster.var.DO_DISH_KEY" references: [var.DO_DISH_KEY]
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "provider.kubernetes" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "helm_release.nginx-ingress" references: [data.helm_repository.stable]
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "helm_release.sentry" references: [var.SENTRY_PG_PASS var.SENTRY_USER_PASS var.GMAIL_APP_PASSWORD]
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "data.helm_repository.jetstack" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "module.cluster.digitalocean_kubernetes_cluster.dish" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "var.cert_manager_version" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "var.DO_SPACES_SECRET" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "data.local_file.cert_manager_setup" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "data.helm_repository.sentry" references: []
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "var.TIMESCALE_SU_PASS" references: []
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager - *terraform.NodePlannableResource
    data.helm_repository.jetstack - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.cert_manager_version - *terraform.NodeRootVariable
  helm_release.docker-registry - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress - *terraform.NodePlannableResource
    data.helm_repository.stable - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  helm_release.prometheus-operator - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  helm_release.redis - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
    var.SENTRY_PG_PASS - *terraform.NodeRootVariable
    var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  helm_release.sentry-k8s-erros - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.K8S_DSN - *terraform.NodeRootVariable
  helm_release.timescaledb - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  kubernetes_deployment.buildkitd - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.grafana-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.rio-ingress - *terraform.NodePlannableResource
    helm_release.cert-manager - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.sentry-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_namespace.cert-manager - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodePlannableResource
    helm_release.cert-manager - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  kubernetes_secret.docker-config-json - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  kubernetes_secret.docker-registry-auth - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  kubernetes_secret.timescale-certificates - *terraform.NodePlannableResource
    kubernetes_namespace.timescale - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-credentials - *terraform.NodePlannableResource
    kubernetes_namespace.timescale - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  kubernetes_service.buildkitd - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
  null_resource.cert-manager-setup - *terraform.NodePlannableResource
    data.local_file.cert_manager_setup - *terraform.NodePlannableResource
    helm_release.cert-manager - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup - *terraform.NodePlannableResource
    helm_release.timescaledb - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains - *terraform.NodePlannableResource
    data.local_file.rio-app-domains - *terraform.NodePlannableResource
    null_resource.rio-setup - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain - *terraform.NodePlannableResource
    data.local_file.rio-custom-domain - *terraform.NodePlannableResource
    null_resource.rio-setup - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup - *terraform.NodePlannableResource
    data.local_file.rio-yaml - *terraform.NodePlannableResource
    helm_release.cert-manager - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager - *terraform.NodePlannableResource
    data.helm_repository.jetstack - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.cert_manager_version - *terraform.NodeRootVariable
  helm_release.docker-registry - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress - *terraform.NodePlannableResource
    data.helm_repository.stable - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  helm_release.prometheus-operator - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  helm_release.redis - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
    var.SENTRY_PG_PASS - *terraform.NodeRootVariable
    var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  helm_release.sentry-k8s-erros - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.K8S_DSN - *terraform.NodeRootVariable
  helm_release.timescaledb - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  kubernetes_deployment.buildkitd - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.grafana-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.rio-ingress - *terraform.NodePlannableResource
    helm_release.cert-manager - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.sentry-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_namespace.cert-manager - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodePlannableResource
    helm_release.cert-manager - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  kubernetes_secret.docker-config-json - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  kubernetes_secret.docker-registry-auth - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  kubernetes_secret.timescale-certificates - *terraform.NodePlannableResource
    kubernetes_namespace.timescale - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-credentials - *terraform.NodePlannableResource
    kubernetes_namespace.timescale - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  kubernetes_service.buildkitd - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    data.helm_repository.bitnami - *terraform.NodePlannableResource
    data.helm_repository.incubator - *terraform.NodePlannableResource
    data.helm_repository.jetstack - *terraform.NodePlannableResource
    data.helm_repository.sentry - *terraform.NodePlannableResource
    data.helm_repository.stable - *terraform.NodePlannableResource
    data.helm_repository.timescale - *terraform.NodePlannableResource
    data.local_file.cert_manager_setup - *terraform.NodePlannableResource
    data.local_file.rio-app-domains - *terraform.NodePlannableResource
    data.local_file.rio-custom-domain - *terraform.NodePlannableResource
    data.local_file.rio-yaml - *terraform.NodePlannableResource
    helm_release.cert-manager - *terraform.NodePlannableResource
    helm_release.docker-registry - *terraform.NodePlannableResource
    helm_release.metrics-server - *terraform.NodePlannableResource
    helm_release.nginx-ingress - *terraform.NodePlannableResource
    helm_release.postgres-ha - *terraform.NodePlannableResource
    helm_release.prometheus-operator - *terraform.NodePlannableResource
    helm_release.redis - *terraform.NodePlannableResource
    helm_release.sentry - *terraform.NodePlannableResource
    helm_release.sentry-k8s-erros - *terraform.NodePlannableResource
    helm_release.timescaledb - *terraform.NodePlannableResource
    kubernetes_config_map.buildkitd-config - *terraform.NodePlannableResource
    kubernetes_deployment.buildkitd - *terraform.NodePlannableResource
    kubernetes_ingress.docker-registry-ingress - *terraform.NodePlannableResource
    kubernetes_ingress.grafana-ingress - *terraform.NodePlannableResource
    kubernetes_ingress.rio-ingress - *terraform.NodePlannableResource
    kubernetes_ingress.sentry-ingress - *terraform.NodePlannableResource
    kubernetes_namespace.cert-manager - *terraform.NodePlannableResource
    kubernetes_namespace.docker - *terraform.NodePlannableResource
    kubernetes_namespace.metrics-server - *terraform.NodePlannableResource
    kubernetes_namespace.monitoring - *terraform.NodePlannableResource
    kubernetes_namespace.nginx-ingress - *terraform.NodePlannableResource
    kubernetes_namespace.postgres-ha - *terraform.NodePlannableResource
    kubernetes_namespace.redis - *terraform.NodePlannableResource
    kubernetes_namespace.rio - *terraform.NodePlannableResource
    kubernetes_namespace.sentry - *terraform.NodePlannableResource
    kubernetes_namespace.timescale - *terraform.NodePlannableResource
    kubernetes_persistent_volume_claim.image-proxy - *terraform.NodePlannableResource
    kubernetes_secret.cloudflare-dns-api-token - *terraform.NodePlannableResource
    kubernetes_secret.docker-config-json - *terraform.NodePlannableResource
    kubernetes_secret.docker-registry-auth - *terraform.NodePlannableResource
    kubernetes_secret.timescale-certificates - *terraform.NodePlannableResource
    kubernetes_secret.timescale-credentials - *terraform.NodePlannableResource
    kubernetes_service.buildkitd - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodePlannableResource
    module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    null_resource.cert-manager-setup - *terraform.NodePlannableResource
    null_resource.create-timescaledb-setup - *terraform.NodePlannableResource
    null_resource.rio-app-domains - *terraform.NodePlannableResource
    null_resource.rio-custom-domain - *terraform.NodePlannableResource
    null_resource.rio-setup - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    provider.kubernetes - *terraform.NodeApplyableProvider
    provider.local - *terraform.NodeApplyableProvider
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
    var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
    var.DO_SPACES_ID - *terraform.NodeRootVariable
    var.DO_SPACES_SECRET - *terraform.NodeRootVariable
    var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
    var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
    var.K8S_DSN - *terraform.NodeRootVariable
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
    var.SENTRY_PG_PASS - *terraform.NodeRootVariable
    var.SENTRY_USER_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
    var.cert_manager_version - *terraform.NodeRootVariable
    var.dish_domain - *terraform.NodeRootVariable
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
  null_resource.cert-manager-setup - *terraform.NodePlannableResource
    data.local_file.cert_manager_setup - *terraform.NodePlannableResource
    helm_release.cert-manager - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup - *terraform.NodePlannableResource
    helm_release.timescaledb - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains - *terraform.NodePlannableResource
    data.local_file.rio-app-domains - *terraform.NodePlannableResource
    null_resource.rio-setup - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain - *terraform.NodePlannableResource
    data.local_file.rio-custom-domain - *terraform.NodePlannableResource
    null_resource.rio-setup - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup - *terraform.NodePlannableResource
    data.local_file.rio-yaml - *terraform.NodePlannableResource
    helm_release.cert-manager - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "data.local_file.rio-custom-domain" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.buildkitd" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "null_resource.cert-manager-setup" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "kubernetes_secret.docker-registry-auth" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "kubernetes_namespace.redis" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "kubernetes_secret.cloudflare-dns-api-token" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "kubernetes_namespace.timescale" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "null_resource.rio-app-domains" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "data.helm_repository.incubator" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "kubernetes_namespace.sentry" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "kubernetes_namespace.monitoring" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "kubernetes_secret.docker-config-json" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "helm_release.metrics-server" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "helm_release.postgres-ha" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "kubernetes_service.buildkitd" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "kubernetes_ingress.sentry-ingress" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "helm_release.redis" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "kubernetes_persistent_volume_claim.image-proxy" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "kubernetes_namespace.postgres-ha" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "kubernetes_namespace.rio" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "kubernetes_namespace.cert-manager" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "kubernetes_secret.timescale-certificates" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "helm_release.prometheus-operator" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "module.cluster.digitalocean_kubernetes_node_pool.ci" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "helm_release.docker-registry" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "kubernetes_ingress.grafana-ingress" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "kubernetes_namespace.nginx-ingress" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "null_resource.rio-setup" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "kubernetes_config_map.buildkitd-config" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "module.cluster.digitalocean_kubernetes_node_pool.workers" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "kubernetes_namespace.metrics-server" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "kubernetes_ingress.rio-ingress" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "null_resource.rio-custom-domain" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "module.cluster.digitalocean_kubernetes_node_pool.ancillary" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "data.helm_repository.stable" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "helm_release.timescaledb" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "kubernetes_namespace.docker" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "data.local_file.rio-yaml" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "data.local_file.rio-app-domains" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "helm_release.nginx-ingress" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "helm_release.sentry" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "data.helm_repository.jetstack" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "module.cluster.digitalocean_kubernetes_cluster.dish" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "data.local_file.cert_manager_setup" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "data.helm_repository.sentry" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "helm_release.sentry-k8s-erros" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "kubernetes_secret.timescale-credentials" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "kubernetes_ingress.docker-registry-ingress" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "helm_release.cert-manager" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "null_resource.create-timescaledb-setup" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "data.helm_repository.timescale" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] ForcedCBDTransformer: "data.helm_repository.bitnami" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager - *terraform.NodePlannableResource
    data.helm_repository.jetstack - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.cert_manager_version - *terraform.NodeRootVariable
  helm_release.docker-registry - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress - *terraform.NodePlannableResource
    data.helm_repository.stable - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  helm_release.prometheus-operator - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  helm_release.redis - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
    var.SENTRY_PG_PASS - *terraform.NodeRootVariable
    var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  helm_release.sentry-k8s-erros - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.K8S_DSN - *terraform.NodeRootVariable
  helm_release.timescaledb - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  kubernetes_deployment.buildkitd - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.grafana-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.rio-ingress - *terraform.NodePlannableResource
    helm_release.cert-manager - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.sentry-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_namespace.cert-manager - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodePlannableResource
    helm_release.cert-manager - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  kubernetes_secret.docker-config-json - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  kubernetes_secret.docker-registry-auth - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  kubernetes_secret.timescale-certificates - *terraform.NodePlannableResource
    kubernetes_namespace.timescale - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-credentials - *terraform.NodePlannableResource
    kubernetes_namespace.timescale - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  kubernetes_service.buildkitd - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    data.helm_repository.bitnami - *terraform.NodePlannableResource
    data.helm_repository.incubator - *terraform.NodePlannableResource
    data.helm_repository.jetstack - *terraform.NodePlannableResource
    data.helm_repository.sentry - *terraform.NodePlannableResource
    data.helm_repository.stable - *terraform.NodePlannableResource
    data.helm_repository.timescale - *terraform.NodePlannableResource
    data.local_file.cert_manager_setup - *terraform.NodePlannableResource
    data.local_file.rio-app-domains - *terraform.NodePlannableResource
    data.local_file.rio-custom-domain - *terraform.NodePlannableResource
    data.local_file.rio-yaml - *terraform.NodePlannableResource
    helm_release.cert-manager - *terraform.NodePlannableResource
    helm_release.docker-registry - *terraform.NodePlannableResource
    helm_release.metrics-server - *terraform.NodePlannableResource
    helm_release.nginx-ingress - *terraform.NodePlannableResource
    helm_release.postgres-ha - *terraform.NodePlannableResource
    helm_release.prometheus-operator - *terraform.NodePlannableResource
    helm_release.redis - *terraform.NodePlannableResource
    helm_release.sentry - *terraform.NodePlannableResource
    helm_release.sentry-k8s-erros - *terraform.NodePlannableResource
    helm_release.timescaledb - *terraform.NodePlannableResource
    kubernetes_config_map.buildkitd-config - *terraform.NodePlannableResource
    kubernetes_deployment.buildkitd - *terraform.NodePlannableResource
    kubernetes_ingress.docker-registry-ingress - *terraform.NodePlannableResource
    kubernetes_ingress.grafana-ingress - *terraform.NodePlannableResource
    kubernetes_ingress.rio-ingress - *terraform.NodePlannableResource
    kubernetes_ingress.sentry-ingress - *terraform.NodePlannableResource
    kubernetes_namespace.cert-manager - *terraform.NodePlannableResource
    kubernetes_namespace.docker - *terraform.NodePlannableResource
    kubernetes_namespace.metrics-server - *terraform.NodePlannableResource
    kubernetes_namespace.monitoring - *terraform.NodePlannableResource
    kubernetes_namespace.nginx-ingress - *terraform.NodePlannableResource
    kubernetes_namespace.postgres-ha - *terraform.NodePlannableResource
    kubernetes_namespace.redis - *terraform.NodePlannableResource
    kubernetes_namespace.rio - *terraform.NodePlannableResource
    kubernetes_namespace.sentry - *terraform.NodePlannableResource
    kubernetes_namespace.timescale - *terraform.NodePlannableResource
    kubernetes_persistent_volume_claim.image-proxy - *terraform.NodePlannableResource
    kubernetes_secret.cloudflare-dns-api-token - *terraform.NodePlannableResource
    kubernetes_secret.docker-config-json - *terraform.NodePlannableResource
    kubernetes_secret.docker-registry-auth - *terraform.NodePlannableResource
    kubernetes_secret.timescale-certificates - *terraform.NodePlannableResource
    kubernetes_secret.timescale-credentials - *terraform.NodePlannableResource
    kubernetes_service.buildkitd - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodePlannableResource
    module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    null_resource.cert-manager-setup - *terraform.NodePlannableResource
    null_resource.create-timescaledb-setup - *terraform.NodePlannableResource
    null_resource.rio-app-domains - *terraform.NodePlannableResource
    null_resource.rio-custom-domain - *terraform.NodePlannableResource
    null_resource.rio-setup - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    provider.kubernetes - *terraform.NodeApplyableProvider
    provider.local - *terraform.NodeApplyableProvider
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
    var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
    var.DO_SPACES_ID - *terraform.NodeRootVariable
    var.DO_SPACES_SECRET - *terraform.NodeRootVariable
    var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
    var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
    var.K8S_DSN - *terraform.NodeRootVariable
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
    var.SENTRY_PG_PASS - *terraform.NodeRootVariable
    var.SENTRY_USER_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
    var.cert_manager_version - *terraform.NodeRootVariable
    var.dish_domain - *terraform.NodeRootVariable
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  module.cluster.provider.digitalocean (close) - *terraform.graphNodeCloseProvider
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
  null_resource.cert-manager-setup - *terraform.NodePlannableResource
    data.local_file.cert_manager_setup - *terraform.NodePlannableResource
    helm_release.cert-manager - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup - *terraform.NodePlannableResource
    helm_release.timescaledb - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains - *terraform.NodePlannableResource
    data.local_file.rio-app-domains - *terraform.NodePlannableResource
    null_resource.rio-setup - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain - *terraform.NodePlannableResource
    data.local_file.rio-custom-domain - *terraform.NodePlannableResource
    null_resource.rio-setup - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup - *terraform.NodePlannableResource
    data.local_file.rio-yaml - *terraform.NodePlannableResource
    helm_release.cert-manager - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  provider.helm - *terraform.NodeApplyableProvider
  provider.helm (close) - *terraform.graphNodeCloseProvider
    data.helm_repository.bitnami - *terraform.NodePlannableResource
    data.helm_repository.incubator - *terraform.NodePlannableResource
    data.helm_repository.jetstack - *terraform.NodePlannableResource
    data.helm_repository.sentry - *terraform.NodePlannableResource
    data.helm_repository.stable - *terraform.NodePlannableResource
    data.helm_repository.timescale - *terraform.NodePlannableResource
    helm_release.cert-manager - *terraform.NodePlannableResource
    helm_release.docker-registry - *terraform.NodePlannableResource
    helm_release.metrics-server - *terraform.NodePlannableResource
    helm_release.nginx-ingress - *terraform.NodePlannableResource
    helm_release.postgres-ha - *terraform.NodePlannableResource
    helm_release.prometheus-operator - *terraform.NodePlannableResource
    helm_release.redis - *terraform.NodePlannableResource
    helm_release.sentry - *terraform.NodePlannableResource
    helm_release.sentry-k8s-erros - *terraform.NodePlannableResource
    helm_release.timescaledb - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.kubernetes (close) - *terraform.graphNodeCloseProvider
    kubernetes_config_map.buildkitd-config - *terraform.NodePlannableResource
    kubernetes_deployment.buildkitd - *terraform.NodePlannableResource
    kubernetes_ingress.docker-registry-ingress - *terraform.NodePlannableResource
    kubernetes_ingress.grafana-ingress - *terraform.NodePlannableResource
    kubernetes_ingress.rio-ingress - *terraform.NodePlannableResource
    kubernetes_ingress.sentry-ingress - *terraform.NodePlannableResource
    kubernetes_namespace.cert-manager - *terraform.NodePlannableResource
    kubernetes_namespace.docker - *terraform.NodePlannableResource
    kubernetes_namespace.metrics-server - *terraform.NodePlannableResource
    kubernetes_namespace.monitoring - *terraform.NodePlannableResource
    kubernetes_namespace.nginx-ingress - *terraform.NodePlannableResource
    kubernetes_namespace.postgres-ha - *terraform.NodePlannableResource
    kubernetes_namespace.redis - *terraform.NodePlannableResource
    kubernetes_namespace.rio - *terraform.NodePlannableResource
    kubernetes_namespace.sentry - *terraform.NodePlannableResource
    kubernetes_namespace.timescale - *terraform.NodePlannableResource
    kubernetes_persistent_volume_claim.image-proxy - *terraform.NodePlannableResource
    kubernetes_secret.cloudflare-dns-api-token - *terraform.NodePlannableResource
    kubernetes_secret.docker-config-json - *terraform.NodePlannableResource
    kubernetes_secret.docker-registry-auth - *terraform.NodePlannableResource
    kubernetes_secret.timescale-certificates - *terraform.NodePlannableResource
    kubernetes_secret.timescale-credentials - *terraform.NodePlannableResource
    kubernetes_service.buildkitd - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.local (close) - *terraform.graphNodeCloseProvider
    data.local_file.cert_manager_setup - *terraform.NodePlannableResource
    data.local_file.rio-app-domains - *terraform.NodePlannableResource
    data.local_file.rio-custom-domain - *terraform.NodePlannableResource
    data.local_file.rio-yaml - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  provider.null (close) - *terraform.graphNodeCloseProvider
    null_resource.cert-manager-setup - *terraform.NodePlannableResource
    null_resource.create-timescaledb-setup - *terraform.NodePlannableResource
    null_resource.rio-app-domains - *terraform.NodePlannableResource
    null_resource.rio-custom-domain - *terraform.NodePlannableResource
    null_resource.rio-setup - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager - *terraform.NodePlannableResource
    data.helm_repository.jetstack - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.cert_manager_version - *terraform.NodeRootVariable
  helm_release.docker-registry - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress - *terraform.NodePlannableResource
    data.helm_repository.stable - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  helm_release.prometheus-operator - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  helm_release.redis - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
    var.SENTRY_PG_PASS - *terraform.NodeRootVariable
    var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  helm_release.sentry-k8s-erros - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.K8S_DSN - *terraform.NodeRootVariable
  helm_release.timescaledb - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  kubernetes_deployment.buildkitd - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.grafana-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.rio-ingress - *terraform.NodePlannableResource
    helm_release.cert-manager - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.sentry-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_namespace.cert-manager - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodePlannableResource
    helm_release.cert-manager - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  kubernetes_secret.docker-config-json - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  kubernetes_secret.docker-registry-auth - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  kubernetes_secret.timescale-certificates - *terraform.NodePlannableResource
    kubernetes_namespace.timescale - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-credentials - *terraform.NodePlannableResource
    kubernetes_namespace.timescale - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  kubernetes_service.buildkitd - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    data.helm_repository.bitnami - *terraform.NodePlannableResource
    data.helm_repository.incubator - *terraform.NodePlannableResource
    data.helm_repository.jetstack - *terraform.NodePlannableResource
    data.helm_repository.sentry - *terraform.NodePlannableResource
    data.helm_repository.stable - *terraform.NodePlannableResource
    data.helm_repository.timescale - *terraform.NodePlannableResource
    data.local_file.cert_manager_setup - *terraform.NodePlannableResource
    data.local_file.rio-app-domains - *terraform.NodePlannableResource
    data.local_file.rio-custom-domain - *terraform.NodePlannableResource
    data.local_file.rio-yaml - *terraform.NodePlannableResource
    helm_release.cert-manager - *terraform.NodePlannableResource
    helm_release.docker-registry - *terraform.NodePlannableResource
    helm_release.metrics-server - *terraform.NodePlannableResource
    helm_release.nginx-ingress - *terraform.NodePlannableResource
    helm_release.postgres-ha - *terraform.NodePlannableResource
    helm_release.prometheus-operator - *terraform.NodePlannableResource
    helm_release.redis - *terraform.NodePlannableResource
    helm_release.sentry - *terraform.NodePlannableResource
    helm_release.sentry-k8s-erros - *terraform.NodePlannableResource
    helm_release.timescaledb - *terraform.NodePlannableResource
    kubernetes_config_map.buildkitd-config - *terraform.NodePlannableResource
    kubernetes_deployment.buildkitd - *terraform.NodePlannableResource
    kubernetes_ingress.docker-registry-ingress - *terraform.NodePlannableResource
    kubernetes_ingress.grafana-ingress - *terraform.NodePlannableResource
    kubernetes_ingress.rio-ingress - *terraform.NodePlannableResource
    kubernetes_ingress.sentry-ingress - *terraform.NodePlannableResource
    kubernetes_namespace.cert-manager - *terraform.NodePlannableResource
    kubernetes_namespace.docker - *terraform.NodePlannableResource
    kubernetes_namespace.metrics-server - *terraform.NodePlannableResource
    kubernetes_namespace.monitoring - *terraform.NodePlannableResource
    kubernetes_namespace.nginx-ingress - *terraform.NodePlannableResource
    kubernetes_namespace.postgres-ha - *terraform.NodePlannableResource
    kubernetes_namespace.redis - *terraform.NodePlannableResource
    kubernetes_namespace.rio - *terraform.NodePlannableResource
    kubernetes_namespace.sentry - *terraform.NodePlannableResource
    kubernetes_namespace.timescale - *terraform.NodePlannableResource
    kubernetes_persistent_volume_claim.image-proxy - *terraform.NodePlannableResource
    kubernetes_secret.cloudflare-dns-api-token - *terraform.NodePlannableResource
    kubernetes_secret.docker-config-json - *terraform.NodePlannableResource
    kubernetes_secret.docker-registry-auth - *terraform.NodePlannableResource
    kubernetes_secret.timescale-certificates - *terraform.NodePlannableResource
    kubernetes_secret.timescale-credentials - *terraform.NodePlannableResource
    kubernetes_service.buildkitd - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodePlannableResource
    module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    null_resource.cert-manager-setup - *terraform.NodePlannableResource
    null_resource.create-timescaledb-setup - *terraform.NodePlannableResource
    null_resource.rio-app-domains - *terraform.NodePlannableResource
    null_resource.rio-custom-domain - *terraform.NodePlannableResource
    null_resource.rio-setup - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    provider.kubernetes - *terraform.NodeApplyableProvider
    provider.local - *terraform.NodeApplyableProvider
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
    var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
    var.DO_SPACES_ID - *terraform.NodeRootVariable
    var.DO_SPACES_SECRET - *terraform.NodeRootVariable
    var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
    var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
    var.K8S_DSN - *terraform.NodeRootVariable
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
    var.SENTRY_PG_PASS - *terraform.NodeRootVariable
    var.SENTRY_USER_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
    var.cert_manager_version - *terraform.NodeRootVariable
    var.dish_domain - *terraform.NodeRootVariable
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  module.cluster.provider.digitalocean (close) - *terraform.graphNodeCloseProvider
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
  null_resource.cert-manager-setup - *terraform.NodePlannableResource
    data.local_file.cert_manager_setup - *terraform.NodePlannableResource
    helm_release.cert-manager - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup - *terraform.NodePlannableResource
    helm_release.timescaledb - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains - *terraform.NodePlannableResource
    data.local_file.rio-app-domains - *terraform.NodePlannableResource
    null_resource.rio-setup - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain - *terraform.NodePlannableResource
    data.local_file.rio-custom-domain - *terraform.NodePlannableResource
    null_resource.rio-setup - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup - *terraform.NodePlannableResource
    data.local_file.rio-yaml - *terraform.NodePlannableResource
    helm_release.cert-manager - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  provider.helm - *terraform.NodeApplyableProvider
  provider.helm (close) - *terraform.graphNodeCloseProvider
    data.helm_repository.bitnami - *terraform.NodePlannableResource
    data.helm_repository.incubator - *terraform.NodePlannableResource
    data.helm_repository.jetstack - *terraform.NodePlannableResource
    data.helm_repository.sentry - *terraform.NodePlannableResource
    data.helm_repository.stable - *terraform.NodePlannableResource
    data.helm_repository.timescale - *terraform.NodePlannableResource
    helm_release.cert-manager - *terraform.NodePlannableResource
    helm_release.docker-registry - *terraform.NodePlannableResource
    helm_release.metrics-server - *terraform.NodePlannableResource
    helm_release.nginx-ingress - *terraform.NodePlannableResource
    helm_release.postgres-ha - *terraform.NodePlannableResource
    helm_release.prometheus-operator - *terraform.NodePlannableResource
    helm_release.redis - *terraform.NodePlannableResource
    helm_release.sentry - *terraform.NodePlannableResource
    helm_release.sentry-k8s-erros - *terraform.NodePlannableResource
    helm_release.timescaledb - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.kubernetes (close) - *terraform.graphNodeCloseProvider
    kubernetes_config_map.buildkitd-config - *terraform.NodePlannableResource
    kubernetes_deployment.buildkitd - *terraform.NodePlannableResource
    kubernetes_ingress.docker-registry-ingress - *terraform.NodePlannableResource
    kubernetes_ingress.grafana-ingress - *terraform.NodePlannableResource
    kubernetes_ingress.rio-ingress - *terraform.NodePlannableResource
    kubernetes_ingress.sentry-ingress - *terraform.NodePlannableResource
    kubernetes_namespace.cert-manager - *terraform.NodePlannableResource
    kubernetes_namespace.docker - *terraform.NodePlannableResource
    kubernetes_namespace.metrics-server - *terraform.NodePlannableResource
    kubernetes_namespace.monitoring - *terraform.NodePlannableResource
    kubernetes_namespace.nginx-ingress - *terraform.NodePlannableResource
    kubernetes_namespace.postgres-ha - *terraform.NodePlannableResource
    kubernetes_namespace.redis - *terraform.NodePlannableResource
    kubernetes_namespace.rio - *terraform.NodePlannableResource
    kubernetes_namespace.sentry - *terraform.NodePlannableResource
    kubernetes_namespace.timescale - *terraform.NodePlannableResource
    kubernetes_persistent_volume_claim.image-proxy - *terraform.NodePlannableResource
    kubernetes_secret.cloudflare-dns-api-token - *terraform.NodePlannableResource
    kubernetes_secret.docker-config-json - *terraform.NodePlannableResource
    kubernetes_secret.docker-registry-auth - *terraform.NodePlannableResource
    kubernetes_secret.timescale-certificates - *terraform.NodePlannableResource
    kubernetes_secret.timescale-credentials - *terraform.NodePlannableResource
    kubernetes_service.buildkitd - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.local (close) - *terraform.graphNodeCloseProvider
    data.local_file.cert_manager_setup - *terraform.NodePlannableResource
    data.local_file.rio-app-domains - *terraform.NodePlannableResource
    data.local_file.rio-custom-domain - *terraform.NodePlannableResource
    data.local_file.rio-yaml - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  provider.null (close) - *terraform.graphNodeCloseProvider
    null_resource.cert-manager-setup - *terraform.NodePlannableResource
    null_resource.create-timescaledb-setup - *terraform.NodePlannableResource
    null_resource.rio-app-domains - *terraform.NodePlannableResource
    null_resource.rio-custom-domain - *terraform.NodePlannableResource
    null_resource.rio-setup - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    null_resource.cert-manager-setup - *terraform.NodePlannableResource
    null_resource.create-timescaledb-setup - *terraform.NodePlannableResource
    null_resource.rio-app-domains - *terraform.NodePlannableResource
    null_resource.rio-custom-domain - *terraform.NodePlannableResource
    null_resource.rio-setup - *terraform.NodePlannableResource
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager - *terraform.NodePlannableResource
    data.helm_repository.jetstack - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.cert_manager_version - *terraform.NodeRootVariable
  helm_release.docker-registry - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress - *terraform.NodePlannableResource
    data.helm_repository.stable - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  helm_release.prometheus-operator - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  helm_release.redis - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
    var.SENTRY_PG_PASS - *terraform.NodeRootVariable
    var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  helm_release.sentry-k8s-erros - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.K8S_DSN - *terraform.NodeRootVariable
  helm_release.timescaledb - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  kubernetes_deployment.buildkitd - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.grafana-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.rio-ingress - *terraform.NodePlannableResource
    helm_release.cert-manager - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.sentry-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_namespace.cert-manager - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodePlannableResource
    helm_release.cert-manager - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  kubernetes_secret.docker-config-json - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  kubernetes_secret.docker-registry-auth - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  kubernetes_secret.timescale-certificates - *terraform.NodePlannableResource
    kubernetes_namespace.timescale - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-credentials - *terraform.NodePlannableResource
    kubernetes_namespace.timescale - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  kubernetes_service.buildkitd - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    data.helm_repository.bitnami - *terraform.NodePlannableResource
    data.helm_repository.incubator - *terraform.NodePlannableResource
    data.helm_repository.jetstack - *terraform.NodePlannableResource
    data.helm_repository.sentry - *terraform.NodePlannableResource
    data.helm_repository.stable - *terraform.NodePlannableResource
    data.helm_repository.timescale - *terraform.NodePlannableResource
    data.local_file.cert_manager_setup - *terraform.NodePlannableResource
    data.local_file.rio-app-domains - *terraform.NodePlannableResource
    data.local_file.rio-custom-domain - *terraform.NodePlannableResource
    data.local_file.rio-yaml - *terraform.NodePlannableResource
    helm_release.cert-manager - *terraform.NodePlannableResource
    helm_release.docker-registry - *terraform.NodePlannableResource
    helm_release.metrics-server - *terraform.NodePlannableResource
    helm_release.nginx-ingress - *terraform.NodePlannableResource
    helm_release.postgres-ha - *terraform.NodePlannableResource
    helm_release.prometheus-operator - *terraform.NodePlannableResource
    helm_release.redis - *terraform.NodePlannableResource
    helm_release.sentry - *terraform.NodePlannableResource
    helm_release.sentry-k8s-erros - *terraform.NodePlannableResource
    helm_release.timescaledb - *terraform.NodePlannableResource
    kubernetes_config_map.buildkitd-config - *terraform.NodePlannableResource
    kubernetes_deployment.buildkitd - *terraform.NodePlannableResource
    kubernetes_ingress.docker-registry-ingress - *terraform.NodePlannableResource
    kubernetes_ingress.grafana-ingress - *terraform.NodePlannableResource
    kubernetes_ingress.rio-ingress - *terraform.NodePlannableResource
    kubernetes_ingress.sentry-ingress - *terraform.NodePlannableResource
    kubernetes_namespace.cert-manager - *terraform.NodePlannableResource
    kubernetes_namespace.docker - *terraform.NodePlannableResource
    kubernetes_namespace.metrics-server - *terraform.NodePlannableResource
    kubernetes_namespace.monitoring - *terraform.NodePlannableResource
    kubernetes_namespace.nginx-ingress - *terraform.NodePlannableResource
    kubernetes_namespace.postgres-ha - *terraform.NodePlannableResource
    kubernetes_namespace.redis - *terraform.NodePlannableResource
    kubernetes_namespace.rio - *terraform.NodePlannableResource
    kubernetes_namespace.sentry - *terraform.NodePlannableResource
    kubernetes_namespace.timescale - *terraform.NodePlannableResource
    kubernetes_persistent_volume_claim.image-proxy - *terraform.NodePlannableResource
    kubernetes_secret.cloudflare-dns-api-token - *terraform.NodePlannableResource
    kubernetes_secret.docker-config-json - *terraform.NodePlannableResource
    kubernetes_secret.docker-registry-auth - *terraform.NodePlannableResource
    kubernetes_secret.timescale-certificates - *terraform.NodePlannableResource
    kubernetes_secret.timescale-credentials - *terraform.NodePlannableResource
    kubernetes_service.buildkitd - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodePlannableResource
    module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    null_resource.cert-manager-setup - *terraform.NodePlannableResource
    null_resource.create-timescaledb-setup - *terraform.NodePlannableResource
    null_resource.rio-app-domains - *terraform.NodePlannableResource
    null_resource.rio-custom-domain - *terraform.NodePlannableResource
    null_resource.rio-setup - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    provider.kubernetes - *terraform.NodeApplyableProvider
    provider.local - *terraform.NodeApplyableProvider
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
    var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
    var.DO_SPACES_ID - *terraform.NodeRootVariable
    var.DO_SPACES_SECRET - *terraform.NodeRootVariable
    var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
    var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
    var.K8S_DSN - *terraform.NodeRootVariable
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
    var.SENTRY_PG_PASS - *terraform.NodeRootVariable
    var.SENTRY_USER_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
    var.cert_manager_version - *terraform.NodeRootVariable
    var.dish_domain - *terraform.NodeRootVariable
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  module.cluster.provider.digitalocean (close) - *terraform.graphNodeCloseProvider
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
  null_resource.cert-manager-setup - *terraform.NodePlannableResource
    data.local_file.cert_manager_setup - *terraform.NodePlannableResource
    helm_release.cert-manager - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup - *terraform.NodePlannableResource
    helm_release.timescaledb - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains - *terraform.NodePlannableResource
    data.local_file.rio-app-domains - *terraform.NodePlannableResource
    null_resource.rio-setup - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain - *terraform.NodePlannableResource
    data.local_file.rio-custom-domain - *terraform.NodePlannableResource
    null_resource.rio-setup - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup - *terraform.NodePlannableResource
    data.local_file.rio-yaml - *terraform.NodePlannableResource
    helm_release.cert-manager - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  provider.helm - *terraform.NodeApplyableProvider
  provider.helm (close) - *terraform.graphNodeCloseProvider
    data.helm_repository.bitnami - *terraform.NodePlannableResource
    data.helm_repository.incubator - *terraform.NodePlannableResource
    data.helm_repository.jetstack - *terraform.NodePlannableResource
    data.helm_repository.sentry - *terraform.NodePlannableResource
    data.helm_repository.stable - *terraform.NodePlannableResource
    data.helm_repository.timescale - *terraform.NodePlannableResource
    helm_release.cert-manager - *terraform.NodePlannableResource
    helm_release.docker-registry - *terraform.NodePlannableResource
    helm_release.metrics-server - *terraform.NodePlannableResource
    helm_release.nginx-ingress - *terraform.NodePlannableResource
    helm_release.postgres-ha - *terraform.NodePlannableResource
    helm_release.prometheus-operator - *terraform.NodePlannableResource
    helm_release.redis - *terraform.NodePlannableResource
    helm_release.sentry - *terraform.NodePlannableResource
    helm_release.sentry-k8s-erros - *terraform.NodePlannableResource
    helm_release.timescaledb - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.kubernetes (close) - *terraform.graphNodeCloseProvider
    kubernetes_config_map.buildkitd-config - *terraform.NodePlannableResource
    kubernetes_deployment.buildkitd - *terraform.NodePlannableResource
    kubernetes_ingress.docker-registry-ingress - *terraform.NodePlannableResource
    kubernetes_ingress.grafana-ingress - *terraform.NodePlannableResource
    kubernetes_ingress.rio-ingress - *terraform.NodePlannableResource
    kubernetes_ingress.sentry-ingress - *terraform.NodePlannableResource
    kubernetes_namespace.cert-manager - *terraform.NodePlannableResource
    kubernetes_namespace.docker - *terraform.NodePlannableResource
    kubernetes_namespace.metrics-server - *terraform.NodePlannableResource
    kubernetes_namespace.monitoring - *terraform.NodePlannableResource
    kubernetes_namespace.nginx-ingress - *terraform.NodePlannableResource
    kubernetes_namespace.postgres-ha - *terraform.NodePlannableResource
    kubernetes_namespace.redis - *terraform.NodePlannableResource
    kubernetes_namespace.rio - *terraform.NodePlannableResource
    kubernetes_namespace.sentry - *terraform.NodePlannableResource
    kubernetes_namespace.timescale - *terraform.NodePlannableResource
    kubernetes_persistent_volume_claim.image-proxy - *terraform.NodePlannableResource
    kubernetes_secret.cloudflare-dns-api-token - *terraform.NodePlannableResource
    kubernetes_secret.docker-config-json - *terraform.NodePlannableResource
    kubernetes_secret.docker-registry-auth - *terraform.NodePlannableResource
    kubernetes_secret.timescale-certificates - *terraform.NodePlannableResource
    kubernetes_secret.timescale-credentials - *terraform.NodePlannableResource
    kubernetes_service.buildkitd - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.local (close) - *terraform.graphNodeCloseProvider
    data.local_file.cert_manager_setup - *terraform.NodePlannableResource
    data.local_file.rio-app-domains - *terraform.NodePlannableResource
    data.local_file.rio-custom-domain - *terraform.NodePlannableResource
    data.local_file.rio-yaml - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  provider.null (close) - *terraform.graphNodeCloseProvider
    null_resource.cert-manager-setup - *terraform.NodePlannableResource
    null_resource.create-timescaledb-setup - *terraform.NodePlannableResource
    null_resource.rio-app-domains - *terraform.NodePlannableResource
    null_resource.rio-custom-domain - *terraform.NodePlannableResource
    null_resource.rio-setup - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    null_resource.cert-manager-setup - *terraform.NodePlannableResource
    null_resource.create-timescaledb-setup - *terraform.NodePlannableResource
    null_resource.rio-app-domains - *terraform.NodePlannableResource
    null_resource.rio-custom-domain - *terraform.NodePlannableResource
    null_resource.rio-setup - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    module.cluster.provider.digitalocean (close) - *terraform.graphNodeCloseProvider
    provider.helm (close) - *terraform.graphNodeCloseProvider
    provider.kubernetes (close) - *terraform.graphNodeCloseProvider
    provider.local (close) - *terraform.graphNodeCloseProvider
    provider.null (close) - *terraform.graphNodeCloseProvider
    provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml - *terraform.NodePlannableResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager - *terraform.NodePlannableResource
    data.helm_repository.jetstack - *terraform.NodePlannableResource
    var.cert_manager_version - *terraform.NodeRootVariable
  helm_release.docker-registry - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress - *terraform.NodePlannableResource
    data.helm_repository.stable - *terraform.NodePlannableResource
  helm_release.postgres-ha - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  helm_release.prometheus-operator - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  helm_release.redis - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
    var.SENTRY_PG_PASS - *terraform.NodeRootVariable
    var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  helm_release.sentry-k8s-erros - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.K8S_DSN - *terraform.NodeRootVariable
  helm_release.timescaledb - *terraform.NodePlannableResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  kubernetes_deployment.buildkitd - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.grafana-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.rio-ingress - *terraform.NodePlannableResource
    helm_release.cert-manager - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_ingress.sentry-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.dish_domain - *terraform.NodeRootVariable
  kubernetes_namespace.cert-manager - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodePlannableResource
    helm_release.cert-manager - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  kubernetes_secret.docker-config-json - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  kubernetes_secret.docker-registry-auth - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
    var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  kubernetes_secret.timescale-certificates - *terraform.NodePlannableResource
    kubernetes_namespace.timescale - *terraform.NodePlannableResource
  kubernetes_secret.timescale-credentials - *terraform.NodePlannableResource
    kubernetes_namespace.timescale - *terraform.NodePlannableResource
    var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  kubernetes_service.buildkitd - *terraform.NodePlannableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    data.helm_repository.bitnami - *terraform.NodePlannableResource
    data.helm_repository.incubator - *terraform.NodePlannableResource
    data.helm_repository.sentry - *terraform.NodePlannableResource
    data.helm_repository.timescale - *terraform.NodePlannableResource
    helm_release.docker-registry - *terraform.NodePlannableResource
    helm_release.metrics-server - *terraform.NodePlannableResource
    helm_release.nginx-ingress - *terraform.NodePlannableResource
    helm_release.postgres-ha - *terraform.NodePlannableResource
    helm_release.prometheus-operator - *terraform.NodePlannableResource
    helm_release.redis - *terraform.NodePlannableResource
    helm_release.sentry - *terraform.NodePlannableResource
    helm_release.sentry-k8s-erros - *terraform.NodePlannableResource
    kubernetes_config_map.buildkitd-config - *terraform.NodePlannableResource
    kubernetes_deployment.buildkitd - *terraform.NodePlannableResource
    kubernetes_ingress.docker-registry-ingress - *terraform.NodePlannableResource
    kubernetes_ingress.grafana-ingress - *terraform.NodePlannableResource
    kubernetes_ingress.rio-ingress - *terraform.NodePlannableResource
    kubernetes_ingress.sentry-ingress - *terraform.NodePlannableResource
    kubernetes_namespace.cert-manager - *terraform.NodePlannableResource
    kubernetes_namespace.docker - *terraform.NodePlannableResource
    kubernetes_namespace.metrics-server - *terraform.NodePlannableResource
    kubernetes_namespace.monitoring - *terraform.NodePlannableResource
    kubernetes_namespace.nginx-ingress - *terraform.NodePlannableResource
    kubernetes_namespace.postgres-ha - *terraform.NodePlannableResource
    kubernetes_namespace.redis - *terraform.NodePlannableResource
    kubernetes_namespace.rio - *terraform.NodePlannableResource
    kubernetes_namespace.sentry - *terraform.NodePlannableResource
    kubernetes_persistent_volume_claim.image-proxy - *terraform.NodePlannableResource
    kubernetes_secret.cloudflare-dns-api-token - *terraform.NodePlannableResource
    kubernetes_secret.docker-config-json - *terraform.NodePlannableResource
    kubernetes_secret.docker-registry-auth - *terraform.NodePlannableResource
    kubernetes_secret.timescale-certificates - *terraform.NodePlannableResource
    kubernetes_secret.timescale-credentials - *terraform.NodePlannableResource
    kubernetes_service.buildkitd - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodePlannableResource
    module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
    null_resource.cert-manager-setup - *terraform.NodePlannableResource
    null_resource.create-timescaledb-setup - *terraform.NodePlannableResource
    null_resource.rio-app-domains - *terraform.NodePlannableResource
    null_resource.rio-custom-domain - *terraform.NodePlannableResource
    var.DO_SPACES_ID - *terraform.NodeRootVariable
    var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
    module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResource
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  module.cluster.provider.digitalocean (close) - *terraform.graphNodeCloseProvider
    module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodePlannableResource
    module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodePlannableResource
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
  null_resource.cert-manager-setup - *terraform.NodePlannableResource
    data.local_file.cert_manager_setup - *terraform.NodePlannableResource
    helm_release.cert-manager - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup - *terraform.NodePlannableResource
    helm_release.timescaledb - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains - *terraform.NodePlannableResource
    data.local_file.rio-app-domains - *terraform.NodePlannableResource
    null_resource.rio-setup - *terraform.NodePlannableResource
  null_resource.rio-custom-domain - *terraform.NodePlannableResource
    data.local_file.rio-custom-domain - *terraform.NodePlannableResource
    null_resource.rio-setup - *terraform.NodePlannableResource
  null_resource.rio-setup - *terraform.NodePlannableResource
    data.local_file.rio-yaml - *terraform.NodePlannableResource
    helm_release.cert-manager - *terraform.NodePlannableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  provider.helm - *terraform.NodeApplyableProvider
  provider.helm (close) - *terraform.graphNodeCloseProvider
    data.helm_repository.bitnami - *terraform.NodePlannableResource
    data.helm_repository.incubator - *terraform.NodePlannableResource
    data.helm_repository.sentry - *terraform.NodePlannableResource
    data.helm_repository.timescale - *terraform.NodePlannableResource
    helm_release.cert-manager - *terraform.NodePlannableResource
    helm_release.docker-registry - *terraform.NodePlannableResource
    helm_release.metrics-server - *terraform.NodePlannableResource
    helm_release.nginx-ingress - *terraform.NodePlannableResource
    helm_release.postgres-ha - *terraform.NodePlannableResource
    helm_release.prometheus-operator - *terraform.NodePlannableResource
    helm_release.redis - *terraform.NodePlannableResource
    helm_release.sentry - *terraform.NodePlannableResource
    helm_release.sentry-k8s-erros - *terraform.NodePlannableResource
    helm_release.timescaledb - *terraform.NodePlannableResource
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.kubernetes (close) - *terraform.graphNodeCloseProvider
    kubernetes_config_map.buildkitd-config - *terraform.NodePlannableResource
    kubernetes_deployment.buildkitd - *terraform.NodePlannableResource
    kubernetes_ingress.docker-registry-ingress - *terraform.NodePlannableResource
    kubernetes_ingress.grafana-ingress - *terraform.NodePlannableResource
    kubernetes_ingress.rio-ingress - *terraform.NodePlannableResource
    kubernetes_ingress.sentry-ingress - *terraform.NodePlannableResource
    kubernetes_namespace.cert-manager - *terraform.NodePlannableResource
    kubernetes_namespace.docker - *terraform.NodePlannableResource
    kubernetes_namespace.metrics-server - *terraform.NodePlannableResource
    kubernetes_namespace.monitoring - *terraform.NodePlannableResource
    kubernetes_namespace.nginx-ingress - *terraform.NodePlannableResource
    kubernetes_namespace.postgres-ha - *terraform.NodePlannableResource
    kubernetes_namespace.redis - *terraform.NodePlannableResource
    kubernetes_namespace.rio - *terraform.NodePlannableResource
    kubernetes_namespace.sentry - *terraform.NodePlannableResource
    kubernetes_persistent_volume_claim.image-proxy - *terraform.NodePlannableResource
    kubernetes_secret.cloudflare-dns-api-token - *terraform.NodePlannableResource
    kubernetes_secret.docker-config-json - *terraform.NodePlannableResource
    kubernetes_secret.docker-registry-auth - *terraform.NodePlannableResource
    kubernetes_secret.timescale-certificates - *terraform.NodePlannableResource
    kubernetes_secret.timescale-credentials - *terraform.NodePlannableResource
    kubernetes_service.buildkitd - *terraform.NodePlannableResource
  provider.local - *terraform.NodeApplyableProvider
  provider.local (close) - *terraform.graphNodeCloseProvider
    data.local_file.cert_manager_setup - *terraform.NodePlannableResource
    data.local_file.rio-app-domains - *terraform.NodePlannableResource
    data.local_file.rio-custom-domain - *terraform.NodePlannableResource
    data.local_file.rio-yaml - *terraform.NodePlannableResource
  provider.null - *terraform.NodeApplyableProvider
  provider.null (close) - *terraform.graphNodeCloseProvider
    null_resource.cert-manager-setup - *terraform.NodePlannableResource
    null_resource.create-timescaledb-setup - *terraform.NodePlannableResource
    null_resource.rio-app-domains - *terraform.NodePlannableResource
    null_resource.rio-custom-domain - *terraform.NodePlannableResource
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    null_resource.cert-manager-setup - *terraform.NodePlannableResource
    null_resource.create-timescaledb-setup - *terraform.NodePlannableResource
    null_resource.rio-app-domains - *terraform.NodePlannableResource
    null_resource.rio-custom-domain - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    module.cluster.provider.digitalocean (close) - *terraform.graphNodeCloseProvider
    provider.helm (close) - *terraform.graphNodeCloseProvider
    provider.kubernetes (close) - *terraform.graphNodeCloseProvider
    provider.local (close) - *terraform.graphNodeCloseProvider
    provider.null (close) - *terraform.graphNodeCloseProvider
    provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:37 [DEBUG] Starting graph walk: walkPlan
2020/08/09 19:26:37 [TRACE] dag/walk: updating graph
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_ingress.sentry-ingress"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "var.CLOUDFLARE_DNS_API_TOKEN"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "provider.kubernetes"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "data.helm_repository.sentry"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_ingress.docker-registry-ingress"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "helm_release.cert-manager"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.redis"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "var.GRAFANA_PASSWORD"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "var.GMAIL_APP_PASSWORD"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "provider.kubernetes (close)"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "helm_release.redis"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "data.helm_repository.bitnami"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_service.buildkitd"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_persistent_volume_claim.image-proxy"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.postgres-ha"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "provider.null (close)"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "provider.helm (close)"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "root"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "var.DOCKER_CONFIG_JSON"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "helm_release.postgres-ha"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "helm_release.metrics-server"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "provider.null"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "var.TIMESCALE_REPLICATION_PASS"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.nginx-ingress"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "null_resource.rio-setup"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "helm_release.docker-registry"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "var.dish_domain"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "data.helm_repository.jetstack"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "module.cluster.provider.digitalocean (close)"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.rio"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_ingress.rio-ingress"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "var.TIMESCALE_ADMIN_PASS"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "helm_release.timescaledb"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "helm_release.sentry-k8s-erros"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "module.cluster.output.cluster-id"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "null_resource.cert-manager-setup"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.metrics-server"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_secret.timescale-credentials"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.monitoring"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "provisioner.local-exec (close)"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "module.cluster.digitalocean_kubernetes_node_pool.ancillary"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "var.DOCKER_REGISTRY_HTTP_AUTH"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "data.local_file.rio-app-domains"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "var.SENTRY_PG_PASS"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "null_resource.rio-app-domains"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "var.DO_SPACES_ID"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "provider.helm"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "helm_release.prometheus-operator"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_config_map.buildkitd-config"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "helm_release.nginx-ingress"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "var.POSTGRES_PASSWORD"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "data.local_file.rio-custom-domain"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_secret.cloudflare-dns-api-token"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.sentry"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "module.cluster.digitalocean_kubernetes_node_pool.workers"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "data.helm_repository.stable"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "helm_release.sentry"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "var.cert_manager_version"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "provider.local"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "module.cluster.digitalocean_kubernetes_node_pool.ci"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "var.DO_DISH_KEY"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "var.TIMESCALE_SU_PASS"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.timescale"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "null_resource.rio-custom-domain"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "provider.local (close)"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "null_resource.create-timescaledb-setup"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_secret.docker-config-json"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "var.POSTGRES_REPMGR_PASSWORD"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "var.SENTRY_USER_PASS"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "var.DO_SPACES_SECRET"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_deployment.buildkitd"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "provisioner.local-exec"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_ingress.grafana-ingress"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.docker"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "module.cluster.var.DO_DISH_KEY"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "module.cluster.digitalocean_kubernetes_cluster.dish"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "data.helm_repository.timescale"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_secret.docker-registry-auth"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.cert-manager"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "var.K8S_DSN"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_secret.timescale-certificates"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "module.cluster.provider.digitalocean"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "data.local_file.rio-yaml"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "data.local_file.cert_manager_setup"
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "data.helm_repository.incubator"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.redis"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_deployment.buildkitd" waiting on "provider.kubernetes"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.cluster.output.cluster-id"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "data.helm_repository.timescale"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "data.local_file.rio-yaml" waiting on "provider.local"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.local (close)" waiting on "data.local_file.cert_manager_setup"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "helm_release.metrics-server" waiting on "provider.helm"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "root" waiting on "provider.kubernetes (close)"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "module.cluster.digitalocean_kubernetes_node_pool.workers" waiting on "module.cluster.digitalocean_kubernetes_cluster.dish"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.cluster.digitalocean_kubernetes_node_pool.workers"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "data.helm_repository.jetstack" waiting on "provider.helm"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "helm_release.metrics-server"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.DO_SPACES_ID"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "helm_release.sentry" waiting on "var.GMAIL_APP_PASSWORD"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_secret.cloudflare-dns-api-token"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_secret.docker-config-json" waiting on "provider.kubernetes"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_ingress.sentry-ingress" waiting on "var.dish_domain"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_namespace.nginx-ingress" waiting on "provider.kubernetes"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.sentry"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "data.helm_repository.sentry" waiting on "provider.helm"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_secret.timescale-credentials" waiting on "kubernetes_namespace.timescale"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "module.cluster.digitalocean_kubernetes_cluster.dish" waiting on "module.cluster.provider.digitalocean"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "null_resource.cert-manager-setup" waiting on "provisioner.local-exec"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_secret.cloudflare-dns-api-token"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "data.helm_repository.sentry"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_namespace.docker"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_secret.timescale-certificates" waiting on "kubernetes_namespace.timescale"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "module.cluster.provider.digitalocean" waiting on "module.cluster.var.DO_DISH_KEY"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "data.helm_repository.incubator"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.cert-manager"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_persistent_volume_claim.image-proxy" waiting on "provider.kubernetes"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_namespace.redis" waiting on "provider.kubernetes"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "helm_release.postgres-ha"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_namespace.cert-manager"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "data.helm_repository.timescale"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_ingress.grafana-ingress" waiting on "provider.kubernetes"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.metrics-server"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_secret.docker-registry-auth" waiting on "provider.kubernetes"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_secret.cloudflare-dns-api-token" waiting on "var.CLOUDFLARE_DNS_API_TOKEN"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_ingress.rio-ingress"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "data.local_file.cert_manager_setup" waiting on "provider.local"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.null (close)" waiting on "null_resource.create-timescaledb-setup"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provisioner.local-exec (close)" waiting on "null_resource.cert-manager-setup"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "helm_release.nginx-ingress" waiting on "data.helm_repository.stable"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_secret.timescale-credentials" waiting on "var.TIMESCALE_SU_PASS"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "helm_release.redis" waiting on "provider.helm"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.monitoring"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_namespace.monitoring"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_namespace.nginx-ingress"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provisioner.local-exec (close)" waiting on "null_resource.create-timescaledb-setup"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.sentry-k8s-erros"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "helm_release.sentry" waiting on "provider.helm"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "null_resource.rio-app-domains"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.cluster.digitalocean_kubernetes_node_pool.ancillary"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "root" waiting on "provider.null (close)"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_ingress.sentry-ingress"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "helm_release.prometheus-operator" waiting on "provider.helm"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "helm_release.sentry" waiting on "var.SENTRY_USER_PASS"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.null (close)" waiting on "null_resource.rio-custom-domain"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_namespace.redis"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "helm_release.postgres-ha" waiting on "var.POSTGRES_REPMGR_PASSWORD"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_namespace.sentry" waiting on "provider.kubernetes"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_secret.docker-registry-auth"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "helm_release.sentry"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_namespace.postgres-ha"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.timescaledb"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "data.helm_repository.bitnami"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "null_resource.rio-custom-domain"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_persistent_volume_claim.image-proxy"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "null_resource.rio-setup" waiting on "data.local_file.rio-yaml"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.nginx-ingress"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "helm_release.sentry-k8s-erros"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_deployment.buildkitd"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_namespace.docker" waiting on "provider.kubernetes"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_deployment.buildkitd"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_service.buildkitd"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "null_resource.rio-custom-domain" waiting on "null_resource.rio-setup"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provisioner.local-exec (close)" waiting on "null_resource.rio-app-domains"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_namespace.postgres-ha" waiting on "provider.kubernetes"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_secret.timescale-certificates"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "helm_release.sentry-k8s-erros" waiting on "var.K8S_DSN"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_service.buildkitd"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "helm_release.sentry" waiting on "var.SENTRY_PG_PASS"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "data.helm_repository.sentry"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.local (close)" waiting on "data.local_file.rio-yaml"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "null_resource.cert-manager-setup" waiting on "helm_release.cert-manager"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "helm_release.cert-manager" waiting on "var.cert_manager_version"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_namespace.metrics-server"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "null_resource.rio-setup" waiting on "helm_release.cert-manager"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "null_resource.rio-app-domains" waiting on "null_resource.rio-setup"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "null_resource.rio-custom-domain" waiting on "data.local_file.rio-custom-domain"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_namespace.sentry"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_ingress.sentry-ingress" waiting on "provider.kubernetes"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_ingress.sentry-ingress"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "data.helm_repository.bitnami" waiting on "provider.helm"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "null_resource.rio-setup" waiting on "provider.null"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_secret.docker-config-json"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "module.cluster.digitalocean_kubernetes_node_pool.ci" waiting on "module.cluster.digitalocean_kubernetes_cluster.dish"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "module.cluster.provider.digitalocean (close)" waiting on "module.cluster.digitalocean_kubernetes_node_pool.ci"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.sentry"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_ingress.docker-registry-ingress" waiting on "provider.kubernetes"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_ingress.grafana-ingress"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_secret.timescale-credentials"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "data.local_file.rio-app-domains" waiting on "provider.local"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.null (close)" waiting on "null_resource.cert-manager-setup"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.docker-registry"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "helm_release.docker-registry" waiting on "provider.helm"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "data.helm_repository.bitnami"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.cluster.digitalocean_kubernetes_node_pool.ci"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.postgres-ha"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_namespace.metrics-server" waiting on "provider.kubernetes"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_secret.docker-config-json"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_ingress.rio-ingress" waiting on "provider.kubernetes"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_ingress.grafana-ingress"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "module.cluster.provider.digitalocean (close)" waiting on "module.cluster.digitalocean_kubernetes_node_pool.ancillary"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_namespace.timescale" waiting on "provider.kubernetes"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "null_resource.create-timescaledb-setup" waiting on "helm_release.timescaledb"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_config_map.buildkitd-config" waiting on "provider.kubernetes"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "data.helm_repository.timescale" waiting on "provider.helm"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.cert-manager"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "module.cluster.digitalocean_kubernetes_node_pool.ancillary" waiting on "module.cluster.digitalocean_kubernetes_cluster.dish"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "null_resource.create-timescaledb-setup"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_secret.cloudflare-dns-api-token" waiting on "provider.kubernetes"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "null_resource.rio-setup" waiting on "provisioner.local-exec"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "helm_release.prometheus-operator" waiting on "var.GRAFANA_PASSWORD"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "helm_release.postgres-ha" waiting on "var.POSTGRES_PASSWORD"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_secret.timescale-certificates"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_ingress.rio-ingress" waiting on "var.dish_domain"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.rio"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "module.cluster.output.cluster-id" waiting on "module.cluster.digitalocean_kubernetes_cluster.dish"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.nginx-ingress"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "helm_release.docker-registry"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_ingress.docker-registry-ingress"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "module.cluster.provider.digitalocean (close)" waiting on "module.cluster.digitalocean_kubernetes_node_pool.workers"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "data.local_file.rio-custom-domain" waiting on "provider.local"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "data.helm_repository.incubator" waiting on "provider.helm"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_persistent_volume_claim.image-proxy"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_secret.timescale-credentials"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provisioner.local-exec (close)" waiting on "null_resource.rio-custom-domain"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_ingress.docker-registry-ingress" waiting on "var.dish_domain"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "null_resource.create-timescaledb-setup" waiting on "provider.null"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "data.helm_repository.incubator"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "helm_release.nginx-ingress"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "helm_release.cert-manager" waiting on "data.helm_repository.jetstack"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_namespace.cert-manager" waiting on "provider.kubernetes"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_secret.docker-registry-auth"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "root" waiting on "provider.helm (close)"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_namespace.rio" waiting on "provider.kubernetes"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "null_resource.cert-manager-setup" waiting on "data.local_file.cert_manager_setup"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.DO_SPACES_SECRET"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.local (close)" waiting on "data.local_file.rio-app-domains"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "module.cluster.var.DO_DISH_KEY" waiting on "var.DO_DISH_KEY"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_secret.docker-registry-auth" waiting on "var.DOCKER_REGISTRY_HTTP_AUTH"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_secret.timescale-credentials" waiting on "var.TIMESCALE_ADMIN_PASS"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "root" waiting on "provisioner.local-exec (close)"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "helm_release.redis"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.redis"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_ingress.docker-registry-ingress"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_secret.cloudflare-dns-api-token" waiting on "helm_release.cert-manager"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.metrics-server"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "helm_release.postgres-ha" waiting on "provider.helm"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "root" waiting on "module.cluster.provider.digitalocean (close)"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_ingress.grafana-ingress" waiting on "var.dish_domain"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "null_resource.create-timescaledb-setup" waiting on "provisioner.local-exec"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_ingress.rio-ingress" waiting on "helm_release.cert-manager"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "data.helm_repository.stable" waiting on "provider.helm"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_secret.timescale-credentials" waiting on "var.TIMESCALE_REPLICATION_PASS"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "helm_release.sentry-k8s-erros" waiting on "provider.helm"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.null (close)" waiting on "null_resource.rio-app-domains"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "root" waiting on "provider.local (close)"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.docker"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_ingress.rio-ingress"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.postgres-ha"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_config_map.buildkitd-config"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_config_map.buildkitd-config"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_service.buildkitd" waiting on "provider.kubernetes"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "helm_release.timescaledb" waiting on "provider.helm"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "null_resource.cert-manager-setup" waiting on "provider.null"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "null_resource.cert-manager-setup"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_secret.docker-config-json" waiting on "var.DOCKER_CONFIG_JSON"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.prometheus-operator"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "helm_release.prometheus-operator"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_namespace.monitoring" waiting on "provider.kubernetes"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "null_resource.rio-app-domains" waiting on "data.local_file.rio-app-domains"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_namespace.rio"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "kubernetes_config_map.buildkitd-config" waiting on "var.DOCKER_CONFIG_JSON"
2020/08/09 19:26:37 [TRACE] dag/walk: added edge: "provider.local (close)" waiting on "data.local_file.rio-custom-domain"
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "helm_release.redis", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "data.helm_repository.bitnami", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "data.local_file.rio-custom-domain", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "helm_release.metrics-server", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "helm_release.sentry", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "provider.null (close)", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "null_resource.create-timescaledb-setup", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "kubernetes_config_map.buildkitd-config", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "kubernetes_service.buildkitd", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "null_resource.cert-manager-setup", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "provider.local (close)", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "kubernetes_secret.docker-config-json", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "kubernetes_secret.timescale-credentials", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "helm_release.prometheus-operator", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "helm_release.postgres-ha", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.monitoring", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "provider.helm (close)", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "data.local_file.rio-yaml", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "module.cluster.provider.digitalocean (close)", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.metrics-server", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "data.helm_repository.incubator", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "data.helm_repository.sentry", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "kubernetes_secret.docker-registry-auth", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.nginx-ingress", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "module.cluster.digitalocean_kubernetes_node_pool.ci", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "helm_release.docker-registry", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "module.cluster.var.DO_DISH_KEY", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "module.cluster.digitalocean_kubernetes_node_pool.ancillary", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.redis", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "helm_release.nginx-ingress", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "provisioner.local-exec (close)", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "data.helm_repository.stable", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "data.helm_repository.jetstack", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "kubernetes_ingress.docker-registry-ingress", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "data.local_file.rio-app-domains", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "kubernetes_deployment.buildkitd", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "module.cluster.digitalocean_kubernetes_node_pool.workers", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "data.local_file.cert_manager_setup", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.docker", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "kubernetes_ingress.rio-ingress", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.cert-manager", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.rio", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "kubernetes_secret.timescale-certificates", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "kubernetes_secret.cloudflare-dns-api-token", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "null_resource.rio-custom-domain", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "data.helm_repository.timescale", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "kubernetes_ingress.sentry-ingress", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "module.cluster.provider.digitalocean", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "null_resource.rio-setup", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "module.cluster.output.cluster-id", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.sentry", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "kubernetes_persistent_volume_claim.image-proxy", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.postgres-ha", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "helm_release.cert-manager", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "helm_release.timescaledb", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "provider.kubernetes (close)", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "module.cluster.digitalocean_kubernetes_cluster.dish", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "null_resource.rio-app-domains", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.timescale", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "kubernetes_ingress.grafana-ingress", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: dependencies changed for "helm_release.sentry-k8s-erros", sending new deps
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "provisioner.local-exec"
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "var.DO_SPACES_SECRET"
2020/08/09 19:26:37 [TRACE] vertex "provisioner.local-exec": starting visit (*terraform.NodeProvisioner)
2020/08/09 19:26:37 [TRACE] vertex "var.DO_SPACES_SECRET": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:37 [TRACE] vertex "provisioner.local-exec": evaluating
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "var.SENTRY_USER_PASS"
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: provisioner.local-exec
2020/08/09 19:26:37 [TRACE] vertex "var.DO_SPACES_SECRET": evaluating
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalInitProvisioner
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: var.DO_SPACES_SECRET
2020/08/09 19:26:37 [TRACE] vertex "var.SENTRY_USER_PASS": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "var.GRAFANA_PASSWORD"
2020/08/09 19:26:37 [TRACE] vertex "var.SENTRY_USER_PASS": evaluating
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: var.SENTRY_USER_PASS
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: var.DO_SPACES_SECRET
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: var.SENTRY_USER_PASS
2020/08/09 19:26:37 [TRACE] vertex "var.DO_SPACES_SECRET": visit complete
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "var.CLOUDFLARE_DNS_API_TOKEN"
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "var.SENTRY_PG_PASS"
2020/08/09 19:26:37 [TRACE] vertex "var.CLOUDFLARE_DNS_API_TOKEN": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:37 [TRACE] vertex "var.SENTRY_PG_PASS": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:37 [TRACE] vertex "var.CLOUDFLARE_DNS_API_TOKEN": evaluating
2020/08/09 19:26:37 [TRACE] vertex "var.SENTRY_PG_PASS": evaluating
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "var.dish_domain"
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "provider.kubernetes"
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: var.CLOUDFLARE_DNS_API_TOKEN
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: var.SENTRY_PG_PASS
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: var.CLOUDFLARE_DNS_API_TOKEN
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: var.SENTRY_PG_PASS
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "var.GMAIL_APP_PASSWORD"
2020/08/09 19:26:37 [TRACE] vertex "var.CLOUDFLARE_DNS_API_TOKEN": visit complete
2020/08/09 19:26:37 [TRACE] vertex "var.SENTRY_PG_PASS": visit complete
2020/08/09 19:26:37 [TRACE] vertex "var.GMAIL_APP_PASSWORD": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:37 [TRACE] vertex "var.GRAFANA_PASSWORD": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:37 [TRACE] vertex "var.GMAIL_APP_PASSWORD": evaluating
2020/08/09 19:26:37 [TRACE] vertex "var.GRAFANA_PASSWORD": evaluating
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "var.TIMESCALE_REPLICATION_PASS"
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: var.GMAIL_APP_PASSWORD
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: var.GRAFANA_PASSWORD
2020/08/09 19:26:37 [TRACE] vertex "var.TIMESCALE_REPLICATION_PASS": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "var.cert_manager_version"
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] vertex "var.TIMESCALE_REPLICATION_PASS": evaluating
2020/08/09 19:26:37 [TRACE] vertex "var.cert_manager_version": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: var.GMAIL_APP_PASSWORD
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: var.TIMESCALE_REPLICATION_PASS
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "provider.local"
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] vertex "var.GMAIL_APP_PASSWORD": visit complete
2020/08/09 19:26:37 [TRACE] vertex "provider.local": starting visit (*terraform.NodeApplyableProvider)
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: var.TIMESCALE_REPLICATION_PASS
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "var.DO_SPACES_ID"
2020/08/09 19:26:37 [TRACE] vertex "var.TIMESCALE_REPLICATION_PASS": visit complete
2020/08/09 19:26:37 [TRACE] vertex "var.dish_domain": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:37 [TRACE] vertex "var.DO_SPACES_ID": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "provider.null"
2020/08/09 19:26:37 [TRACE] vertex "var.DO_SPACES_ID": evaluating
2020/08/09 19:26:37 [TRACE] vertex "var.dish_domain": evaluating
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: var.DO_SPACES_ID
2020/08/09 19:26:37 [TRACE] vertex "provider.null": starting visit (*terraform.NodeApplyableProvider)
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "var.DOCKER_CONFIG_JSON"
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: var.dish_domain
2020/08/09 19:26:37 [TRACE] vertex "var.DOCKER_CONFIG_JSON": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:37 [TRACE] vertex "provider.null": evaluating
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: var.DO_SPACES_ID
2020/08/09 19:26:37 [TRACE] vertex "var.DOCKER_CONFIG_JSON": evaluating
2020/08/09 19:26:37 [TRACE] vertex "var.DO_SPACES_ID": visit complete
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "var.DO_DISH_KEY"
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: var.DOCKER_CONFIG_JSON
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "var.K8S_DSN"
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] vertex "var.DO_DISH_KEY": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:37 [TRACE] vertex "var.K8S_DSN": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "var.DOCKER_REGISTRY_HTTP_AUTH"
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "provider.helm"
2020/08/09 19:26:37 [TRACE] vertex "var.DOCKER_REGISTRY_HTTP_AUTH": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:37 [TRACE] vertex "provider.kubernetes": starting visit (*terraform.NodeApplyableProvider)
2020/08/09 19:26:37 [TRACE] vertex "var.DOCKER_REGISTRY_HTTP_AUTH": evaluating
2020/08/09 19:26:37 [TRACE] vertex "var.SENTRY_USER_PASS": visit complete
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: var.DOCKER_REGISTRY_HTTP_AUTH
2020/08/09 19:26:37 [TRACE] vertex "provider.kubernetes": evaluating
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: provider.kubernetes
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "var.POSTGRES_PASSWORD"
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: var.DOCKER_CONFIG_JSON
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/08/09 19:26:37 [TRACE] vertex "var.POSTGRES_PASSWORD": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:37 [TRACE] vertex "var.DOCKER_CONFIG_JSON": visit complete
2020/08/09 19:26:37 [TRACE] vertex "var.POSTGRES_PASSWORD": evaluating
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: provider.null
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: var.POSTGRES_PASSWORD
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "var.TIMESCALE_ADMIN_PASS"
2020-08-09T19:26:37.771+0300 [DEBUG] plugin: starting plugin: path=/usr/bin/terraform args=[/usr/bin/terraform, internal-plugin, provisioner, local-exec]
2020/08/09 19:26:37 [TRACE] vertex "var.TIMESCALE_ADMIN_PASS": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:37 [TRACE] vertex "var.TIMESCALE_ADMIN_PASS": evaluating
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: var.TIMESCALE_ADMIN_PASS
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: var.TIMESCALE_ADMIN_PASS
2020/08/09 19:26:37 [TRACE] vertex "var.TIMESCALE_ADMIN_PASS": visit complete
2020-08-09T19:26:37.772+0300 [INFO]  plugin: configuring client automatic mTLS
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "var.TIMESCALE_SU_PASS"
2020/08/09 19:26:37 [TRACE] vertex "var.TIMESCALE_SU_PASS": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:37 [TRACE] vertex "var.TIMESCALE_SU_PASS": evaluating
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: var.TIMESCALE_SU_PASS
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: var.TIMESCALE_SU_PASS
2020/08/09 19:26:37 [TRACE] vertex "var.TIMESCALE_SU_PASS": visit complete
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: var.GRAFANA_PASSWORD
2020/08/09 19:26:37 [TRACE] vertex "var.GRAFANA_PASSWORD": visit complete
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: var.DOCKER_REGISTRY_HTTP_AUTH
2020/08/09 19:26:37 [TRACE] vertex "var.DOCKER_REGISTRY_HTTP_AUTH": visit complete
2020/08/09 19:26:37 [TRACE] vertex "var.cert_manager_version": evaluating
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: var.cert_manager_version
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: var.cert_manager_version
2020/08/09 19:26:37 [TRACE] vertex "var.cert_manager_version": visit complete
2020/08/09 19:26:37 [TRACE] vertex "var.DO_DISH_KEY": evaluating
2020/08/09 19:26:37 [TRACE] vertex "provider.local": evaluating
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: provider.local
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: var.DO_DISH_KEY
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: var.DO_DISH_KEY
2020-08-09T19:26:37.772+0300 [DEBUG] plugin: plugin started: path=/usr/bin/terraform pid=4111197
2020/08/09 19:26:37 [TRACE] vertex "var.DO_DISH_KEY": visit complete
2020-08-09T19:26:37.772+0300 [DEBUG] plugin: waiting for RPC address: path=/usr/bin/terraform
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "module.cluster.var.DO_DISH_KEY"
2020/08/09 19:26:37 [TRACE] vertex "module.cluster.var.DO_DISH_KEY": starting visit (*terraform.NodeApplyableModuleVariable)
2020/08/09 19:26:37 [TRACE] vertex "module.cluster.var.DO_DISH_KEY": evaluating
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: module.cluster.var.DO_DISH_KEY
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.evalVariableValidations
2020/08/09 19:26:37 [TRACE] evalVariableValidations: not active for module.cluster.var.DO_DISH_KEY, so skipping
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: module.cluster.var.DO_DISH_KEY
2020/08/09 19:26:37 [TRACE] vertex "module.cluster.var.DO_DISH_KEY": visit complete
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "module.cluster.provider.digitalocean"
2020/08/09 19:26:37 [TRACE] vertex "module.cluster.provider.digitalocean": starting visit (*terraform.NodeApplyableProvider)
2020/08/09 19:26:37 [TRACE] vertex "module.cluster.provider.digitalocean": evaluating
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: module.cluster.provider.digitalocean
2020/08/09 19:26:37 [TRACE] module.cluster: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] module.cluster: eval: *terraform.EvalInitProvider
2020/08/09 19:26:37 [TRACE] vertex "var.K8S_DSN": evaluating
2020/08/09 19:26:37 [TRACE] vertex "provider.helm": starting visit (*terraform.NodeApplyableProvider)
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "var.POSTGRES_REPMGR_PASSWORD"
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: var.K8S_DSN
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: var.K8S_DSN
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] vertex "var.K8S_DSN": visit complete
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: var.POSTGRES_PASSWORD
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: var.dish_domain
2020/08/09 19:26:37 [TRACE] vertex "var.POSTGRES_PASSWORD": visit complete
2020/08/09 19:26:37 [TRACE] vertex "var.dish_domain": visit complete
2020/08/09 19:26:37 [TRACE] vertex "provider.helm": evaluating
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: provider.helm
2020/08/09 19:26:37 [TRACE] vertex "var.POSTGRES_REPMGR_PASSWORD": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] vertex "var.POSTGRES_REPMGR_PASSWORD": evaluating
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: var.POSTGRES_REPMGR_PASSWORD
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: var.POSTGRES_REPMGR_PASSWORD
2020/08/09 19:26:37 [TRACE] vertex "var.POSTGRES_REPMGR_PASSWORD": visit complete
2020-08-09T19:26:37.791+0300 [DEBUG] plugin: starting plugin: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-kubernetes_v1.12.0_x4 args=[/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-kubernetes_v1.12.0_x4]
2020-08-09T19:26:37.791+0300 [DEBUG] plugin: plugin started: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-kubernetes_v1.12.0_x4 pid=4111208
2020-08-09T19:26:37.791+0300 [DEBUG] plugin: waiting for RPC address: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-kubernetes_v1.12.0_x4
2020-08-09T19:26:37.808+0300 [DEBUG] plugin: using plugin: version=5
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: provisioner.local-exec
2020/08/09 19:26:37 [TRACE] vertex "provisioner.local-exec": visit complete
2020-08-09T19:26:37.809+0300 [TRACE] plugin.stdio: waiting for stdio data
2020-08-09T19:26:37.817+0300 [INFO]  plugin.terraform-provider-kubernetes_v1.12.0_x4: configuring server automatic mTLS: timestamp=2020-08-09T19:26:37.817+0300
2020-08-09T19:26:37.836+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: plugin address: address=/tmp/plugin226872733 network=unix timestamp=2020-08-09T19:26:37.835+0300
2020-08-09T19:26:37.836+0300 [DEBUG] plugin: using plugin: version=5
2020/08/09 19:26:37 [TRACE] BuiltinEvalContext: Initialized "kubernetes" provider for provider.kubernetes
2020/08/09 19:26:37 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:37 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/08/09 19:26:37 [TRACE] buildProviderConfig for provider.kubernetes: no configuration at all
2020/08/09 19:26:37 [TRACE] GRPCProvider: GetSchema
2020-08-09T19:26:37.877+0300 [TRACE] plugin.stdio: waiting for stdio data
2020-08-09T19:26:37.877+0300 [INFO]  plugin: configuring client automatic mTLS
2020-08-09T19:26:37.878+0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unimplemented desc = unknown service plugin.GRPCStdio"
2020-08-09T19:26:37.900+0300 [DEBUG] plugin: starting plugin: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-local_v1.4.0_x4 args=[/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-local_v1.4.0_x4]
2020-08-09T19:26:37.900+0300 [DEBUG] plugin: plugin started: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-local_v1.4.0_x4 pid=4111230
2020-08-09T19:26:37.900+0300 [DEBUG] plugin: waiting for RPC address: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-local_v1.4.0_x4
2020-08-09T19:26:37.907+0300 [INFO]  plugin.terraform-provider-local_v1.4.0_x4: configuring server automatic mTLS: timestamp=2020-08-09T19:26:37.906+0300
2020-08-09T19:26:37.926+0300 [DEBUG] plugin: using plugin: version=5
2020-08-09T19:26:37.926+0300 [DEBUG] plugin.terraform-provider-local_v1.4.0_x4: plugin address: address=/tmp/plugin321708693 network=unix timestamp=2020-08-09T19:26:37.926+0300
2020/08/09 19:26:37 [TRACE] BuiltinEvalContext: Initialized "local" provider for provider.local
2020/08/09 19:26:37 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:37 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020-08-09T19:26:37.961+0300 [TRACE] plugin.stdio: waiting for stdio data
2020/08/09 19:26:37 [TRACE] GRPCProvider: Configure
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020-08-09T19:26:37.961+0300 [INFO]  plugin: configuring client automatic mTLS
2020-08-09T19:26:37.961+0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unimplemented desc = unknown service plugin.GRPCStdio"
2020-08-09T19:26:37.962+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:37 [DEBUG] Trying to load configuration from file
2020-08-09T19:26:37.962+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:37 [DEBUG] Configuration file is: /home/tombh/.kube/config
2020-08-09T19:26:37.963+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:37 [INFO] Successfully initialized config
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: provider.kubernetes
2020/08/09 19:26:37 [TRACE] vertex "provider.kubernetes": visit complete
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_config_map.buildkitd-config"
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_config_map.buildkitd-config": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_namespace.cert-manager"
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_ingress.sentry-ingress"
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_secret.docker-registry-auth"
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_config_map.buildkitd-config": evaluating
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_ingress.sentry-ingress": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_config_map.buildkitd-config
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_namespace.rio"
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_ingress.sentry-ingress": evaluating
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.rio": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_ingress.sentry-ingress
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_namespace.monitoring"
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.rio": evaluating
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: kubernetes_config_map.buildkitd-config
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.monitoring": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_namespace.rio
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_config_map.buildkitd-config": expanding dynamic subgraph
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_ingress.docker-registry-ingress"
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_namespace.nginx-ingress"
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.nginx-ingress": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.monitoring": evaluating
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.nginx-ingress": evaluating
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_namespace.nginx-ingress
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_namespace.monitoring
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_secret.docker-config-json"
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_ingress.grafana-ingress"
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_secret.docker-config-json": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_namespace.redis"
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.redis": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_ingress.docker-registry-ingress": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.redis": evaluating
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_ingress.docker-registry-ingress": evaluating
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_namespace.timescale"
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_service.buildkitd"
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_namespace.redis
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_ingress.docker-registry-ingress
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_namespace.sentry"
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_service.buildkitd": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.sentry": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_namespace.metrics-server"
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_service.buildkitd": evaluating
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.sentry": evaluating
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.metrics-server": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_namespace.docker"
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_namespace.sentry
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.metrics-server": evaluating
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_deployment.buildkitd"
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_namespace.metrics-server
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_persistent_volume_claim.image-proxy"
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_secret.docker-config-json": evaluating
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_service.buildkitd
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_secret.docker-config-json
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.timescale": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.timescale": evaluating
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_namespace.postgres-ha"
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_namespace.timescale
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_secret.docker-registry-auth": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.postgres-ha": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_secret.docker-registry-auth": evaluating
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.postgres-ha": evaluating
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_secret.docker-registry-auth
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_namespace.postgres-ha
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_config_map.buildkitd-config - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.cert-manager": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.cert-manager": evaluating
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_ingress.grafana-ingress": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_namespace.cert-manager
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_ingress.grafana-ingress": evaluating
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_ingress.grafana-ingress
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.docker": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.docker": evaluating
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_namespace.docker
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_deployment.buildkitd": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_deployment.buildkitd": evaluating
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_deployment.buildkitd
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_config_map.buildkitd-config" references: []
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_persistent_volume_claim.image-proxy": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_persistent_volume_claim.image-proxy": evaluating
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_persistent_volume_claim.image-proxy
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_config_map.buildkitd-config": entering dynamic subgraph
2020/08/09 19:26:37 [TRACE] dag/walk: updating graph
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_config_map.buildkitd-config"
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: kubernetes_namespace.rio
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.rio": expanding dynamic subgraph
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_config_map.buildkitd-config"
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_config_map.buildkitd-config": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_config_map.buildkitd-config": evaluating
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_namespace.rio - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_config_map.buildkitd-config
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_namespace.rio" references: []
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.rio": entering dynamic subgraph
2020/08/09 19:26:37 [TRACE] dag/walk: updating graph
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.rio"
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_namespace.rio"
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.rio": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.rio": evaluating
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_namespace.rio
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: kubernetes_ingress.sentry-ingress
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_ingress.sentry-ingress": expanding dynamic subgraph
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_ingress.sentry-ingress - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_ingress.sentry-ingress" references: []
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_ingress.sentry-ingress": entering dynamic subgraph
2020/08/09 19:26:37 [TRACE] dag/walk: updating graph
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_ingress.sentry-ingress"
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: kubernetes_ingress.docker-registry-ingress
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_ingress.docker-registry-ingress": expanding dynamic subgraph
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_ingress.sentry-ingress"
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_ingress.sentry-ingress": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_ingress.sentry-ingress": evaluating
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_ingress.sentry-ingress
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_ingress.docker-registry-ingress - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_ingress.docker-registry-ingress" references: []
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_ingress.docker-registry-ingress": entering dynamic subgraph
2020/08/09 19:26:37 [TRACE] dag/walk: updating graph
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_ingress.docker-registry-ingress"
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_ingress.docker-registry-ingress"
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_ingress.docker-registry-ingress": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_ingress.docker-registry-ingress": evaluating
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_ingress.docker-registry-ingress
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: kubernetes_namespace.monitoring
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.monitoring": expanding dynamic subgraph
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_namespace.monitoring - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_namespace.monitoring" references: []
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.monitoring": entering dynamic subgraph
2020/08/09 19:26:37 [TRACE] dag/walk: updating graph
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: kubernetes_service.buildkitd
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.monitoring"
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_service.buildkitd": expanding dynamic subgraph
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: kubernetes_namespace.sentry
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_namespace.monitoring"
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.sentry": expanding dynamic subgraph
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.monitoring": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_service.buildkitd - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.monitoring": evaluating
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: kubernetes_namespace.nginx-ingress
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_namespace.monitoring
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.nginx-ingress": expanding dynamic subgraph
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: kubernetes_namespace.metrics-server
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.metrics-server": expanding dynamic subgraph
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: kubernetes_namespace.redis
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.redis": expanding dynamic subgraph
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_service.buildkitd" references: []
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_service.buildkitd": entering dynamic subgraph
2020/08/09 19:26:37 [TRACE] dag/walk: updating graph
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_service.buildkitd"
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_service.buildkitd"
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_namespace.sentry - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_service.buildkitd": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_service.buildkitd": evaluating
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_service.buildkitd
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_namespace.sentry" references: []
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.sentry": entering dynamic subgraph
2020/08/09 19:26:37 [TRACE] dag/walk: updating graph
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.sentry"
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_namespace.sentry"
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.sentry": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.sentry": evaluating
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_namespace.sentry
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: kubernetes_secret.docker-registry-auth
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_secret.docker-registry-auth": expanding dynamic subgraph
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_secret.docker-registry-auth - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_secret.docker-registry-auth" references: []
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_secret.docker-registry-auth": entering dynamic subgraph
2020/08/09 19:26:37 [TRACE] dag/walk: updating graph
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_secret.docker-registry-auth"
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_secret.docker-registry-auth"
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_secret.docker-registry-auth": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_secret.docker-registry-auth": evaluating
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_secret.docker-registry-auth
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: kubernetes_namespace.timescale
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.timescale": expanding dynamic subgraph
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_namespace.timescale - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_namespace.timescale" references: []
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.timescale": entering dynamic subgraph
2020/08/09 19:26:37 [TRACE] dag/walk: updating graph
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.timescale"
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_namespace.timescale"
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.timescale": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.timescale": evaluating
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_namespace.timescale
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_namespace.nginx-ingress - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_namespace.nginx-ingress" references: []
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.nginx-ingress": entering dynamic subgraph
2020/08/09 19:26:37 [TRACE] dag/walk: updating graph
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.nginx-ingress"
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: kubernetes_namespace.postgres-ha
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.postgres-ha": expanding dynamic subgraph
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_namespace.nginx-ingress"
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.nginx-ingress": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.nginx-ingress": evaluating
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_namespace.nginx-ingress
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_namespace.postgres-ha - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_namespace.postgres-ha" references: []
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.postgres-ha": entering dynamic subgraph
2020/08/09 19:26:37 [TRACE] dag/walk: updating graph
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.postgres-ha"
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_namespace.postgres-ha"
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.postgres-ha": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.postgres-ha": evaluating
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_namespace.postgres-ha
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_namespace.metrics-server - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_namespace.metrics-server" references: []
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.metrics-server": entering dynamic subgraph
2020/08/09 19:26:37 [TRACE] dag/walk: updating graph
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: kubernetes_namespace.docker
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: kubernetes_secret.docker-config-json
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.metrics-server"
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.docker": expanding dynamic subgraph
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_secret.docker-config-json": expanding dynamic subgraph
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_namespace.metrics-server"
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_namespace.redis - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.metrics-server": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: kubernetes_ingress.grafana-ingress
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: kubernetes_namespace.cert-manager
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.metrics-server": evaluating
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.cert-manager": expanding dynamic subgraph
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_namespace.metrics-server
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_namespace.redis" references: []
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_ingress.grafana-ingress": expanding dynamic subgraph
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.redis": entering dynamic subgraph
2020/08/09 19:26:37 [TRACE] dag/walk: updating graph
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.redis"
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_namespace.redis"
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.redis": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.redis": evaluating
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_namespace.redis
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_namespace.docker - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_namespace.docker" references: []
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.docker": entering dynamic subgraph
2020/08/09 19:26:37 [TRACE] dag/walk: updating graph
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.docker"
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_namespace.docker"
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.docker": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.docker": evaluating
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_namespace.docker
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: kubernetes_persistent_volume_claim.image-proxy
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_persistent_volume_claim.image-proxy": expanding dynamic subgraph
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_persistent_volume_claim.image-proxy - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_persistent_volume_claim.image-proxy" references: []
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_persistent_volume_claim.image-proxy": entering dynamic subgraph
2020/08/09 19:26:37 [TRACE] dag/walk: updating graph
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_persistent_volume_claim.image-proxy"
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_persistent_volume_claim.image-proxy"
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_persistent_volume_claim.image-proxy": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_persistent_volume_claim.image-proxy": evaluating
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_persistent_volume_claim.image-proxy
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_secret.docker-config-json - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_secret.docker-config-json" references: []
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_secret.docker-config-json": entering dynamic subgraph
2020/08/09 19:26:37 [TRACE] dag/walk: updating graph
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_secret.docker-config-json"
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_secret.docker-config-json"
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_secret.docker-config-json": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_secret.docker-config-json": evaluating
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_secret.docker-config-json
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_namespace.cert-manager - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:37 [DEBUG] ReferenceTransformer: "kubernetes_namespace.cert-manager" references: []
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.cert-manager": entering dynamic subgraph
2020/08/09 19:26:37 [TRACE] dag/walk: updating graph
2020/08/09 19:26:37 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.cert-manager"
2020/08/09 19:26:37 [TRACE] dag/walk: visiting "kubernetes_namespace.cert-manager"
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.cert-manager": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_namespace.cert-manager": evaluating
2020/08/09 19:26:37 [TRACE] [walkPlan] Entering eval tree: kubernetes_namespace.cert-manager
2020/08/09 19:26:37 [TRACE] [walkPlan] Exiting eval tree: kubernetes_deployment.buildkitd
2020/08/09 19:26:37 [TRACE] vertex "kubernetes_deployment.buildkitd": expanding dynamic subgraph
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_deployment.buildkitd - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:37 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:37 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020-08-09T19:26:37.981+0300 [DEBUG] plugin: starting plugin: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-digitalocean_v1.22.0 args=[/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-digitalocean_v1.22.0]
2020-08-09T19:26:37.981+0300 [DEBUG] plugin: plugin started: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-digitalocean_v1.22.0 pid=4111245
2020-08-09T19:26:37.981+0300 [DEBUG] plugin: waiting for RPC address: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-digitalocean_v1.22.0
2020-08-09T19:26:37.989+0300 [INFO]  plugin.terraform-provider-digitalocean_v1.22.0: configuring server automatic mTLS: timestamp=2020-08-09T19:26:37.989+0300
2020-08-09T19:26:38.011+0300 [DEBUG] plugin.terraform-provider-digitalocean_v1.22.0: plugin address: address=/tmp/plugin970779761 network=unix timestamp=2020-08-09T19:26:38.011+0300
2020-08-09T19:26:38.011+0300 [DEBUG] plugin: using plugin: version=5
2020/08/09 19:26:38 [DEBUG] ReferenceTransformer: "kubernetes_deployment.buildkitd" references: []
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_deployment.buildkitd": entering dynamic subgraph
2020/08/09 19:26:38 [TRACE] dag/walk: updating graph
2020/08/09 19:26:38 [TRACE] dag/walk: added new vertex: "kubernetes_deployment.buildkitd"
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "kubernetes_deployment.buildkitd"
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_deployment.buildkitd": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_deployment.buildkitd": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: kubernetes_deployment.buildkitd
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_ingress.grafana-ingress - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:38 [DEBUG] ReferenceTransformer: "kubernetes_ingress.grafana-ingress" references: []
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_ingress.grafana-ingress": entering dynamic subgraph
2020/08/09 19:26:38 [TRACE] dag/walk: updating graph
2020/08/09 19:26:38 [TRACE] dag/walk: added new vertex: "kubernetes_ingress.grafana-ingress"
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "kubernetes_ingress.grafana-ingress"
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_ingress.grafana-ingress": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_ingress.grafana-ingress": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: kubernetes_ingress.grafana-ingress
2020/08/09 19:26:38 [TRACE] BuiltinEvalContext: Initialized "digitalocean" provider for module.cluster.provider.digitalocean
2020/08/09 19:26:38 [TRACE] module.cluster: eval: terraform.EvalNoop
2020/08/09 19:26:38 [TRACE] module.cluster: eval: terraform.EvalNoop
2020/08/09 19:26:38 [TRACE] module.cluster: eval: *terraform.EvalOpFilter
2020/08/09 19:26:38 [TRACE] module.cluster: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] module.cluster: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] module.cluster: eval: *terraform.EvalOpFilter
2020/08/09 19:26:38 [TRACE] module.cluster: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] module.cluster: eval: *terraform.EvalConfigProvider
2020-08-09T19:26:38.051+0300 [TRACE] plugin.stdio: waiting for stdio data
2020/08/09 19:26:38 [TRACE] buildProviderConfig for provider.digitalocean: using explicit config only
2020/08/09 19:26:38 [TRACE] GRPCProvider: GetSchema
2020-08-09T19:26:38.051+0300 [INFO]  plugin: configuring client automatic mTLS
2020-08-09T19:26:38.052+0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unimplemented desc = unknown service plugin.GRPCStdio"
2020-08-09T19:26:38.069+0300 [DEBUG] plugin: starting plugin: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-helm_v1.2.4_x4 args=[/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-helm_v1.2.4_x4]
2020-08-09T19:26:38.069+0300 [DEBUG] plugin: plugin started: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-helm_v1.2.4_x4 pid=4111258
2020-08-09T19:26:38.069+0300 [DEBUG] plugin: waiting for RPC address: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-helm_v1.2.4_x4
2020-08-09T19:26:38.095+0300 [INFO]  plugin.terraform-provider-helm_v1.2.4_x4: configuring server automatic mTLS: timestamp=2020-08-09T19:26:38.095+0300
2020-08-09T19:26:38.111+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: plugin address: address=/tmp/plugin862124691 network=unix timestamp=2020-08-09T19:26:38.111+0300
2020-08-09T19:26:38.111+0300 [DEBUG] plugin: using plugin: version=5
2020/08/09 19:26:38 [TRACE] BuiltinEvalContext: Initialized "helm" provider for provider.helm
2020/08/09 19:26:38 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:38 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/08/09 19:26:38 [TRACE] buildProviderConfig for provider.helm: no configuration at all
2020/08/09 19:26:38 [TRACE] GRPCProvider: GetSchema
2020-08-09T19:26:38.145+0300 [TRACE] plugin.stdio: waiting for stdio data
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/08/09 19:26:38 [TRACE] buildProviderConfig for provider.local: no configuration at all
2020/08/09 19:26:38 [TRACE] GRPCProvider: GetSchema
2020-08-09T19:26:38.146+0300 [INFO]  plugin: configuring client automatic mTLS
2020-08-09T19:26:38.146+0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unimplemented desc = unknown service plugin.GRPCStdio"
2020-08-09T19:26:38.163+0300 [DEBUG] plugin: starting plugin: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-null_v2.1.2_x4 args=[/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-null_v2.1.2_x4]
2020-08-09T19:26:38.163+0300 [DEBUG] plugin: plugin started: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-null_v2.1.2_x4 pid=4111273
2020-08-09T19:26:38.163+0300 [DEBUG] plugin: waiting for RPC address: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-null_v2.1.2_x4
2020-08-09T19:26:38.167+0300 [INFO]  plugin.terraform-provider-null_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-08-09T19:26:38.167+0300
2020-08-09T19:26:38.186+0300 [DEBUG] plugin: using plugin: version=5
2020-08-09T19:26:38.186+0300 [DEBUG] plugin.terraform-provider-null_v2.1.2_x4: plugin address: address=/tmp/plugin971285306 network=unix timestamp=2020-08-09T19:26:38.186+0300
2020/08/09 19:26:38 [TRACE] BuiltinEvalContext: Initialized "null" provider for provider.null
2020/08/09 19:26:38 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:38 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020-08-09T19:26:38.222+0300 [TRACE] plugin.stdio: waiting for stdio data
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/08/09 19:26:38 [TRACE] buildProviderConfig for provider.null: no configuration at all
2020/08/09 19:26:38 [TRACE] GRPCProvider: GetSchema
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for kubernetes_config_map.buildkitd-config
2020/08/09 19:26:38 [TRACE] UpgradeResourceState: schema version of kubernetes_config_map.buildkitd-config is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:38 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for kubernetes_namespace.rio
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for kubernetes_ingress.sentry-ingress
2020/08/09 19:26:38 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.rio is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:38 [TRACE] UpgradeResourceState: schema version of kubernetes_ingress.sentry-ingress is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:38 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:38 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for kubernetes_ingress.docker-registry-ingress
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for kubernetes_namespace.monitoring
2020/08/09 19:26:38 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.monitoring is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:38 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:38 [TRACE] UpgradeResourceState: schema version of kubernetes_ingress.docker-registry-ingress is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:38 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for kubernetes_service.buildkitd
2020/08/09 19:26:38 [TRACE] UpgradeResourceState: schema version of kubernetes_service.buildkitd is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:38 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:38 [TRACE] GRPCProvider: Configure
2020/08/09 19:26:38 [TRACE] GRPCProvider: Configure
2020/08/09 19:26:38 [TRACE] GRPCProvider: Configure
2020-08-09T19:26:38.222+0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unimplemented desc = unknown service plugin.GRPCStdio"
2020-08-09T19:26:38.223+0300 [DEBUG] plugin.terraform-provider-digitalocean_v1.22.0: 2020/08/09 19:26:38 [INFO] DigitalOcean Client configured for URL: https://api.digitalocean.com
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: provider.helm
2020/08/09 19:26:38 [TRACE] vertex "provider.helm": visit complete
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: module.cluster.provider.digitalocean
2020/08/09 19:26:38 [TRACE] vertex "module.cluster.provider.digitalocean": visit complete
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "data.helm_repository.bitnami"
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "module.cluster.digitalocean_kubernetes_cluster.dish"
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.bitnami": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:38 [TRACE] vertex "module.cluster.digitalocean_kubernetes_cluster.dish": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.bitnami": evaluating
2020/08/09 19:26:38 [TRACE] vertex "module.cluster.digitalocean_kubernetes_cluster.dish": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: data.helm_repository.bitnami
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: module.cluster.digitalocean_kubernetes_cluster.dish
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "data.helm_repository.timescale"
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for kubernetes_secret.docker-registry-auth
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.timescale": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.timescale": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: data.helm_repository.timescale
2020/08/09 19:26:38 [TRACE] UpgradeResourceState: schema version of kubernetes_secret.docker-registry-auth is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:38 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: provider.local
2020/08/09 19:26:38 [TRACE] vertex "provider.local": visit complete
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "data.local_file.rio-custom-domain"
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.rio-custom-domain": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:38 [TRACE] GRPCProvider: Configure
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.rio-custom-domain": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: data.local_file.rio-custom-domain
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "data.helm_repository.stable"
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for kubernetes_namespace.sentry
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.stable": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.stable": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: data.helm_repository.stable
2020/08/09 19:26:38 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.sentry is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:38 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "data.helm_repository.jetstack"
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.jetstack": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.jetstack": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: data.helm_repository.jetstack
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "helm_release.docker-registry"
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "helm_release.postgres-ha"
2020/08/09 19:26:38 [TRACE] vertex "helm_release.docker-registry": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:38 [TRACE] vertex "helm_release.postgres-ha": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:38 [TRACE] vertex "helm_release.docker-registry": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: helm_release.docker-registry
2020/08/09 19:26:38 [TRACE] vertex "helm_release.postgres-ha": evaluating
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: helm_release.postgres-ha
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "data.helm_repository.sentry"
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.sentry": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.sentry": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: data.helm_repository.sentry
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "helm_release.sentry-k8s-erros"
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:38 [TRACE] vertex "helm_release.sentry-k8s-erros": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "data.helm_repository.incubator"
2020/08/09 19:26:38 [TRACE] vertex "helm_release.sentry-k8s-erros": evaluating
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.incubator": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: helm_release.sentry-k8s-erros
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.incubator": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: data.helm_repository.incubator
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "helm_release.sentry"
2020/08/09 19:26:38 [TRACE] vertex "helm_release.sentry": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "helm_release.prometheus-operator"
2020/08/09 19:26:38 [TRACE] vertex "helm_release.prometheus-operator": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:38 [TRACE] vertex "helm_release.sentry": evaluating
2020/08/09 19:26:38 [TRACE] vertex "helm_release.prometheus-operator": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: helm_release.prometheus-operator
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: helm_release.sentry
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "helm_release.redis"
2020/08/09 19:26:38 [TRACE] vertex "helm_release.redis": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:38 [TRACE] vertex "helm_release.redis": evaluating
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "helm_release.timescaledb"
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: helm_release.redis
2020/08/09 19:26:38 [TRACE] vertex "helm_release.timescaledb": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:38 [TRACE] vertex "helm_release.timescaledb": evaluating
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "helm_release.metrics-server"
2020/08/09 19:26:38 [TRACE] vertex "helm_release.metrics-server": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: helm_release.timescaledb
2020/08/09 19:26:38 [TRACE] vertex "helm_release.metrics-server": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: helm_release.metrics-server
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] Re-validating config for "kubernetes_namespace.monitoring"
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "data.local_file.rio-app-domains"
2020/08/09 19:26:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.rio-app-domains": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for kubernetes_namespace.timescale
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.rio-app-domains": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: data.local_file.rio-app-domains
2020/08/09 19:26:38 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.timescale is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:38 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "data.local_file.cert_manager_setup"
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.cert_manager_setup": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.cert_manager_setup": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: data.local_file.cert_manager_setup
2020/08/09 19:26:38 [TRACE] Re-validating config for "kubernetes_config_map.buildkitd-config"
2020/08/09 19:26:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "data.local_file.rio-yaml"
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.rio-yaml": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.rio-yaml": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: data.local_file.rio-yaml
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: provider.null
2020/08/09 19:26:38 [TRACE] vertex "provider.null": visit complete
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for kubernetes_namespace.nginx-ingress
2020/08/09 19:26:38 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.nginx-ingress is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:38 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:38 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:38 [TRACE] Re-validating config for "kubernetes_namespace.sentry"
2020/08/09 19:26:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:38 [TRACE] Re-validating config for "kubernetes_namespace.rio"
2020/08/09 19:26:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:38 [TRACE] Re-validating config for "kubernetes_namespace.timescale"
2020/08/09 19:26:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:38 [TRACE] Re-validating config for "kubernetes_secret.docker-registry-auth"
2020/08/09 19:26:38 [TRACE] Re-validating config for "kubernetes_service.buildkitd"
2020/08/09 19:26:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:38 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:38 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:38 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:38 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:38 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:38 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.monitoring
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:38 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_namespace.monitoring
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: kubernetes_namespace.monitoring
2020/08/09 19:26:38 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_namespace.monitoring": visit complete
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_namespace.monitoring": dynamic subgraph completed successfully
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_namespace.monitoring": visit complete
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:38 [TRACE] Re-validating config for "kubernetes_namespace.nginx-ingress"
2020/08/09 19:26:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:38 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.docker-registry-auth
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:38 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_secret.docker-registry-auth
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: kubernetes_secret.docker-registry-auth
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_secret.docker-registry-auth": visit complete
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_secret.docker-registry-auth": dynamic subgraph completed successfully
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_secret.docker-registry-auth": visit complete
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:38 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.timescale
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:38 [TRACE] Re-validating config for "kubernetes_ingress.docker-registry-ingress"
2020/08/09 19:26:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:38 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_namespace.timescale
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: kubernetes_namespace.timescale
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_namespace.timescale": visit complete
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_namespace.timescale": dynamic subgraph completed successfully
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_namespace.timescale": visit complete
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "kubernetes_secret.timescale-credentials"
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_secret.timescale-credentials": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_secret.timescale-credentials": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: kubernetes_secret.timescale-credentials
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:38 [TRACE] EvalWriteState: writing current state object for kubernetes_config_map.buildkitd-config
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:38 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_config_map.buildkitd-config
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: kubernetes_config_map.buildkitd-config
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_config_map.buildkitd-config": visit complete
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_config_map.buildkitd-config": dynamic subgraph completed successfully
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_config_map.buildkitd-config": visit complete
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for kubernetes_namespace.metrics-server
2020/08/09 19:26:38 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.metrics-server is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:38 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for kubernetes_namespace.redis
2020/08/09 19:26:38 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.redis is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:38 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "kubernetes_secret.timescale-certificates"
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_secret.timescale-certificates": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_secret.timescale-certificates": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: kubernetes_secret.timescale-certificates
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for kubernetes_namespace.docker
2020/08/09 19:26:38 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.docker is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:38 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:38 [TRACE] Re-validating config for "kubernetes_ingress.sentry-ingress"
2020/08/09 19:26:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:38 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for kubernetes_namespace.postgres-ha
2020/08/09 19:26:38 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.postgres-ha is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:38 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:38 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.rio
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:38 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_namespace.rio
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: kubernetes_namespace.rio
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_namespace.rio": visit complete
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_namespace.rio": dynamic subgraph completed successfully
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_namespace.rio": visit complete
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:38 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.sentry
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:38 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_namespace.sentry
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: kubernetes_namespace.sentry
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_namespace.sentry": visit complete
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_namespace.sentry": dynamic subgraph completed successfully
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_namespace.sentry": visit complete
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] Re-validating config for "kubernetes_namespace.docker"
2020/08/09 19:26:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for kubernetes_persistent_volume_claim.image-proxy
2020/08/09 19:26:38 [TRACE] UpgradeResourceState: schema version of kubernetes_persistent_volume_claim.image-proxy is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:38 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for kubernetes_secret.docker-config-json
2020/08/09 19:26:38 [TRACE] UpgradeResourceState: schema version of kubernetes_secret.docker-config-json is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:38 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:38 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:38 [TRACE] Re-validating config for "kubernetes_namespace.metrics-server"
2020/08/09 19:26:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:38 [TRACE] Re-validating config for "kubernetes_namespace.redis"
2020/08/09 19:26:38 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.nginx-ingress
2020/08/09 19:26:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:38 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_namespace.nginx-ingress
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: kubernetes_namespace.nginx-ingress
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_namespace.nginx-ingress": visit complete
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_namespace.nginx-ingress": dynamic subgraph completed successfully
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_namespace.nginx-ingress": visit complete
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:38 [TRACE] EvalWriteState: writing current state object for kubernetes_service.buildkitd
2020/08/09 19:26:38 [TRACE] Re-validating config for "kubernetes_namespace.postgres-ha"
2020/08/09 19:26:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for kubernetes_namespace.cert-manager
2020/08/09 19:26:38 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.cert-manager is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:38 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:38 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_service.buildkitd
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: kubernetes_service.buildkitd
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_service.buildkitd": visit complete
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_service.buildkitd": dynamic subgraph completed successfully
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_service.buildkitd": visit complete
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for kubernetes_deployment.buildkitd
2020/08/09 19:26:38 [TRACE] UpgradeResourceState: schema version of kubernetes_deployment.buildkitd is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:38 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:38 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:38 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:38 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:38 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:38 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:38 [TRACE] Re-validating config for "kubernetes_namespace.cert-manager"
2020/08/09 19:26:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:38 [TRACE] Re-validating config for "kubernetes_secret.docker-config-json"
2020/08/09 19:26:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:38 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:38 [TRACE] Re-validating config for "kubernetes_persistent_volume_claim.image-proxy"
2020/08/09 19:26:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:38 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:38 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.redis
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:38 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_namespace.redis
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: kubernetes_namespace.redis
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_namespace.redis": visit complete
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_namespace.redis": dynamic subgraph completed successfully
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_namespace.redis": visit complete
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for kubernetes_ingress.grafana-ingress
2020/08/09 19:26:38 [TRACE] UpgradeResourceState: schema version of kubernetes_ingress.grafana-ingress is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:38 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:38 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.docker
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:38 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.postgres-ha
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:38 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_namespace.docker
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: kubernetes_namespace.docker
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_namespace.docker": visit complete
2020/08/09 19:26:38 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_namespace.postgres-ha
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_namespace.docker": dynamic subgraph completed successfully
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: kubernetes_namespace.postgres-ha
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_namespace.docker": visit complete
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_namespace.postgres-ha": visit complete
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_namespace.postgres-ha": dynamic subgraph completed successfully
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_namespace.postgres-ha": visit complete
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: data.helm_repository.bitnami
2020/08/09 19:26:38 [TRACE] module.cluster: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.bitnami": expanding dynamic subgraph
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: module.cluster.digitalocean_kubernetes_cluster.dish
2020/08/09 19:26:38 [TRACE] vertex "module.cluster.digitalocean_kubernetes_cluster.dish": expanding dynamic subgraph
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.helm_repository.bitnami - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:38 [DEBUG] ReferenceTransformer: "data.helm_repository.bitnami" references: []
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:38 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.bitnami": entering dynamic subgraph
2020/08/09 19:26:38 [TRACE] dag/walk: updating graph
2020/08/09 19:26:38 [TRACE] dag/walk: added new vertex: "data.helm_repository.bitnami"
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "data.helm_repository.bitnami"
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.bitnami": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.bitnami": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: data.helm_repository.bitnami
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: data.local_file.rio-custom-domain
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.rio-custom-domain": expanding dynamic subgraph
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.local_file.rio-custom-domain - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:38 [TRACE] EvalWriteState: writing current state object for kubernetes_ingress.docker-registry-ingress
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:38 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.metrics-server
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:38 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.cert-manager
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:38 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.docker-config-json
2020/08/09 19:26:38 [DEBUG] ReferenceTransformer: "data.local_file.rio-custom-domain" references: []
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.rio-custom-domain": entering dynamic subgraph
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:38 [TRACE] dag/walk: updating graph
2020/08/09 19:26:38 [TRACE] dag/walk: added new vertex: "data.local_file.rio-custom-domain"
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "data.local_file.rio-custom-domain"
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.rio-custom-domain": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.rio-custom-domain": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: data.local_file.rio-custom-domain
2020/08/09 19:26:38 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_secret.docker-config-json
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: kubernetes_secret.docker-config-json
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_secret.docker-config-json": visit complete
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_secret.docker-config-json": dynamic subgraph completed successfully
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_secret.docker-config-json": visit complete
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: data.helm_repository.stable
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.stable": expanding dynamic subgraph
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: data.helm_repository.jetstack
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.jetstack": expanding dynamic subgraph
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.helm_repository.stable - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:38 [DEBUG] ReferenceTransformer: "data.helm_repository.stable" references: []
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.stable": entering dynamic subgraph
2020/08/09 19:26:38 [TRACE] dag/walk: updating graph
2020/08/09 19:26:38 [TRACE] dag/walk: added new vertex: "data.helm_repository.stable"
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "data.helm_repository.stable"
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.stable": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.stable": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: data.helm_repository.stable
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.helm_repository.jetstack - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:38 [DEBUG] ReferenceTransformer: "data.helm_repository.jetstack" references: []
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.jetstack": entering dynamic subgraph
2020/08/09 19:26:38 [TRACE] dag/walk: updating graph
2020/08/09 19:26:38 [TRACE] dag/walk: added new vertex: "data.helm_repository.jetstack"
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "data.helm_repository.jetstack"
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.jetstack": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.jetstack": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: data.helm_repository.jetstack
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:38 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_namespace.metrics-server
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: kubernetes_namespace.metrics-server
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_namespace.metrics-server": visit complete
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_namespace.metrics-server": dynamic subgraph completed successfully
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_namespace.metrics-server": visit complete
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  module.cluster.digitalocean_kubernetes_cluster.dish - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:38 [DEBUG] ReferenceTransformer: "module.cluster.digitalocean_kubernetes_cluster.dish" references: []
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:38 [TRACE] vertex "module.cluster.digitalocean_kubernetes_cluster.dish": entering dynamic subgraph
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:38 [TRACE] dag/walk: updating graph
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:38 [TRACE] dag/walk: added new vertex: "module.cluster.digitalocean_kubernetes_cluster.dish"
2020/08/09 19:26:38 [TRACE] EvalWriteState: writing current state object for kubernetes_ingress.sentry-ingress
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "module.cluster.digitalocean_kubernetes_cluster.dish"
2020/08/09 19:26:38 [TRACE] vertex "module.cluster.digitalocean_kubernetes_cluster.dish": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:38 [TRACE] vertex "module.cluster.digitalocean_kubernetes_cluster.dish": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: module.cluster.digitalocean_kubernetes_cluster.dish
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: data.helm_repository.sentry
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.sentry": expanding dynamic subgraph
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.helm_repository.sentry - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:38 [DEBUG] ReferenceTransformer: "data.helm_repository.sentry" references: []
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.sentry": entering dynamic subgraph
2020/08/09 19:26:38 [TRACE] dag/walk: updating graph
2020/08/09 19:26:38 [TRACE] dag/walk: added new vertex: "data.helm_repository.sentry"
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "data.helm_repository.sentry"
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.sentry": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.sentry": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: data.helm_repository.sentry
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:38 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_ingress.sentry-ingress
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: kubernetes_ingress.sentry-ingress
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_ingress.sentry-ingress": visit complete
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_ingress.sentry-ingress": dynamic subgraph completed successfully
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_ingress.sentry-ingress": visit complete
2020/08/09 19:26:38 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_ingress.docker-registry-ingress
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: kubernetes_ingress.docker-registry-ingress
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: data.helm_repository.incubator
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_ingress.docker-registry-ingress": visit complete
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.incubator": expanding dynamic subgraph
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_ingress.docker-registry-ingress": dynamic subgraph completed successfully
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_ingress.docker-registry-ingress": visit complete
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.helm_repository.incubator - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:38 [DEBUG] ReferenceTransformer: "data.helm_repository.incubator" references: []
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.incubator": entering dynamic subgraph
2020/08/09 19:26:38 [TRACE] dag/walk: updating graph
2020/08/09 19:26:38 [TRACE] dag/walk: added new vertex: "data.helm_repository.incubator"
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "data.helm_repository.incubator"
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.incubator": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.incubator": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: data.helm_repository.incubator
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: helm_release.sentry-k8s-erros
2020/08/09 19:26:38 [TRACE] vertex "helm_release.sentry-k8s-erros": expanding dynamic subgraph
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  helm_release.sentry-k8s-erros - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:38 [DEBUG] ReferenceTransformer: "helm_release.sentry-k8s-erros" references: []
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:38 [TRACE] vertex "helm_release.sentry-k8s-erros": entering dynamic subgraph
2020/08/09 19:26:38 [TRACE] dag/walk: updating graph
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: data.helm_repository.timescale
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: helm_release.prometheus-operator
2020/08/09 19:26:38 [TRACE] dag/walk: added new vertex: "helm_release.sentry-k8s-erros"
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.timescale": expanding dynamic subgraph
2020/08/09 19:26:38 [TRACE] vertex "helm_release.prometheus-operator": expanding dynamic subgraph
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "helm_release.sentry-k8s-erros"
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: helm_release.docker-registry
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.helm_repository.timescale - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:38 [TRACE] vertex "helm_release.sentry-k8s-erros": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: helm_release.postgres-ha
2020/08/09 19:26:38 [TRACE] vertex "helm_release.sentry-k8s-erros": evaluating
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: helm_release.sentry-k8s-erros
2020/08/09 19:26:38 [TRACE] vertex "helm_release.docker-registry": expanding dynamic subgraph
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:38 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_namespace.cert-manager
2020/08/09 19:26:38 [TRACE] vertex "helm_release.postgres-ha": expanding dynamic subgraph
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: kubernetes_namespace.cert-manager
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_namespace.cert-manager": visit complete
2020/08/09 19:26:38 [DEBUG] ReferenceTransformer: "data.helm_repository.timescale" references: []
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_namespace.cert-manager": dynamic subgraph completed successfully
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_namespace.cert-manager": visit complete
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.timescale": entering dynamic subgraph
2020/08/09 19:26:38 [TRACE] dag/walk: updating graph
2020/08/09 19:26:38 [TRACE] dag/walk: added new vertex: "data.helm_repository.timescale"
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "data.helm_repository.timescale"
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.timescale": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.timescale": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: data.helm_repository.timescale
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  helm_release.prometheus-operator - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:38 [TRACE] Re-validating config for "kubernetes_ingress.grafana-ingress"
2020/08/09 19:26:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:38 [DEBUG] ReferenceTransformer: "helm_release.prometheus-operator" references: []
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:38 [TRACE] vertex "helm_release.prometheus-operator": entering dynamic subgraph
2020/08/09 19:26:38 [TRACE] dag/walk: updating graph
2020/08/09 19:26:38 [TRACE] dag/walk: added new vertex: "helm_release.prometheus-operator"
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "helm_release.prometheus-operator"
2020/08/09 19:26:38 [TRACE] vertex "helm_release.prometheus-operator": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: helm_release.redis
2020/08/09 19:26:38 [TRACE] vertex "helm_release.prometheus-operator": evaluating
2020/08/09 19:26:38 [TRACE] vertex "helm_release.redis": expanding dynamic subgraph
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: helm_release.prometheus-operator
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  helm_release.redis - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:38 [DEBUG] ReferenceTransformer: "helm_release.redis" references: []
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:38 [TRACE] EvalWriteState: writing current state object for kubernetes_persistent_volume_claim.image-proxy
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:38 [TRACE] vertex "helm_release.redis": entering dynamic subgraph
2020/08/09 19:26:38 [TRACE] dag/walk: updating graph
2020/08/09 19:26:38 [TRACE] dag/walk: added new vertex: "helm_release.redis"
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "helm_release.redis"
2020/08/09 19:26:38 [TRACE] vertex "helm_release.redis": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:38 [TRACE] vertex "helm_release.redis": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: helm_release.redis
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: helm_release.metrics-server
2020/08/09 19:26:38 [TRACE] vertex "helm_release.metrics-server": expanding dynamic subgraph
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  helm_release.metrics-server - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:38 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_persistent_volume_claim.image-proxy
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: kubernetes_persistent_volume_claim.image-proxy
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_persistent_volume_claim.image-proxy": visit complete
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_persistent_volume_claim.image-proxy": dynamic subgraph completed successfully
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_persistent_volume_claim.image-proxy": visit complete
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for data.helm_repository.bitnami
2020/08/09 19:26:38 [DEBUG] ReferenceTransformer: "helm_release.metrics-server" references: []
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:38 [TRACE] vertex "helm_release.metrics-server": entering dynamic subgraph
2020/08/09 19:26:38 [TRACE] dag/walk: updating graph
2020/08/09 19:26:38 [TRACE] dag/walk: added new vertex: "helm_release.metrics-server"
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "helm_release.metrics-server"
2020/08/09 19:26:38 [TRACE] vertex "helm_release.metrics-server": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalIf
2020/08/09 19:26:38 [TRACE] vertex "helm_release.metrics-server": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: helm_release.metrics-server
2020/08/09 19:26:38 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalIf, early exit err: early exit
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence, early exit err: early exit
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: data.helm_repository.bitnami
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.bitnami": visit complete
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: helm_release.sentry
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  helm_release.postgres-ha - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.bitnami": dynamic subgraph completed successfully
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:38 [TRACE] vertex "helm_release.sentry": expanding dynamic subgraph
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.bitnami": visit complete
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: data.local_file.cert_manager_setup
2020/08/09 19:26:38 [DEBUG] Resource instance state not found for node "helm_release.postgres-ha", instance helm_release.postgres-ha
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.cert_manager_setup": expanding dynamic subgraph
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: helm_release.timescaledb
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: data.local_file.rio-app-domains
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.rio-app-domains": expanding dynamic subgraph
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for data.local_file.rio-custom-domain
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for data.helm_repository.jetstack
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:38 [TRACE] vertex "helm_release.timescaledb": expanding dynamic subgraph
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for data.helm_repository.stable
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for data.helm_repository.sentry
2020/08/09 19:26:38 [TRACE] module.cluster: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] module.cluster: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] module.cluster: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for module.cluster.digitalocean_kubernetes_cluster.dish
2020/08/09 19:26:38 [DEBUG] ReferenceTransformer: "helm_release.postgres-ha" references: []
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:38 [TRACE] vertex "helm_release.postgres-ha": entering dynamic subgraph
2020/08/09 19:26:38 [TRACE] dag/walk: updating graph
2020/08/09 19:26:38 [TRACE] dag/walk: added new vertex: "helm_release.postgres-ha"
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "helm_release.postgres-ha"
2020/08/09 19:26:38 [TRACE] vertex "helm_release.postgres-ha": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:38 [TRACE] vertex "helm_release.postgres-ha": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: helm_release.postgres-ha
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalIf
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalIf, early exit err: early exit
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence, early exit err: early exit
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: data.helm_repository.stable
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.stable": visit complete
2020/08/09 19:26:38 [TRACE] UpgradeResourceState: schema version of module.cluster.digitalocean_kubernetes_cluster.dish is still 2; calling provider "registry.terraform.io/-/digitalocean" for any other minor fixups
2020/08/09 19:26:38 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.stable": dynamic subgraph completed successfully
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.stable": visit complete
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "helm_release.nginx-ingress"
2020/08/09 19:26:38 [TRACE] vertex "helm_release.nginx-ingress": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:38 [TRACE] vertex "helm_release.nginx-ingress": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: helm_release.nginx-ingress
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalIf
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalIf
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalIf, early exit err: early exit
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence, early exit err: early exit
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: data.helm_repository.sentry
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalIf, early exit err: early exit
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.sentry": visit complete
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence, early exit err: early exit
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: data.local_file.rio-custom-domain
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.rio-custom-domain": visit complete
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.rio-custom-domain": dynamic subgraph completed successfully
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.rio-custom-domain": visit complete
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for helm_release.sentry-k8s-erros
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.sentry": dynamic subgraph completed successfully
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for data.helm_repository.incubator
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.sentry": visit complete
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalIf
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for data.helm_repository.timescale
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalIf, early exit err: early exit
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence, early exit err: early exit
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: data.helm_repository.jetstack
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.jetstack": visit complete
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.jetstack": dynamic subgraph completed successfully
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.jetstack": visit complete
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "helm_release.cert-manager"
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  helm_release.docker-registry - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:38 [TRACE] vertex "helm_release.cert-manager": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:38 [TRACE] vertex "helm_release.cert-manager": evaluating
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for helm_release.prometheus-operator
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: helm_release.cert-manager
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:38 [DEBUG] ReferenceTransformer: "helm_release.docker-registry" references: []
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:38 [TRACE] vertex "helm_release.docker-registry": entering dynamic subgraph
2020/08/09 19:26:38 [TRACE] dag/walk: updating graph
2020/08/09 19:26:38 [TRACE] dag/walk: added new vertex: "helm_release.docker-registry"
2020/08/09 19:26:38 [TRACE] UpgradeResourceState: schema version of helm_release.sentry-k8s-erros is still 0; calling provider "registry.terraform.io/-/helm" for any other minor fixups
2020/08/09 19:26:38 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:38 [TRACE] UpgradeResourceState: schema version of helm_release.prometheus-operator is still 0; calling provider "registry.terraform.io/-/helm" for any other minor fixups
2020/08/09 19:26:38 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "helm_release.docker-registry"
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalIf
2020/08/09 19:26:38 [TRACE] vertex "helm_release.docker-registry": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:38 [TRACE] vertex "helm_release.docker-registry": evaluating
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalIf, early exit err: early exit
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: helm_release.docker-registry
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence, early exit err: early exit
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: data.helm_repository.incubator
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.incubator": visit complete
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.incubator": dynamic subgraph completed successfully
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.incubator": visit complete
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalIf
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for helm_release.redis
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalIf, early exit err: early exit
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence, early exit err: early exit
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: data.helm_repository.timescale
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.timescale": visit complete
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: kubernetes_secret.timescale-credentials
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.timescale": dynamic subgraph completed successfully
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_secret.timescale-credentials": expanding dynamic subgraph
2020/08/09 19:26:38 [TRACE] vertex "data.helm_repository.timescale": visit complete
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for helm_release.metrics-server
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] UpgradeResourceState: schema version of helm_release.metrics-server is still 0; calling provider "registry.terraform.io/-/helm" for any other minor fixups
2020/08/09 19:26:38 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for helm_release.postgres-ha
2020/08/09 19:26:38 [TRACE] EvalReadState: no state present for helm_release.postgres-ha
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:38 [TRACE] UpgradeResourceState: schema version of helm_release.redis is still 0; calling provider "registry.terraform.io/-/helm" for any other minor fixups
2020/08/09 19:26:38 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  helm_release.timescaledb - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:38 [DEBUG] ReferenceTransformer: "helm_release.timescaledb" references: []
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:38 [TRACE] vertex "helm_release.timescaledb": entering dynamic subgraph
2020/08/09 19:26:38 [TRACE] dag/walk: updating graph
2020/08/09 19:26:38 [TRACE] dag/walk: added new vertex: "helm_release.timescaledb"
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "helm_release.timescaledb"
2020/08/09 19:26:38 [TRACE] vertex "helm_release.timescaledb": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:38 [TRACE] vertex "helm_release.timescaledb": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: helm_release.timescaledb
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: kubernetes_secret.timescale-certificates
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_secret.timescale-certificates": expanding dynamic subgraph
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_secret.timescale-certificates - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:38 [DEBUG] ReferenceTransformer: "kubernetes_secret.timescale-certificates" references: []
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_secret.timescale-certificates": entering dynamic subgraph
2020/08/09 19:26:38 [TRACE] dag/walk: updating graph
2020/08/09 19:26:38 [TRACE] dag/walk: added new vertex: "kubernetes_secret.timescale-certificates"
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "kubernetes_secret.timescale-certificates"
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_secret.timescale-certificates": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_secret.timescale-certificates": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: kubernetes_secret.timescale-certificates
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  helm_release.sentry - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:38 [TRACE] Re-validating config for "helm_release.postgres-ha"
2020/08/09 19:26:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: data.local_file.rio-yaml
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.rio-yaml": expanding dynamic subgraph
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:38 [DEBUG] ReferenceTransformer: "helm_release.sentry" references: []
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:38 [TRACE] vertex "helm_release.sentry": entering dynamic subgraph
2020/08/09 19:26:38 [TRACE] dag/walk: updating graph
2020/08/09 19:26:38 [TRACE] dag/walk: added new vertex: "helm_release.sentry"
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "helm_release.sentry"
2020/08/09 19:26:38 [TRACE] vertex "helm_release.sentry": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:38 [TRACE] vertex "helm_release.sentry": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: helm_release.sentry
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_secret.timescale-credentials - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:38 [DEBUG] ReferenceTransformer: "kubernetes_secret.timescale-credentials" references: []
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_secret.timescale-credentials": entering dynamic subgraph
2020/08/09 19:26:38 [TRACE] dag/walk: updating graph
2020/08/09 19:26:38 [TRACE] dag/walk: added new vertex: "kubernetes_secret.timescale-credentials"
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "kubernetes_secret.timescale-credentials"
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_secret.timescale-credentials": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_secret.timescale-credentials": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: kubernetes_secret.timescale-credentials
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.local_file.rio-yaml - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:38 [DEBUG] ReferenceTransformer: "data.local_file.rio-yaml" references: []
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.rio-yaml": entering dynamic subgraph
2020/08/09 19:26:38 [TRACE] dag/walk: updating graph
2020/08/09 19:26:38 [TRACE] dag/walk: added new vertex: "data.local_file.rio-yaml"
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "data.local_file.rio-yaml"
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.rio-yaml": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.rio-yaml": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: data.local_file.rio-yaml
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: helm_release.cert-manager
2020/08/09 19:26:38 [TRACE] vertex "helm_release.cert-manager": expanding dynamic subgraph
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  helm_release.cert-manager - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:38 [TRACE] Re-validating config for "helm_release.sentry-k8s-erros"
2020/08/09 19:26:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for helm_release.docker-registry
2020/08/09 19:26:38 [DEBUG] ReferenceTransformer: "helm_release.cert-manager" references: []
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:38 [TRACE] vertex "helm_release.cert-manager": entering dynamic subgraph
2020/08/09 19:26:38 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:38 [TRACE] UpgradeResourceState: schema version of helm_release.docker-registry is still 0; calling provider "registry.terraform.io/-/helm" for any other minor fixups
2020/08/09 19:26:38 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.local_file.cert_manager_setup - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:38 [TRACE] dag/walk: updating graph
2020/08/09 19:26:38 [TRACE] dag/walk: added new vertex: "helm_release.cert-manager"
2020/08/09 19:26:38 [DEBUG] ReferenceTransformer: "data.local_file.cert_manager_setup" references: []
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "helm_release.cert-manager"
2020/08/09 19:26:38 [TRACE] vertex "helm_release.cert-manager": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:38 [TRACE] vertex "helm_release.cert-manager": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: helm_release.cert-manager
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.cert_manager_setup": entering dynamic subgraph
2020/08/09 19:26:38 [TRACE] dag/walk: updating graph
2020/08/09 19:26:38 [TRACE] dag/walk: added new vertex: "data.local_file.cert_manager_setup"
2020/08/09 19:26:38 [TRACE] Re-validating config for "helm_release.metrics-server"
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "data.local_file.cert_manager_setup"
2020/08/09 19:26:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.cert_manager_setup": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.cert_manager_setup": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: data.local_file.cert_manager_setup
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.local_file.rio-app-domains - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:38 [DEBUG] ReferenceTransformer: "data.local_file.rio-app-domains" references: []
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.rio-app-domains": entering dynamic subgraph
2020/08/09 19:26:38 [TRACE] dag/walk: updating graph
2020/08/09 19:26:38 [TRACE] dag/walk: added new vertex: "data.local_file.rio-app-domains"
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "data.local_file.rio-app-domains"
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.rio-app-domains": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.rio-app-domains": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: data.local_file.rio-app-domains
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: helm_release.nginx-ingress
2020/08/09 19:26:38 [TRACE] vertex "helm_release.nginx-ingress": expanding dynamic subgraph
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  helm_release.nginx-ingress - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for helm_release.timescaledb
2020/08/09 19:26:38 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:38 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:38 [TRACE] EvalWriteState: writing current state object for kubernetes_ingress.grafana-ingress
2020/08/09 19:26:38 [DEBUG] ReferenceTransformer: "helm_release.nginx-ingress" references: []
2020-08-09T19:26:38.252+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:38 [DEBUG] [resourceDiff: postgres-ha] Start
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:38 [TRACE] module.cluster: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:38 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:38 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:38 [TRACE] module.cluster: eval: *terraform.EvalDiff
2020/08/09 19:26:38 [TRACE] UpgradeResourceState: schema version of helm_release.timescaledb is still 0; calling provider "registry.terraform.io/-/helm" for any other minor fixups
2020/08/09 19:26:38 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:38 [TRACE] vertex "helm_release.nginx-ingress": entering dynamic subgraph
2020/08/09 19:26:38 [TRACE] dag/walk: updating graph
2020/08/09 19:26:38 [TRACE] dag/walk: added new vertex: "helm_release.nginx-ingress"
2020/08/09 19:26:38 [TRACE] Re-validating config for "module.cluster.digitalocean_kubernetes_cluster.dish"
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "helm_release.nginx-ingress"
2020/08/09 19:26:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:38 [TRACE] vertex "helm_release.nginx-ingress": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:38 [TRACE] vertex "helm_release.nginx-ingress": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: helm_release.nginx-ingress
2020/08/09 19:26:38 [TRACE] Re-validating config for "helm_release.docker-registry"
2020/08/09 19:26:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:38 [TRACE] Re-validating config for "helm_release.prometheus-operator"
2020/08/09 19:26:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:38 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_ingress.grafana-ingress
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: kubernetes_ingress.grafana-ingress
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_ingress.grafana-ingress": visit complete
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_ingress.grafana-ingress": dynamic subgraph completed successfully
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_ingress.grafana-ingress": visit complete
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for kubernetes_secret.timescale-certificates
2020/08/09 19:26:38 [TRACE] UpgradeResourceState: schema version of kubernetes_secret.timescale-certificates is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:38 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:38 [TRACE] Re-validating config for "helm_release.redis"
2020/08/09 19:26:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:38 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:38 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:38 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:38 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalDiff
2020-08-09T19:26:38.260+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:38 [DEBUG] [resourceDiff: sentry-k8s-errors] Start
2020-08-09T19:26:38.260+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:38 [DEBUG] [resourceDiff: metrics-server] Start
2020/08/09 19:26:38 [TRACE] Re-validating config for "helm_release.timescaledb"
2020/08/09 19:26:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:38 [TRACE] GRPCProvider: PlanResourceChange
2020-08-09T19:26:38.264+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:38 [DEBUG] [resourceDiff: docker-registry] Start
2020-08-09T19:26:38.264+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:38 [DEBUG] [resourceDiff: prometheus-operator] Start
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalDiff
2020-08-09T19:26:38.264+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:38 [DEBUG] [resourceDiff: redis] Start
2020/08/09 19:26:38 [TRACE] Re-validating config for "kubernetes_secret.timescale-certificates"
2020/08/09 19:26:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020-08-09T19:26:38.265+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:38 [DEBUG] [resourceDiff: timescale] Start
2020/08/09 19:26:38 [TRACE] module.cluster: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:38 [TRACE] module.cluster: eval: *terraform.EvalWriteState
2020/08/09 19:26:38 [TRACE] EvalWriteState: writing current state object for module.cluster.digitalocean_kubernetes_cluster.dish
2020/08/09 19:26:38 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:38 [TRACE] module.cluster: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:38 [TRACE] EvalWriteDiff: recorded NoOp change for module.cluster.digitalocean_kubernetes_cluster.dish
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: module.cluster.digitalocean_kubernetes_cluster.dish
2020/08/09 19:26:38 [TRACE] vertex "module.cluster.digitalocean_kubernetes_cluster.dish": visit complete
2020/08/09 19:26:38 [TRACE] vertex "module.cluster.digitalocean_kubernetes_cluster.dish": dynamic subgraph completed successfully
2020/08/09 19:26:38 [TRACE] vertex "module.cluster.digitalocean_kubernetes_cluster.dish": visit complete
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "module.cluster.digitalocean_kubernetes_node_pool.ancillary"
2020/08/09 19:26:38 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ancillary": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:38 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ancillary": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: module.cluster.digitalocean_kubernetes_node_pool.ancillary
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "module.cluster.output.cluster-id"
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "module.cluster.digitalocean_kubernetes_node_pool.workers"
2020/08/09 19:26:38 [TRACE] vertex "module.cluster.output.cluster-id": starting visit (*terraform.NodeApplyableOutput)
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.workers": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:38 [TRACE] vertex "module.cluster.output.cluster-id": evaluating
2020/08/09 19:26:38 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.workers": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: module.cluster.output.cluster-id
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: module.cluster.digitalocean_kubernetes_node_pool.workers
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for helm_release.sentry
2020/08/09 19:26:38 [TRACE] UpgradeResourceState: schema version of helm_release.sentry is still 0; calling provider "registry.terraform.io/-/helm" for any other minor fixups
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "module.cluster.digitalocean_kubernetes_node_pool.ci"
2020/08/09 19:26:38 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:38 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ci": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:38 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ci": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: module.cluster.digitalocean_kubernetes_node_pool.ci
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:38 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.timescale-certificates
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:38 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_secret.timescale-certificates
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: kubernetes_secret.timescale-certificates
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_secret.timescale-certificates": visit complete
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_secret.timescale-certificates": dynamic subgraph completed successfully
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_secret.timescale-certificates": visit complete
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for kubernetes_secret.timescale-credentials
2020/08/09 19:26:38 [TRACE] UpgradeResourceState: schema version of kubernetes_secret.timescale-credentials is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:38 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:38 [TRACE] Re-validating config for "kubernetes_secret.timescale-credentials"
2020/08/09 19:26:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:38 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:38 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.timescale-credentials
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:38 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_secret.timescale-credentials
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: kubernetes_secret.timescale-credentials
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_secret.timescale-credentials": visit complete
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_secret.timescale-credentials": dynamic subgraph completed successfully
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_secret.timescale-credentials": visit complete
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for data.local_file.rio-yaml
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalIf
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalIf, early exit err: early exit
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence, early exit err: early exit
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: data.local_file.rio-yaml
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.rio-yaml": visit complete
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.rio-yaml": dynamic subgraph completed successfully
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.rio-yaml": visit complete
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for helm_release.cert-manager
2020/08/09 19:26:38 [TRACE] UpgradeResourceState: schema version of helm_release.cert-manager is still 0; calling provider "registry.terraform.io/-/helm" for any other minor fixups
2020/08/09 19:26:38 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:38 [TRACE] Re-validating config for "helm_release.cert-manager"
2020/08/09 19:26:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:38 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:38 [TRACE] Re-validating config for "helm_release.sentry"
2020/08/09 19:26:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020-08-09T19:26:38.277+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:38 [DEBUG] [resourceDiff: cert-manager] Start
2020/08/09 19:26:38 [TRACE] GRPCProvider: PlanResourceChange
2020-08-09T19:26:38.281+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:38 [DEBUG] [resourceDiff: sentry] Start
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:38 [TRACE] Re-validating config for "kubernetes_deployment.buildkitd"
2020/08/09 19:26:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:38 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:38 [WARN] Provider "registry.terraform.io/-/kubernetes" produced an invalid plan for kubernetes_deployment.buildkitd, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .spec[0].strategy: block count in plan (1) disagrees with count in config (0)
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:38 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.buildkitd
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:38 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_deployment.buildkitd
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: kubernetes_deployment.buildkitd
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_deployment.buildkitd": visit complete
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_deployment.buildkitd": dynamic subgraph completed successfully
2020/08/09 19:26:38 [TRACE] vertex "kubernetes_deployment.buildkitd": visit complete
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for data.local_file.cert_manager_setup
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalIf
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalIf, early exit err: early exit
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence, early exit err: early exit
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: data.local_file.cert_manager_setup
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.cert_manager_setup": visit complete
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.cert_manager_setup": dynamic subgraph completed successfully
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.cert_manager_setup": visit complete
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for data.local_file.rio-app-domains
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalIf
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalIf, early exit err: early exit
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence, early exit err: early exit
2020/08/09 19:26:38 [TRACE] [walkPlan] Exiting eval tree: data.local_file.rio-app-domains
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.rio-app-domains": visit complete
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.rio-app-domains": dynamic subgraph completed successfully
2020/08/09 19:26:38 [TRACE] vertex "data.local_file.rio-app-domains": visit complete
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:38 [TRACE] EvalReadState: reading state for helm_release.nginx-ingress
2020/08/09 19:26:38 [TRACE] UpgradeResourceState: schema version of helm_release.nginx-ingress is still 0; calling provider "registry.terraform.io/-/helm" for any other minor fixups
2020/08/09 19:26:38 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:38 [TRACE] dag/walk: visiting "provider.local (close)"
2020/08/09 19:26:38 [TRACE] vertex "provider.local (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/08/09 19:26:38 [TRACE] vertex "provider.local (close)": evaluating
2020/08/09 19:26:38 [TRACE] [walkPlan] Entering eval tree: provider.local (close)
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:38 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:38 [TRACE] Re-validating config for "helm_release.nginx-ingress"
2020/08/09 19:26:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:38 [TRACE] GRPCProvider: PlanResourceChange
2020-08-09T19:26:38.759+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:38 [DEBUG] [resourceDiff: nginx-ingress] Start
2020-08-09T19:26:39.217+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:39 [DEBUG] [resourceDiff: postgres-ha] Got chart
2020-08-09T19:26:39.217+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:39 [DEBUG] [resourceDiff: postgres-ha] Release validated
2020/08/09 19:26:39 [WARN] Provider "registry.terraform.io/-/helm" produced an invalid plan for helm_release.postgres-ha, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .recreate_pods: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .replace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .skip_crds: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .dependency_update: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .disable_webhooks: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .max_history: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .atomic: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .disable_openapi_validation: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .lint: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .timeout: planned value cty.NumberIntVal(300) does not match config value cty.NullVal(cty.Number)
      - .wait: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .reuse_values: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .disable_crd_hooks: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .render_subchart_notes: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .verify: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .cleanup_on_fail: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .create_namespace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .force_update: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .reset_values: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/08/09 19:26:39 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:39 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:39 [TRACE] EvalWriteState: writing current state object for helm_release.postgres-ha
2020/08/09 19:26:39 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:39 [TRACE] EvalWriteDiff: recorded Create change for helm_release.postgres-ha
2020/08/09 19:26:39 [TRACE] [walkPlan] Exiting eval tree: helm_release.postgres-ha
2020/08/09 19:26:39 [TRACE] vertex "helm_release.postgres-ha": visit complete
2020/08/09 19:26:39 [TRACE] vertex "helm_release.postgres-ha": dynamic subgraph completed successfully
2020/08/09 19:26:39 [TRACE] vertex "helm_release.postgres-ha": visit complete
2020/08/09 19:26:39 [TRACE] module.cluster: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:39 [TRACE] [walkPlan] Exiting eval tree: module.cluster.digitalocean_kubernetes_node_pool.ancillary
2020/08/09 19:26:39 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ancillary": expanding dynamic subgraph
2020/08/09 19:26:39 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:39 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  module.cluster.digitalocean_kubernetes_node_pool.ancillary - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:39 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:39 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:39 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:39 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:39 [TRACE] module.cluster: eval: *terraform.EvalSequence
2020/08/09 19:26:39 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:39 [TRACE] module.cluster: eval: *terraform.EvalOpFilter
2020/08/09 19:26:39 [TRACE] module.cluster: eval: *terraform.EvalWriteOutput
2020/08/09 19:26:39 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:39 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:39 [DEBUG] ReferenceTransformer: "module.cluster.digitalocean_kubernetes_node_pool.ancillary" references: []
2020/08/09 19:26:39 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:39 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:39 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:39 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ancillary": entering dynamic subgraph
2020/08/09 19:26:39 [TRACE] dag/walk: updating graph
2020/08/09 19:26:39 [TRACE] dag/walk: added new vertex: "module.cluster.digitalocean_kubernetes_node_pool.ancillary"
2020/08/09 19:26:39 [TRACE] dag/walk: visiting "module.cluster.digitalocean_kubernetes_node_pool.ancillary"
2020/08/09 19:26:39 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ancillary": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:39 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ancillary": evaluating
2020/08/09 19:26:39 [TRACE] [walkPlan] Entering eval tree: module.cluster.digitalocean_kubernetes_node_pool.ancillary
2020/08/09 19:26:39 [TRACE] EvalWriteOutput: Saving value for module.cluster.output.cluster-id in state
2020/08/09 19:26:39 [TRACE] EvalWriteOutput: Saving Create change for module.cluster.output.cluster-id in changeset
2020/08/09 19:26:39 [TRACE] [walkPlan] Exiting eval tree: module.cluster.output.cluster-id
2020/08/09 19:26:39 [TRACE] vertex "module.cluster.output.cluster-id": visit complete
2020/08/09 19:26:39 [TRACE] module.cluster: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:39 [TRACE] [walkPlan] Exiting eval tree: module.cluster.digitalocean_kubernetes_node_pool.workers
2020/08/09 19:26:39 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.workers": expanding dynamic subgraph
2020/08/09 19:26:39 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:39 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  module.cluster.digitalocean_kubernetes_node_pool.workers - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:39 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:39 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:39 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:39 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:39 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:39 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:39 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:39 [TRACE] module.cluster: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:39 [DEBUG] ReferenceTransformer: "module.cluster.digitalocean_kubernetes_node_pool.workers" references: []
2020/08/09 19:26:39 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:39 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:39 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:39 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.workers": entering dynamic subgraph
2020/08/09 19:26:39 [TRACE] dag/walk: updating graph
2020/08/09 19:26:39 [TRACE] dag/walk: added new vertex: "module.cluster.digitalocean_kubernetes_node_pool.workers"
2020/08/09 19:26:39 [TRACE] dag/walk: visiting "module.cluster.digitalocean_kubernetes_node_pool.workers"
2020/08/09 19:26:39 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.workers": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:39 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.workers": evaluating
2020/08/09 19:26:39 [TRACE] [walkPlan] Entering eval tree: module.cluster.digitalocean_kubernetes_node_pool.workers
2020/08/09 19:26:39 [TRACE] [walkPlan] Exiting eval tree: module.cluster.digitalocean_kubernetes_node_pool.ci
2020/08/09 19:26:39 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ci": expanding dynamic subgraph
2020/08/09 19:26:39 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:39 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  module.cluster.digitalocean_kubernetes_node_pool.ci - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:39 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:39 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:39 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:39 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:39 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:39 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:39 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:39 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/08/09 19:26:39 [DEBUG] ReferenceTransformer: "module.cluster.digitalocean_kubernetes_node_pool.ci" references: []
2020/08/09 19:26:39 [TRACE] GRPCProvider: Close
2020/08/09 19:26:39 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:39 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:39 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:39 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ci": entering dynamic subgraph
2020/08/09 19:26:39 [TRACE] dag/walk: updating graph
2020/08/09 19:26:39 [TRACE] dag/walk: added new vertex: "module.cluster.digitalocean_kubernetes_node_pool.ci"
2020/08/09 19:26:39 [TRACE] dag/walk: visiting "module.cluster.digitalocean_kubernetes_node_pool.ci"
2020/08/09 19:26:39 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ci": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:39 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ci": evaluating
2020/08/09 19:26:39 [TRACE] [walkPlan] Entering eval tree: module.cluster.digitalocean_kubernetes_node_pool.ci
2020-08-09T19:26:39.221+0300 [DEBUG] plugin: plugin process exited: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-local_v1.4.0_x4 pid=4111230
2020-08-09T19:26:39.221+0300 [DEBUG] plugin: plugin exited
2020/08/09 19:26:39 [TRACE] [walkPlan] Exiting eval tree: provider.local (close)
2020/08/09 19:26:39 [TRACE] vertex "provider.local (close)": visit complete
2020/08/09 19:26:39 [TRACE] module.cluster: eval: *terraform.EvalSequence
2020/08/09 19:26:39 [TRACE] module.cluster: eval: *terraform.EvalGetProvider
2020/08/09 19:26:39 [TRACE] module.cluster: eval: *terraform.EvalReadState
2020/08/09 19:26:39 [TRACE] EvalReadState: reading state for module.cluster.digitalocean_kubernetes_node_pool.ancillary
2020/08/09 19:26:39 [TRACE] UpgradeResourceState: schema version of module.cluster.digitalocean_kubernetes_node_pool.ancillary is still 1; calling provider "registry.terraform.io/-/digitalocean" for any other minor fixups
2020/08/09 19:26:39 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:39 [TRACE] module.cluster: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:39 [TRACE] module.cluster: eval: *terraform.EvalDiff
2020/08/09 19:26:39 [TRACE] Re-validating config for "module.cluster.digitalocean_kubernetes_node_pool.ancillary"
2020/08/09 19:26:39 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:39 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:39 [TRACE] module.cluster: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:39 [TRACE] module.cluster: eval: *terraform.EvalWriteState
2020/08/09 19:26:39 [TRACE] EvalWriteState: writing current state object for module.cluster.digitalocean_kubernetes_node_pool.ancillary
2020/08/09 19:26:39 [TRACE] module.cluster: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:39 [TRACE] EvalWriteDiff: recorded NoOp change for module.cluster.digitalocean_kubernetes_node_pool.ancillary
2020/08/09 19:26:39 [TRACE] [walkPlan] Exiting eval tree: module.cluster.digitalocean_kubernetes_node_pool.ancillary
2020/08/09 19:26:39 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ancillary": visit complete
2020/08/09 19:26:39 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ancillary": dynamic subgraph completed successfully
2020/08/09 19:26:39 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ancillary": visit complete
2020/08/09 19:26:39 [TRACE] module.cluster: eval: *terraform.EvalSequence
2020/08/09 19:26:39 [TRACE] module.cluster: eval: *terraform.EvalGetProvider
2020/08/09 19:26:39 [TRACE] module.cluster: eval: *terraform.EvalReadState
2020/08/09 19:26:39 [TRACE] EvalReadState: reading state for module.cluster.digitalocean_kubernetes_node_pool.workers
2020/08/09 19:26:39 [TRACE] UpgradeResourceState: schema version of module.cluster.digitalocean_kubernetes_node_pool.workers is still 1; calling provider "registry.terraform.io/-/digitalocean" for any other minor fixups
2020/08/09 19:26:39 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:39 [TRACE] module.cluster: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:39 [TRACE] module.cluster: eval: *terraform.EvalDiff
2020/08/09 19:26:39 [TRACE] Re-validating config for "module.cluster.digitalocean_kubernetes_node_pool.workers"
2020/08/09 19:26:39 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:39 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:39 [TRACE] module.cluster: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:39 [TRACE] module.cluster: eval: *terraform.EvalWriteState
2020/08/09 19:26:39 [TRACE] EvalWriteState: writing current state object for module.cluster.digitalocean_kubernetes_node_pool.workers
2020/08/09 19:26:39 [TRACE] module.cluster: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:39 [TRACE] EvalWriteDiff: recorded NoOp change for module.cluster.digitalocean_kubernetes_node_pool.workers
2020/08/09 19:26:39 [TRACE] [walkPlan] Exiting eval tree: module.cluster.digitalocean_kubernetes_node_pool.workers
2020/08/09 19:26:39 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.workers": visit complete
2020/08/09 19:26:39 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.workers": dynamic subgraph completed successfully
2020/08/09 19:26:39 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.workers": visit complete
2020/08/09 19:26:39 [TRACE] module.cluster: eval: *terraform.EvalSequence
2020/08/09 19:26:39 [TRACE] module.cluster: eval: *terraform.EvalGetProvider
2020/08/09 19:26:39 [TRACE] module.cluster: eval: *terraform.EvalReadState
2020/08/09 19:26:39 [TRACE] EvalReadState: reading state for module.cluster.digitalocean_kubernetes_node_pool.ci
2020/08/09 19:26:39 [TRACE] UpgradeResourceState: schema version of module.cluster.digitalocean_kubernetes_node_pool.ci is still 1; calling provider "registry.terraform.io/-/digitalocean" for any other minor fixups
2020/08/09 19:26:39 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:39 [TRACE] module.cluster: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:39 [TRACE] module.cluster: eval: *terraform.EvalDiff
2020/08/09 19:26:39 [TRACE] Re-validating config for "module.cluster.digitalocean_kubernetes_node_pool.ci"
2020/08/09 19:26:39 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:39 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:39 [TRACE] module.cluster: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:39 [TRACE] module.cluster: eval: *terraform.EvalWriteState
2020/08/09 19:26:39 [TRACE] EvalWriteState: writing current state object for module.cluster.digitalocean_kubernetes_node_pool.ci
2020/08/09 19:26:39 [TRACE] module.cluster: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:39 [TRACE] EvalWriteDiff: recorded NoOp change for module.cluster.digitalocean_kubernetes_node_pool.ci
2020/08/09 19:26:39 [TRACE] [walkPlan] Exiting eval tree: module.cluster.digitalocean_kubernetes_node_pool.ci
2020/08/09 19:26:39 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ci": visit complete
2020/08/09 19:26:39 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ci": dynamic subgraph completed successfully
2020/08/09 19:26:39 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ci": visit complete
2020/08/09 19:26:39 [TRACE] dag/walk: visiting "module.cluster.provider.digitalocean (close)"
2020/08/09 19:26:39 [TRACE] vertex "module.cluster.provider.digitalocean (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/08/09 19:26:39 [TRACE] vertex "module.cluster.provider.digitalocean (close)": evaluating
2020/08/09 19:26:39 [TRACE] [walkPlan] Entering eval tree: module.cluster.provider.digitalocean (close)
2020/08/09 19:26:39 [TRACE] module.cluster: eval: *terraform.EvalCloseProvider
2020/08/09 19:26:39 [TRACE] GRPCProvider: Close
2020-08-09T19:26:39.229+0300 [DEBUG] plugin: plugin process exited: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-digitalocean_v1.22.0 pid=4111245
2020-08-09T19:26:39.229+0300 [DEBUG] plugin: plugin exited
2020/08/09 19:26:39 [TRACE] [walkPlan] Exiting eval tree: module.cluster.provider.digitalocean (close)
2020/08/09 19:26:39 [TRACE] vertex "module.cluster.provider.digitalocean (close)": visit complete
2020-08-09T19:26:39.553+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:39 [DEBUG] [resourceDiff: sentry-k8s-errors] Got chart
2020-08-09T19:26:39.553+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:39 [DEBUG] [resourceDiff: sentry-k8s-errors] Release validated
2020/08/09 19:26:39 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:39 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:39 [TRACE] EvalWriteState: writing current state object for helm_release.sentry-k8s-erros
2020/08/09 19:26:39 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:39 [TRACE] EvalWriteDiff: recorded NoOp change for helm_release.sentry-k8s-erros
2020/08/09 19:26:39 [TRACE] [walkPlan] Exiting eval tree: helm_release.sentry-k8s-erros
2020/08/09 19:26:39 [TRACE] vertex "helm_release.sentry-k8s-erros": visit complete
2020/08/09 19:26:39 [TRACE] vertex "helm_release.sentry-k8s-erros": dynamic subgraph completed successfully
2020/08/09 19:26:39 [TRACE] vertex "helm_release.sentry-k8s-erros": visit complete
2020-08-09T19:26:40.658+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:40 [DEBUG] [resourceDiff: metrics-server] Got chart
2020-08-09T19:26:40.658+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:40 [DEBUG] [resourceDiff: metrics-server] Release validated
2020/08/09 19:26:40 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:40 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:40 [TRACE] EvalWriteState: writing current state object for helm_release.metrics-server
2020/08/09 19:26:40 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:40 [TRACE] EvalWriteDiff: recorded NoOp change for helm_release.metrics-server
2020/08/09 19:26:40 [TRACE] [walkPlan] Exiting eval tree: helm_release.metrics-server
2020/08/09 19:26:40 [TRACE] vertex "helm_release.metrics-server": visit complete
2020/08/09 19:26:40 [TRACE] vertex "helm_release.metrics-server": dynamic subgraph completed successfully
2020/08/09 19:26:40 [TRACE] vertex "helm_release.metrics-server": visit complete
2020-08-09T19:26:41.593+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:41 [DEBUG] [resourceDiff: docker-registry] Got chart
2020-08-09T19:26:41.593+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:41 [DEBUG] [resourceDiff: docker-registry] Release validated
2020/08/09 19:26:41 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:41 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:41 [TRACE] EvalWriteState: writing current state object for helm_release.docker-registry
2020/08/09 19:26:41 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:41 [TRACE] EvalWriteDiff: recorded NoOp change for helm_release.docker-registry
2020/08/09 19:26:41 [TRACE] [walkPlan] Exiting eval tree: helm_release.docker-registry
2020/08/09 19:26:41 [TRACE] vertex "helm_release.docker-registry": visit complete
2020/08/09 19:26:41 [TRACE] vertex "helm_release.docker-registry": dynamic subgraph completed successfully
2020/08/09 19:26:41 [TRACE] vertex "helm_release.docker-registry": visit complete
2020/08/09 19:26:42 [TRACE] dag/walk: vertex "null_resource.cert-manager-setup" is waiting for "helm_release.cert-manager"
2020/08/09 19:26:42 [TRACE] dag/walk: vertex "provider.null (close)" is waiting for "null_resource.create-timescaledb-setup"
2020/08/09 19:26:42 [TRACE] dag/walk: vertex "provisioner.local-exec (close)" is waiting for "null_resource.cert-manager-setup"
2020/08/09 19:26:42 [TRACE] dag/walk: vertex "null_resource.rio-custom-domain" is waiting for "null_resource.rio-setup"
2020/08/09 19:26:42 [TRACE] dag/walk: vertex "kubernetes_ingress.rio-ingress" is waiting for "helm_release.cert-manager"
2020/08/09 19:26:42 [TRACE] dag/walk: vertex "null_resource.create-timescaledb-setup" is waiting for "helm_release.timescaledb"
2020-08-09T19:26:42.853+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:42 [DEBUG] [resourceDiff: prometheus-operator] Got chart
2020-08-09T19:26:42.853+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:42 [DEBUG] [resourceDiff: prometheus-operator] Release validated
2020/08/09 19:26:42 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:42 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:42 [TRACE] EvalWriteState: writing current state object for helm_release.prometheus-operator
2020/08/09 19:26:42 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:42 [TRACE] EvalWriteDiff: recorded NoOp change for helm_release.prometheus-operator
2020/08/09 19:26:42 [TRACE] [walkPlan] Exiting eval tree: helm_release.prometheus-operator
2020/08/09 19:26:42 [TRACE] vertex "helm_release.prometheus-operator": visit complete
2020/08/09 19:26:42 [TRACE] vertex "helm_release.prometheus-operator": dynamic subgraph completed successfully
2020/08/09 19:26:42 [TRACE] vertex "helm_release.prometheus-operator": visit complete
2020/08/09 19:26:42 [TRACE] dag/walk: vertex "kubernetes_secret.cloudflare-dns-api-token" is waiting for "helm_release.cert-manager"
2020/08/09 19:26:43 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "helm_release.sentry"
2020/08/09 19:26:43 [TRACE] dag/walk: vertex "null_resource.rio-setup" is waiting for "helm_release.cert-manager"
2020-08-09T19:26:43.433+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:43 [DEBUG] [resourceDiff: redis] Got chart
2020-08-09T19:26:43.433+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:43 [DEBUG] [resourceDiff: redis] Release validated
2020/08/09 19:26:43 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:43 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:43 [TRACE] EvalWriteState: writing current state object for helm_release.redis
2020/08/09 19:26:43 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:43 [TRACE] EvalWriteDiff: recorded NoOp change for helm_release.redis
2020/08/09 19:26:43 [TRACE] [walkPlan] Exiting eval tree: helm_release.redis
2020/08/09 19:26:43 [TRACE] vertex "helm_release.redis": visit complete
2020/08/09 19:26:43 [TRACE] vertex "helm_release.redis": dynamic subgraph completed successfully
2020/08/09 19:26:43 [TRACE] vertex "helm_release.redis": visit complete
2020/08/09 19:26:43 [TRACE] dag/walk: vertex "provider.kubernetes (close)" is waiting for "kubernetes_ingress.rio-ingress"
2020/08/09 19:26:43 [TRACE] dag/walk: vertex "null_resource.rio-app-domains" is waiting for "null_resource.rio-setup"
2020-08-09T19:26:43.771+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:43 [DEBUG] [resourceDiff: timescale] Got chart
2020-08-09T19:26:43.772+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:43 [DEBUG] [resourceDiff: timescale] Release validated
2020/08/09 19:26:43 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:43 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:43 [TRACE] EvalWriteState: writing current state object for helm_release.timescaledb
2020/08/09 19:26:43 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:43 [TRACE] EvalWriteDiff: recorded NoOp change for helm_release.timescaledb
2020/08/09 19:26:43 [TRACE] [walkPlan] Exiting eval tree: helm_release.timescaledb
2020/08/09 19:26:43 [TRACE] vertex "helm_release.timescaledb": visit complete
2020/08/09 19:26:43 [TRACE] vertex "helm_release.timescaledb": dynamic subgraph completed successfully
2020/08/09 19:26:43 [TRACE] vertex "helm_release.timescaledb": visit complete
2020/08/09 19:26:43 [TRACE] dag/walk: visiting "null_resource.create-timescaledb-setup"
2020/08/09 19:26:43 [TRACE] vertex "null_resource.create-timescaledb-setup": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:43 [TRACE] vertex "null_resource.create-timescaledb-setup": evaluating
2020/08/09 19:26:43 [TRACE] [walkPlan] Entering eval tree: null_resource.create-timescaledb-setup
2020/08/09 19:26:43 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:43 [TRACE] [walkPlan] Exiting eval tree: null_resource.create-timescaledb-setup
2020/08/09 19:26:43 [TRACE] vertex "null_resource.create-timescaledb-setup": expanding dynamic subgraph
2020/08/09 19:26:43 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:43 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  null_resource.create-timescaledb-setup - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:43 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:43 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:43 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:43 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:43 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:43 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:43 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:43 [DEBUG] ReferenceTransformer: "null_resource.create-timescaledb-setup" references: []
2020/08/09 19:26:43 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:43 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:43 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:43 [TRACE] vertex "null_resource.create-timescaledb-setup": entering dynamic subgraph
2020/08/09 19:26:43 [TRACE] dag/walk: updating graph
2020/08/09 19:26:43 [TRACE] dag/walk: added new vertex: "null_resource.create-timescaledb-setup"
2020/08/09 19:26:43 [TRACE] dag/walk: visiting "null_resource.create-timescaledb-setup"
2020/08/09 19:26:43 [TRACE] vertex "null_resource.create-timescaledb-setup": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:43 [TRACE] vertex "null_resource.create-timescaledb-setup": evaluating
2020/08/09 19:26:43 [TRACE] [walkPlan] Entering eval tree: null_resource.create-timescaledb-setup
2020/08/09 19:26:43 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:43 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:43 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:43 [TRACE] EvalReadState: reading state for null_resource.create-timescaledb-setup
2020/08/09 19:26:43 [TRACE] UpgradeResourceState: schema version of null_resource.create-timescaledb-setup is still 0; calling provider "registry.terraform.io/-/null" for any other minor fixups
2020/08/09 19:26:43 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:43 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:43 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:43 [TRACE] Re-validating config for "null_resource.create-timescaledb-setup"
2020/08/09 19:26:43 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:43 [TRACE] GRPCProvider: PlanResourceChange
2020-08-09T19:26:43.775+0300 [DEBUG] plugin.terraform-provider-null_v2.1.2_x4: 2020/08/09 19:26:43 [DEBUG] Instance Diff is nil in SimpleDiff()
2020/08/09 19:26:43 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:43 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:43 [TRACE] EvalWriteState: writing current state object for null_resource.create-timescaledb-setup
2020/08/09 19:26:43 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:43 [TRACE] EvalWriteDiff: recorded NoOp change for null_resource.create-timescaledb-setup
2020/08/09 19:26:43 [TRACE] [walkPlan] Exiting eval tree: null_resource.create-timescaledb-setup
2020/08/09 19:26:43 [TRACE] vertex "null_resource.create-timescaledb-setup": visit complete
2020/08/09 19:26:43 [TRACE] vertex "null_resource.create-timescaledb-setup": dynamic subgraph completed successfully
2020/08/09 19:26:43 [TRACE] vertex "null_resource.create-timescaledb-setup": visit complete
2020/08/09 19:26:44 [TRACE] dag/walk: vertex "root" is waiting for "provider.kubernetes (close)"
2020-08-09T19:26:44.486+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:44 [DEBUG] [resourceDiff: cert-manager] Got chart
2020-08-09T19:26:44.486+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:44 [DEBUG] [resourceDiff: cert-manager] Release validated
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:44 [TRACE] EvalWriteState: writing current state object for helm_release.cert-manager
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:44 [TRACE] EvalWriteDiff: recorded NoOp change for helm_release.cert-manager
2020/08/09 19:26:44 [TRACE] [walkPlan] Exiting eval tree: helm_release.cert-manager
2020/08/09 19:26:44 [TRACE] vertex "helm_release.cert-manager": visit complete
2020/08/09 19:26:44 [TRACE] vertex "helm_release.cert-manager": dynamic subgraph completed successfully
2020/08/09 19:26:44 [TRACE] vertex "helm_release.cert-manager": visit complete
2020/08/09 19:26:44 [TRACE] dag/walk: visiting "null_resource.cert-manager-setup"
2020/08/09 19:26:44 [TRACE] dag/walk: visiting "kubernetes_secret.cloudflare-dns-api-token"
2020/08/09 19:26:44 [TRACE] vertex "null_resource.cert-manager-setup": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:44 [TRACE] vertex "kubernetes_secret.cloudflare-dns-api-token": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:44 [TRACE] vertex "null_resource.cert-manager-setup": evaluating
2020/08/09 19:26:44 [TRACE] vertex "kubernetes_secret.cloudflare-dns-api-token": evaluating
2020/08/09 19:26:44 [TRACE] [walkPlan] Entering eval tree: null_resource.cert-manager-setup
2020/08/09 19:26:44 [TRACE] [walkPlan] Entering eval tree: kubernetes_secret.cloudflare-dns-api-token
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:44 [TRACE] dag/walk: visiting "null_resource.rio-setup"
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:44 [TRACE] [walkPlan] Exiting eval tree: null_resource.cert-manager-setup
2020/08/09 19:26:44 [TRACE] dag/walk: visiting "kubernetes_ingress.rio-ingress"
2020/08/09 19:26:44 [TRACE] [walkPlan] Exiting eval tree: kubernetes_secret.cloudflare-dns-api-token
2020/08/09 19:26:44 [TRACE] vertex "null_resource.cert-manager-setup": expanding dynamic subgraph
2020/08/09 19:26:44 [TRACE] vertex "null_resource.rio-setup": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:44 [TRACE] vertex "kubernetes_ingress.rio-ingress": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:44 [TRACE] vertex "kubernetes_secret.cloudflare-dns-api-token": expanding dynamic subgraph
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:44 [TRACE] vertex "null_resource.rio-setup": evaluating
2020/08/09 19:26:44 [TRACE] vertex "kubernetes_ingress.rio-ingress": evaluating
2020/08/09 19:26:44 [TRACE] [walkPlan] Entering eval tree: null_resource.rio-setup
2020/08/09 19:26:44 [TRACE] [walkPlan] Entering eval tree: kubernetes_ingress.rio-ingress
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  null_resource.cert-manager-setup - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:44 [DEBUG] ReferenceTransformer: "null_resource.cert-manager-setup" references: []
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:44 [TRACE] vertex "null_resource.cert-manager-setup": entering dynamic subgraph
2020/08/09 19:26:44 [TRACE] dag/walk: updating graph
2020/08/09 19:26:44 [TRACE] dag/walk: added new vertex: "null_resource.cert-manager-setup"
2020/08/09 19:26:44 [TRACE] dag/walk: visiting "null_resource.cert-manager-setup"
2020/08/09 19:26:44 [TRACE] vertex "null_resource.cert-manager-setup": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:44 [TRACE] vertex "null_resource.cert-manager-setup": evaluating
2020/08/09 19:26:44 [TRACE] [walkPlan] Entering eval tree: null_resource.cert-manager-setup
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:44 [TRACE] EvalReadState: reading state for null_resource.cert-manager-setup
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:44 [TRACE] UpgradeResourceState: schema version of null_resource.cert-manager-setup is still 0; calling provider "registry.terraform.io/-/null" for any other minor fixups
2020/08/09 19:26:44 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_secret.cloudflare-dns-api-token - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:44 [DEBUG] ReferenceTransformer: "kubernetes_secret.cloudflare-dns-api-token" references: []
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:44 [TRACE] vertex "kubernetes_secret.cloudflare-dns-api-token": entering dynamic subgraph
2020/08/09 19:26:44 [TRACE] dag/walk: updating graph
2020/08/09 19:26:44 [TRACE] dag/walk: added new vertex: "kubernetes_secret.cloudflare-dns-api-token"
2020/08/09 19:26:44 [TRACE] dag/walk: visiting "kubernetes_secret.cloudflare-dns-api-token"
2020/08/09 19:26:44 [TRACE] vertex "kubernetes_secret.cloudflare-dns-api-token": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:44 [TRACE] vertex "kubernetes_secret.cloudflare-dns-api-token": evaluating
2020/08/09 19:26:44 [TRACE] [walkPlan] Entering eval tree: kubernetes_secret.cloudflare-dns-api-token
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:44 [TRACE] [walkPlan] Exiting eval tree: null_resource.rio-setup
2020/08/09 19:26:44 [TRACE] EvalReadState: reading state for kubernetes_secret.cloudflare-dns-api-token
2020/08/09 19:26:44 [TRACE] vertex "null_resource.rio-setup": expanding dynamic subgraph
2020/08/09 19:26:44 [TRACE] UpgradeResourceState: schema version of kubernetes_secret.cloudflare-dns-api-token is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:44 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  null_resource.rio-setup - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:44 [DEBUG] ReferenceTransformer: "null_resource.rio-setup" references: []
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:44 [TRACE] vertex "null_resource.rio-setup": entering dynamic subgraph
2020/08/09 19:26:44 [TRACE] dag/walk: updating graph
2020/08/09 19:26:44 [TRACE] dag/walk: added new vertex: "null_resource.rio-setup"
2020/08/09 19:26:44 [TRACE] dag/walk: visiting "null_resource.rio-setup"
2020/08/09 19:26:44 [TRACE] vertex "null_resource.rio-setup": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:44 [TRACE] vertex "null_resource.rio-setup": evaluating
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:44 [TRACE] [walkPlan] Entering eval tree: null_resource.rio-setup
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:44 [TRACE] EvalReadState: reading state for null_resource.rio-setup
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:44 [TRACE] UpgradeResourceState: schema version of null_resource.rio-setup is still 0; calling provider "registry.terraform.io/-/null" for any other minor fixups
2020/08/09 19:26:44 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:44 [TRACE] [walkPlan] Exiting eval tree: kubernetes_ingress.rio-ingress
2020/08/09 19:26:44 [TRACE] vertex "kubernetes_ingress.rio-ingress": expanding dynamic subgraph
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_ingress.rio-ingress - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:44 [TRACE] Re-validating config for "kubernetes_secret.cloudflare-dns-api-token"
2020/08/09 19:26:44 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:44 [DEBUG] ReferenceTransformer: "kubernetes_ingress.rio-ingress" references: []
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:44 [TRACE] vertex "kubernetes_ingress.rio-ingress": entering dynamic subgraph
2020/08/09 19:26:44 [TRACE] dag/walk: updating graph
2020/08/09 19:26:44 [TRACE] dag/walk: added new vertex: "kubernetes_ingress.rio-ingress"
2020/08/09 19:26:44 [TRACE] dag/walk: visiting "kubernetes_ingress.rio-ingress"
2020/08/09 19:26:44 [TRACE] vertex "kubernetes_ingress.rio-ingress": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:44 [TRACE] vertex "kubernetes_ingress.rio-ingress": evaluating
2020/08/09 19:26:44 [TRACE] [walkPlan] Entering eval tree: kubernetes_ingress.rio-ingress
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:44 [TRACE] EvalReadState: reading state for kubernetes_ingress.rio-ingress
2020/08/09 19:26:44 [TRACE] UpgradeResourceState: schema version of kubernetes_ingress.rio-ingress is still 0; calling provider "registry.terraform.io/-/kubernetes" for any other minor fixups
2020/08/09 19:26:44 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:44 [TRACE] Re-validating config for "null_resource.cert-manager-setup"
2020/08/09 19:26:44 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:44 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:44 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalDiff
2020-08-09T19:26:44.490+0300 [DEBUG] plugin.terraform-provider-null_v2.1.2_x4: 2020/08/09 19:26:44 [DEBUG] Instance Diff is nil in SimpleDiff()
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:44 [TRACE] EvalWriteState: writing current state object for null_resource.cert-manager-setup
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:44 [TRACE] EvalWriteDiff: recorded NoOp change for null_resource.cert-manager-setup
2020/08/09 19:26:44 [TRACE] [walkPlan] Exiting eval tree: null_resource.cert-manager-setup
2020/08/09 19:26:44 [TRACE] vertex "null_resource.cert-manager-setup": visit complete
2020/08/09 19:26:44 [TRACE] vertex "null_resource.cert-manager-setup": dynamic subgraph completed successfully
2020/08/09 19:26:44 [TRACE] vertex "null_resource.cert-manager-setup": visit complete
2020/08/09 19:26:44 [TRACE] Re-validating config for "null_resource.rio-setup"
2020/08/09 19:26:44 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:44 [TRACE] EvalWriteState: writing current state object for kubernetes_secret.cloudflare-dns-api-token
2020/08/09 19:26:44 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:44 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_secret.cloudflare-dns-api-token
2020/08/09 19:26:44 [TRACE] [walkPlan] Exiting eval tree: kubernetes_secret.cloudflare-dns-api-token
2020/08/09 19:26:44 [TRACE] vertex "kubernetes_secret.cloudflare-dns-api-token": visit complete
2020/08/09 19:26:44 [TRACE] vertex "kubernetes_secret.cloudflare-dns-api-token": dynamic subgraph completed successfully
2020/08/09 19:26:44 [TRACE] vertex "kubernetes_secret.cloudflare-dns-api-token": visit complete
2020-08-09T19:26:44.491+0300 [DEBUG] plugin.terraform-provider-null_v2.1.2_x4: 2020/08/09 19:26:44 [DEBUG] Instance Diff is nil in SimpleDiff()
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:44 [TRACE] EvalWriteState: writing current state object for null_resource.rio-setup
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:44 [TRACE] EvalWriteDiff: recorded NoOp change for null_resource.rio-setup
2020/08/09 19:26:44 [TRACE] [walkPlan] Exiting eval tree: null_resource.rio-setup
2020/08/09 19:26:44 [TRACE] vertex "null_resource.rio-setup": visit complete
2020/08/09 19:26:44 [TRACE] vertex "null_resource.rio-setup": dynamic subgraph completed successfully
2020/08/09 19:26:44 [TRACE] vertex "null_resource.rio-setup": visit complete
2020/08/09 19:26:44 [TRACE] dag/walk: visiting "null_resource.rio-custom-domain"
2020/08/09 19:26:44 [TRACE] dag/walk: visiting "null_resource.rio-app-domains"
2020/08/09 19:26:44 [TRACE] vertex "null_resource.rio-custom-domain": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:44 [TRACE] vertex "null_resource.rio-app-domains": starting visit (*terraform.NodePlannableResource)
2020/08/09 19:26:44 [TRACE] vertex "null_resource.rio-custom-domain": evaluating
2020/08/09 19:26:44 [TRACE] vertex "null_resource.rio-app-domains": evaluating
2020/08/09 19:26:44 [TRACE] [walkPlan] Entering eval tree: null_resource.rio-custom-domain
2020/08/09 19:26:44 [TRACE] [walkPlan] Entering eval tree: null_resource.rio-app-domains
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:44 [TRACE] [walkPlan] Exiting eval tree: null_resource.rio-custom-domain
2020/08/09 19:26:44 [TRACE] [walkPlan] Exiting eval tree: null_resource.rio-app-domains
2020/08/09 19:26:44 [TRACE] vertex "null_resource.rio-custom-domain": expanding dynamic subgraph
2020/08/09 19:26:44 [TRACE] vertex "null_resource.rio-app-domains": expanding dynamic subgraph
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  null_resource.rio-app-domains - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:44 [DEBUG] ReferenceTransformer: "null_resource.rio-app-domains" references: []
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:44 [TRACE] vertex "null_resource.rio-app-domains": entering dynamic subgraph
2020/08/09 19:26:44 [TRACE] dag/walk: updating graph
2020/08/09 19:26:44 [TRACE] dag/walk: added new vertex: "null_resource.rio-app-domains"
2020/08/09 19:26:44 [TRACE] dag/walk: visiting "null_resource.rio-app-domains"
2020/08/09 19:26:44 [TRACE] vertex "null_resource.rio-app-domains": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:44 [TRACE] vertex "null_resource.rio-app-domains": evaluating
2020/08/09 19:26:44 [TRACE] [walkPlan] Entering eval tree: null_resource.rio-app-domains
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/08/09 19:26:44 [TRACE] EvalReadState: reading state for null_resource.rio-app-domains
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  null_resource.rio-custom-domain - *terraform.NodePlannableResourceInstance
  ------
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:44 [DEBUG] ReferenceTransformer: "null_resource.rio-custom-domain" references: []
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/08/09 19:26:44 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:44 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/08/09 19:26:44 [TRACE] vertex "null_resource.rio-custom-domain": entering dynamic subgraph
2020/08/09 19:26:44 [TRACE] dag/walk: updating graph
2020/08/09 19:26:44 [TRACE] dag/walk: added new vertex: "null_resource.rio-custom-domain"
2020/08/09 19:26:44 [TRACE] dag/walk: visiting "null_resource.rio-custom-domain"
2020/08/09 19:26:44 [TRACE] vertex "null_resource.rio-custom-domain": starting visit (*terraform.NodePlannableResourceInstance)
2020/08/09 19:26:44 [TRACE] vertex "null_resource.rio-custom-domain": evaluating
2020/08/09 19:26:44 [TRACE] [walkPlan] Entering eval tree: null_resource.rio-custom-domain
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:44 [TRACE] EvalReadState: reading state for null_resource.rio-custom-domain
2020/08/09 19:26:44 [TRACE] UpgradeResourceState: schema version of null_resource.rio-app-domains is still 0; calling provider "registry.terraform.io/-/null" for any other minor fixups
2020/08/09 19:26:44 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:44 [TRACE] UpgradeResourceState: schema version of null_resource.rio-custom-domain is still 0; calling provider "registry.terraform.io/-/null" for any other minor fixups
2020/08/09 19:26:44 [TRACE] GRPCProvider: UpgradeResourceState
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:44 [TRACE] Re-validating config for "null_resource.rio-custom-domain"
2020/08/09 19:26:44 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:44 [TRACE] Re-validating config for "null_resource.rio-app-domains"
2020/08/09 19:26:44 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:44 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:44 [TRACE] GRPCProvider: PlanResourceChange
2020/08/09 19:26:44 [TRACE] Re-validating config for "kubernetes_ingress.rio-ingress"
2020/08/09 19:26:44 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020-08-09T19:26:44.492+0300 [DEBUG] plugin.terraform-provider-null_v2.1.2_x4: 2020/08/09 19:26:44 [DEBUG] Instance Diff is nil in SimpleDiff()
2020-08-09T19:26:44.492+0300 [DEBUG] plugin.terraform-provider-null_v2.1.2_x4: 2020/08/09 19:26:44 [DEBUG] Instance Diff is nil in SimpleDiff()
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:44 [TRACE] EvalWriteState: writing current state object for null_resource.rio-app-domains
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:44 [TRACE] EvalWriteState: writing current state object for null_resource.rio-custom-domain
2020/08/09 19:26:44 [TRACE] EvalWriteDiff: recorded NoOp change for null_resource.rio-app-domains
2020/08/09 19:26:44 [TRACE] [walkPlan] Exiting eval tree: null_resource.rio-app-domains
2020/08/09 19:26:44 [TRACE] vertex "null_resource.rio-app-domains": visit complete
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:44 [TRACE] vertex "null_resource.rio-app-domains": dynamic subgraph completed successfully
2020/08/09 19:26:44 [TRACE] vertex "null_resource.rio-app-domains": visit complete
2020/08/09 19:26:44 [TRACE] EvalWriteDiff: recorded NoOp change for null_resource.rio-custom-domain
2020/08/09 19:26:44 [TRACE] [walkPlan] Exiting eval tree: null_resource.rio-custom-domain
2020/08/09 19:26:44 [TRACE] vertex "null_resource.rio-custom-domain": visit complete
2020/08/09 19:26:44 [TRACE] vertex "null_resource.rio-custom-domain": dynamic subgraph completed successfully
2020/08/09 19:26:44 [TRACE] vertex "null_resource.rio-custom-domain": visit complete
2020/08/09 19:26:44 [TRACE] dag/walk: visiting "provisioner.local-exec (close)"
2020/08/09 19:26:44 [TRACE] dag/walk: visiting "provider.null (close)"
2020/08/09 19:26:44 [TRACE] vertex "provisioner.local-exec (close)": starting visit (*terraform.graphNodeCloseProvisioner)
2020/08/09 19:26:44 [TRACE] vertex "provider.null (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/08/09 19:26:44 [TRACE] vertex "provisioner.local-exec (close)": evaluating
2020/08/09 19:26:44 [TRACE] vertex "provider.null (close)": evaluating
2020/08/09 19:26:44 [TRACE] [walkPlan] Entering eval tree: provisioner.local-exec (close)
2020/08/09 19:26:44 [TRACE] [walkPlan] Entering eval tree: provider.null (close)
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalCloseProvisioner
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/08/09 19:26:44 [TRACE] GRPCProvider: Close
2020-08-09T19:26:44.493+0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020/08/09 19:26:44 [TRACE] GRPCProvider: PlanResourceChange
2020-08-09T19:26:44.494+0300 [DEBUG] plugin: plugin process exited: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-null_v2.1.2_x4 pid=4111273
2020-08-09T19:26:44.494+0300 [DEBUG] plugin: plugin exited
2020/08/09 19:26:44 [TRACE] [walkPlan] Exiting eval tree: provider.null (close)
2020/08/09 19:26:44 [TRACE] vertex "provider.null (close)": visit complete
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:44 [TRACE] EvalWriteState: writing current state object for kubernetes_ingress.rio-ingress
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:44 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_ingress.rio-ingress
2020/08/09 19:26:44 [TRACE] [walkPlan] Exiting eval tree: kubernetes_ingress.rio-ingress
2020/08/09 19:26:44 [TRACE] vertex "kubernetes_ingress.rio-ingress": visit complete
2020/08/09 19:26:44 [TRACE] vertex "kubernetes_ingress.rio-ingress": dynamic subgraph completed successfully
2020/08/09 19:26:44 [TRACE] vertex "kubernetes_ingress.rio-ingress": visit complete
2020/08/09 19:26:44 [TRACE] dag/walk: visiting "provider.kubernetes (close)"
2020/08/09 19:26:44 [TRACE] vertex "provider.kubernetes (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/08/09 19:26:44 [TRACE] vertex "provider.kubernetes (close)": evaluating
2020/08/09 19:26:44 [TRACE] [walkPlan] Entering eval tree: provider.kubernetes (close)
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/08/09 19:26:44 [TRACE] GRPCProvider: Close
2020-08-09T19:26:44.497+0300 [DEBUG] plugin: plugin process exited: path=/usr/bin/terraform pid=4111197
2020-08-09T19:26:44.497+0300 [DEBUG] plugin: plugin exited
2020/08/09 19:26:44 [TRACE] [walkPlan] Exiting eval tree: provisioner.local-exec (close)
2020/08/09 19:26:44 [TRACE] vertex "provisioner.local-exec (close)": visit complete
2020-08-09T19:26:44.499+0300 [DEBUG] plugin: plugin process exited: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-kubernetes_v1.12.0_x4 pid=4111208
2020-08-09T19:26:44.499+0300 [DEBUG] plugin: plugin exited
2020/08/09 19:26:44 [TRACE] [walkPlan] Exiting eval tree: provider.kubernetes (close)
2020/08/09 19:26:44 [TRACE] vertex "provider.kubernetes (close)": visit complete
2020-08-09T19:26:44.858+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:44 [DEBUG] [resourceDiff: sentry] Got chart
2020-08-09T19:26:44.858+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:44 [DEBUG] [resourceDiff: sentry] Release validated
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:44 [TRACE] EvalWriteState: writing current state object for helm_release.sentry
2020/08/09 19:26:44 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:44 [TRACE] EvalWriteDiff: recorded NoOp change for helm_release.sentry
2020/08/09 19:26:44 [TRACE] [walkPlan] Exiting eval tree: helm_release.sentry
2020/08/09 19:26:44 [TRACE] vertex "helm_release.sentry": visit complete
2020/08/09 19:26:44 [TRACE] vertex "helm_release.sentry": dynamic subgraph completed successfully
2020/08/09 19:26:44 [TRACE] vertex "helm_release.sentry": visit complete
2020-08-09T19:26:45.771+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:45 [DEBUG] [resourceDiff: nginx-ingress] Got chart
2020-08-09T19:26:45.771+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:45 [DEBUG] [resourceDiff: nginx-ingress] Release validated
2020/08/09 19:26:45 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/08/09 19:26:45 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:45 [TRACE] EvalWriteState: writing current state object for helm_release.nginx-ingress
2020/08/09 19:26:45 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:45 [TRACE] EvalWriteDiff: recorded NoOp change for helm_release.nginx-ingress
2020/08/09 19:26:45 [TRACE] [walkPlan] Exiting eval tree: helm_release.nginx-ingress
2020/08/09 19:26:45 [TRACE] vertex "helm_release.nginx-ingress": visit complete
2020/08/09 19:26:45 [TRACE] vertex "helm_release.nginx-ingress": dynamic subgraph completed successfully
2020/08/09 19:26:45 [TRACE] vertex "helm_release.nginx-ingress": visit complete
2020/08/09 19:26:45 [TRACE] dag/walk: visiting "provider.helm (close)"
2020/08/09 19:26:45 [TRACE] vertex "provider.helm (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/08/09 19:26:45 [TRACE] vertex "provider.helm (close)": evaluating
2020/08/09 19:26:45 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/08/09 19:26:45 [TRACE] [walkPlan] Entering eval tree: provider.helm (close)
2020/08/09 19:26:45 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/08/09 19:26:45 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/08/09 19:26:45 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/08/09 19:26:45 [TRACE] GRPCProvider: Close
2020/08/09 19:26:45 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/08/09 19:26:45 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/08/09 19:26:45 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/08/09 19:26:45 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-08-09T19:26:45.784+0300 [DEBUG] plugin: plugin process exited: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-helm_v1.2.4_x4 pid=4111258
2020-08-09T19:26:45.784+0300 [DEBUG] plugin: plugin exited
2020/08/09 19:26:45 [TRACE] [walkPlan] Exiting eval tree: provider.helm (close)
2020/08/09 19:26:45 [TRACE] vertex "provider.helm (close)": visit complete
2020/08/09 19:26:45 [TRACE] dag/walk: visiting "root"
2020/08/09 19:26:45 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/08/09 19:26:45 [TRACE] vertex "root": visit complete
2020/08/09 19:26:45 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2020/08/09 19:26:47 [INFO] backend/local: apply calling Apply
2020/08/09 19:26:47 [INFO] terraform: building graph: GraphTypeApply
2020/08/09 19:26:47 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/08/09 19:26:47 [TRACE] ConfigTransformer: Starting for path: 
2020/08/09 19:26:47 [TRACE] ConfigTransformer: Starting for path: cluster
2020/08/09 19:26:47 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  data.helm_repository.bitnami (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.incubator (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.jetstack (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.sentry (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.stable (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.timescale (prepare state) - *terraform.NodeApplyableResource
  data.local_file.cert_manager_setup (prepare state) - *terraform.NodeApplyableResource
  data.local_file.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
  data.local_file.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
  data.local_file.rio-yaml (prepare state) - *terraform.NodeApplyableResource
  helm_release.cert-manager (prepare state) - *terraform.NodeApplyableResource
  helm_release.docker-registry (prepare state) - *terraform.NodeApplyableResource
  helm_release.metrics-server (prepare state) - *terraform.NodeApplyableResource
  helm_release.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
  helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
  helm_release.prometheus-operator (prepare state) - *terraform.NodeApplyableResource
  helm_release.redis (prepare state) - *terraform.NodeApplyableResource
  helm_release.sentry (prepare state) - *terraform.NodeApplyableResource
  helm_release.sentry-k8s-erros (prepare state) - *terraform.NodeApplyableResource
  helm_release.timescaledb (prepare state) - *terraform.NodeApplyableResource
  kubernetes_config_map.buildkitd-config (prepare state) - *terraform.NodeApplyableResource
  kubernetes_deployment.buildkitd (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.docker-registry-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.grafana-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.rio-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.sentry-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.cert-manager (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.docker (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.metrics-server (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.monitoring (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.postgres-ha (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.redis (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.rio (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.sentry (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.timescale (prepare state) - *terraform.NodeApplyableResource
  kubernetes_persistent_volume_claim.image-proxy (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.cloudflare-dns-api-token (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.docker-config-json (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.docker-registry-auth (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.timescale-certificates (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.timescale-credentials (prepare state) - *terraform.NodeApplyableResource
  kubernetes_service.buildkitd (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_cluster.dish (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state) - *terraform.NodeApplyableResource
  null_resource.cert-manager-setup (prepare state) - *terraform.NodeApplyableResource
  null_resource.create-timescaledb-setup (prepare state) - *terraform.NodeApplyableResource
  null_resource.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
  null_resource.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
  null_resource.rio-setup (prepare state) - *terraform.NodeApplyableResource
  ------
2020/08/09 19:26:47 [TRACE] Executing graph transform *terraform.DiffTransformer
2020/08/09 19:26:47 [TRACE] DiffTransformer starting
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for kubernetes_namespace.monitoring 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for kubernetes_secret.docker-registry-auth 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for kubernetes_namespace.timescale 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for kubernetes_config_map.buildkitd-config 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for kubernetes_namespace.rio 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for kubernetes_namespace.sentry 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for kubernetes_namespace.nginx-ingress 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for kubernetes_service.buildkitd 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for kubernetes_namespace.redis 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for kubernetes_namespace.docker 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for kubernetes_namespace.postgres-ha 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for kubernetes_secret.docker-config-json 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for kubernetes_namespace.metrics-server 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for kubernetes_ingress.sentry-ingress 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for kubernetes_ingress.docker-registry-ingress 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for kubernetes_namespace.cert-manager 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for kubernetes_persistent_volume_claim.image-proxy 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for kubernetes_ingress.grafana-ingress 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for module.cluster.digitalocean_kubernetes_cluster.dish 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for kubernetes_secret.timescale-certificates 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for kubernetes_secret.timescale-credentials 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for kubernetes_deployment.buildkitd 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found Create change for helm_release.postgres-ha 
2020/08/09 19:26:47 [TRACE] DiffTransformer: helm_release.postgres-ha will be represented by helm_release.postgres-ha
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for module.cluster.digitalocean_kubernetes_node_pool.ancillary 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for module.cluster.digitalocean_kubernetes_node_pool.workers 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for module.cluster.digitalocean_kubernetes_node_pool.ci 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for helm_release.sentry-k8s-erros 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for helm_release.metrics-server 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for helm_release.docker-registry 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for helm_release.prometheus-operator 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for helm_release.redis 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for helm_release.timescaledb 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for null_resource.create-timescaledb-setup 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for helm_release.cert-manager 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for null_resource.cert-manager-setup 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for kubernetes_secret.cloudflare-dns-api-token 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for null_resource.rio-setup 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for null_resource.rio-app-domains 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for null_resource.rio-custom-domain 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for kubernetes_ingress.rio-ingress 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for helm_release.sentry 
2020/08/09 19:26:47 [TRACE] DiffTransformer: found NoOp change for helm_release.nginx-ingress 
2020/08/09 19:26:47 [TRACE] DiffTransformer complete
2020/08/09 19:26:47 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  data.helm_repository.bitnami (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.incubator (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.jetstack (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.sentry (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.stable (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.timescale (prepare state) - *terraform.NodeApplyableResource
  data.local_file.cert_manager_setup (prepare state) - *terraform.NodeApplyableResource
  data.local_file.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
  data.local_file.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
  data.local_file.rio-yaml (prepare state) - *terraform.NodeApplyableResource
  helm_release.cert-manager (prepare state) - *terraform.NodeApplyableResource
  helm_release.docker-registry (prepare state) - *terraform.NodeApplyableResource
  helm_release.metrics-server (prepare state) - *terraform.NodeApplyableResource
  helm_release.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
  helm_release.postgres-ha - *terraform.NodeApplyableResourceInstance
    helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
  helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
  helm_release.prometheus-operator (prepare state) - *terraform.NodeApplyableResource
  helm_release.redis (prepare state) - *terraform.NodeApplyableResource
  helm_release.sentry (prepare state) - *terraform.NodeApplyableResource
  helm_release.sentry-k8s-erros (prepare state) - *terraform.NodeApplyableResource
  helm_release.timescaledb (prepare state) - *terraform.NodeApplyableResource
  kubernetes_config_map.buildkitd-config (prepare state) - *terraform.NodeApplyableResource
  kubernetes_deployment.buildkitd (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.docker-registry-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.grafana-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.rio-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.sentry-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.cert-manager (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.docker (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.metrics-server (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.monitoring (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.postgres-ha (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.redis (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.rio (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.sentry (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.timescale (prepare state) - *terraform.NodeApplyableResource
  kubernetes_persistent_volume_claim.image-proxy (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.cloudflare-dns-api-token (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.docker-config-json (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.docker-registry-auth (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.timescale-certificates (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.timescale-credentials (prepare state) - *terraform.NodeApplyableResource
  kubernetes_service.buildkitd (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_cluster.dish (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state) - *terraform.NodeApplyableResource
  null_resource.cert-manager-setup (prepare state) - *terraform.NodeApplyableResource
  null_resource.create-timescaledb-setup (prepare state) - *terraform.NodeApplyableResource
  null_resource.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
  null_resource.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
  null_resource.rio-setup (prepare state) - *terraform.NodeApplyableResource
  ------
2020/08/09 19:26:47 [TRACE] Executing graph transform *terraform.OrphanResourceTransformer
2020/08/09 19:26:47 [TRACE] Completed graph transform *terraform.OrphanResourceTransformer (no changes)
2020/08/09 19:26:47 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/08/09 19:26:47 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/08/09 19:26:47 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.buildkitd (prepare state)" (*terraform.NodeApplyableResource) config from buildkitd.tf:1,1-45
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_ingress.rio-ingress (prepare state)" (*terraform.NodeApplyableResource) config from rio.tf:83,1-44
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "data.helm_repository.timescale (prepare state)" (*terraform.NodeApplyableResource) config from hcl.Range{Filename:"timescaledb.tf", Start:hcl.Pos{Line:7, Column:1, Byte:89}, End:hcl.Pos{Line:7, Column:35, Byte:123}}
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "module.cluster.digitalocean_kubernetes_cluster.dish (prepare state)" (*terraform.NodeApplyableResource) config from cluster/main.tf:11,1-50
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "null_resource.rio-custom-domain (prepare state)" (*terraform.NodeApplyableResource) config from rio.tf:45,1-45
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.redis (prepare state)" (*terraform.NodeApplyableResource) config from redis.tf:1,1-40
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.sentry (prepare state)" (*terraform.NodeApplyableResource) config from sentry.tf:1,1-41
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_config_map.buildkitd-config (prepare state)" (*terraform.NodeApplyableResource) config from buildkitd.tf:90,1-52
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "data.local_file.cert_manager_setup (prepare state)" (*terraform.NodeApplyableResource) config from hcl.Range{Filename:"cert-manager.tf", Start:hcl.Pos{Line:9, Column:1, Byte:122}, End:hcl.Pos{Line:9, Column:39, Byte:160}}
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "data.local_file.rio-app-domains (prepare state)" (*terraform.NodeApplyableResource) config from hcl.Range{Filename:"rio.tf", Start:hcl.Pos{Line:22, Column:1, Byte:367}, End:hcl.Pos{Line:22, Column:36, Byte:402}}
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.postgres-ha (prepare state)" (*terraform.NodeApplyableResource) config from postgres-ha.tf:7,1-38
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.sentry (prepare state)" (*terraform.NodeApplyableResource) config from sentry.tf:25,1-33
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "null_resource.create-timescaledb-setup (prepare state)" (*terraform.NodeApplyableResource) config from timescaledb.tf:56,1-52
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "null_resource.rio-setup (prepare state)" (*terraform.NodeApplyableResource) config from rio.tf:26,1-37
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.monitoring (prepare state)" (*terraform.NodeApplyableResource) config from prometheus.tf:6,1-45
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state)" (*terraform.NodeApplyableResource) config from cluster/main.tf:30,1-57
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.timescaledb (prepare state)" (*terraform.NodeApplyableResource) config from timescaledb.tf:12,1-38
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "data.helm_repository.bitnami (prepare state)" (*terraform.NodeApplyableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:40, Column:1, Byte:1084}, End:hcl.Pos{Line:40, Column:33, Byte:1116}}
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.nginx-ingress (prepare state)" (*terraform.NodeApplyableResource) config from nginx-ingress.tf:1,1-48
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.cert-manager (prepare state)" (*terraform.NodeApplyableResource) config from cert-manager.tf:18,1-47
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.cloudflare-dns-api-token (prepare state)" (*terraform.NodeApplyableResource) config from cert-manager.tf:60,1-56
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_ingress.grafana-ingress (prepare state)" (*terraform.NodeApplyableResource) config from prometheus.tf:28,1-48
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "data.helm_repository.stable (prepare state)" (*terraform.NodeApplyableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:30, Column:1, Byte:836}, End:hcl.Pos{Line:30, Column:32, Byte:867}}
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state)" (*terraform.NodeApplyableResource) config from cluster/main.tf:48,1-50
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state)" (*terraform.NodeApplyableResource) config from cluster/main.tf:39,1-55
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.postgres-ha" (*terraform.NodeApplyableResourceInstance) config from postgres-ha.tf:7,1-38
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.metrics-server (prepare state)" (*terraform.NodeApplyableResource) config from metrics-server.tf:1,1-49
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.rio (prepare state)" (*terraform.NodeApplyableResource) config from rio.tf:1,1-38
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.prometheus-operator (prepare state)" (*terraform.NodeApplyableResource) config from prometheus.tf:12,1-46
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.docker-config-json (prepare state)" (*terraform.NodeApplyableResource) config from rio.tf:135,1-50
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.postgres-ha (prepare state)" (*terraform.NodeApplyableResource) config from postgres-ha.tf:1,1-46
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "data.helm_repository.jetstack (prepare state)" (*terraform.NodeApplyableResource) config from hcl.Range{Filename:"cert-manager.tf", Start:hcl.Pos{Line:13, Column:1, Byte:219}, End:hcl.Pos{Line:13, Column:34, Byte:252}}
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "data.local_file.rio-yaml (prepare state)" (*terraform.NodeApplyableResource) config from hcl.Range{Filename:"rio.tf", Start:hcl.Pos{Line:14, Column:1, Byte:188}, End:hcl.Pos{Line:14, Column:29, Byte:216}}
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_persistent_volume_claim.image-proxy (prepare state)" (*terraform.NodeApplyableResource) config from rio.tf:147,1-60
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.sentry-k8s-erros (prepare state)" (*terraform.NodeApplyableResource) config from sentry.tf:12,1-43
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.metrics-server (prepare state)" (*terraform.NodeApplyableResource) config from metrics-server.tf:7,1-41
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.docker-registry (prepare state)" (*terraform.NodeApplyableResource) config from docker-registry.tf:7,1-42
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.buildkitd (prepare state)" (*terraform.NodeApplyableResource) config from buildkitd.tf:100,1-42
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.docker-registry-auth (prepare state)" (*terraform.NodeApplyableResource) config from docker-registry.tf:34,1-52
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.redis (prepare state)" (*terraform.NodeApplyableResource) config from redis.tf:7,1-32
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_ingress.docker-registry-ingress (prepare state)" (*terraform.NodeApplyableResource) config from docker-registry.tf:47,1-56
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.timescale-credentials (prepare state)" (*terraform.NodeApplyableResource) config from timescaledb.tf:23,1-53
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "null_resource.cert-manager-setup (prepare state)" (*terraform.NodeApplyableResource) config from cert-manager.tf:42,1-46
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_secret.timescale-certificates (prepare state)" (*terraform.NodeApplyableResource) config from timescaledb.tf:40,1-54
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "null_resource.rio-app-domains (prepare state)" (*terraform.NodeApplyableResource) config from rio.tf:65,1-43
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "data.local_file.rio-custom-domain (prepare state)" (*terraform.NodeApplyableResource) config from hcl.Range{Filename:"rio.tf", Start:hcl.Pos{Line:18, Column:1, Byte:266}, End:hcl.Pos{Line:18, Column:38, Byte:303}}
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "data.helm_repository.sentry (prepare state)" (*terraform.NodeApplyableResource) config from hcl.Range{Filename:"sentry.tf", Start:hcl.Pos{Line:7, Column:1, Byte:83}, End:hcl.Pos{Line:7, Column:32, Byte:114}}
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "data.helm_repository.incubator (prepare state)" (*terraform.NodeApplyableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:35, Column:1, Byte:952}, End:hcl.Pos{Line:35, Column:35, Byte:986}}
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.timescale (prepare state)" (*terraform.NodeApplyableResource) config from timescaledb.tf:1,1-44
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.docker (prepare state)" (*terraform.NodeApplyableResource) config from docker-registry.tf:1,1-41
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_ingress.sentry-ingress (prepare state)" (*terraform.NodeApplyableResource) config from sentry.tf:93,1-47
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.nginx-ingress (prepare state)" (*terraform.NodeApplyableResource) config from nginx-ingress.tf:9,1-40
2020/08/09 19:26:47 [TRACE] AttachResourceConfigTransformer: attaching to "helm_release.cert-manager (prepare state)" (*terraform.NodeApplyableResource) config from cert-manager.tf:24,1-39
2020/08/09 19:26:47 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/08/09 19:26:47 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/08/09 19:26:47 [DEBUG] Resource state not found for node "helm_release.postgres-ha", instance helm_release.postgres-ha
2020/08/09 19:26:47 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/08/09 19:26:47 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/08/09 19:26:47 [TRACE] MissingProviderTransformer: added implicit provisioner local-exec, first implied by null_resource.rio-app-domains (prepare state)
2020/08/09 19:26:47 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer with new graph:
  data.helm_repository.bitnami (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.incubator (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.jetstack (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.sentry (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.stable (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.timescale (prepare state) - *terraform.NodeApplyableResource
  data.local_file.cert_manager_setup (prepare state) - *terraform.NodeApplyableResource
  data.local_file.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
  data.local_file.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
  data.local_file.rio-yaml (prepare state) - *terraform.NodeApplyableResource
  helm_release.cert-manager (prepare state) - *terraform.NodeApplyableResource
  helm_release.docker-registry (prepare state) - *terraform.NodeApplyableResource
  helm_release.metrics-server (prepare state) - *terraform.NodeApplyableResource
  helm_release.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
  helm_release.postgres-ha - *terraform.NodeApplyableResourceInstance
    helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
  helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
  helm_release.prometheus-operator (prepare state) - *terraform.NodeApplyableResource
  helm_release.redis (prepare state) - *terraform.NodeApplyableResource
  helm_release.sentry (prepare state) - *terraform.NodeApplyableResource
  helm_release.sentry-k8s-erros (prepare state) - *terraform.NodeApplyableResource
  helm_release.timescaledb (prepare state) - *terraform.NodeApplyableResource
  kubernetes_config_map.buildkitd-config (prepare state) - *terraform.NodeApplyableResource
  kubernetes_deployment.buildkitd (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.docker-registry-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.grafana-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.rio-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.sentry-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.cert-manager (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.docker (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.metrics-server (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.monitoring (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.postgres-ha (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.redis (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.rio (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.sentry (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.timescale (prepare state) - *terraform.NodeApplyableResource
  kubernetes_persistent_volume_claim.image-proxy (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.cloudflare-dns-api-token (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.docker-config-json (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.docker-registry-auth (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.timescale-certificates (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.timescale-credentials (prepare state) - *terraform.NodeApplyableResource
  kubernetes_service.buildkitd (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_cluster.dish (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state) - *terraform.NodeApplyableResource
  null_resource.cert-manager-setup (prepare state) - *terraform.NodeApplyableResource
  null_resource.create-timescaledb-setup (prepare state) - *terraform.NodeApplyableResource
  null_resource.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
  null_resource.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
  null_resource.rio-setup (prepare state) - *terraform.NodeApplyableResource
  provisioner.local-exec - *terraform.NodeProvisioner
  ------
2020/08/09 19:26:47 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/08/09 19:26:47 [TRACE] ProvisionerTransformer: null_resource.cert-manager-setup (prepare state) is provisioned by local-exec ("provisioner.local-exec")
2020/08/09 19:26:47 [TRACE] ProvisionerTransformer: null_resource.rio-app-domains (prepare state) is provisioned by local-exec ("provisioner.local-exec")
2020/08/09 19:26:47 [TRACE] ProvisionerTransformer: null_resource.rio-custom-domain (prepare state) is provisioned by local-exec ("provisioner.local-exec")
2020/08/09 19:26:47 [TRACE] ProvisionerTransformer: null_resource.create-timescaledb-setup (prepare state) is provisioned by local-exec ("provisioner.local-exec")
2020/08/09 19:26:47 [TRACE] ProvisionerTransformer: null_resource.rio-setup (prepare state) is provisioned by local-exec ("provisioner.local-exec")
2020/08/09 19:26:47 [TRACE] Completed graph transform *terraform.ProvisionerTransformer with new graph:
  data.helm_repository.bitnami (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.incubator (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.jetstack (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.sentry (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.stable (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.timescale (prepare state) - *terraform.NodeApplyableResource
  data.local_file.cert_manager_setup (prepare state) - *terraform.NodeApplyableResource
  data.local_file.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
  data.local_file.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
  data.local_file.rio-yaml (prepare state) - *terraform.NodeApplyableResource
  helm_release.cert-manager (prepare state) - *terraform.NodeApplyableResource
  helm_release.docker-registry (prepare state) - *terraform.NodeApplyableResource
  helm_release.metrics-server (prepare state) - *terraform.NodeApplyableResource
  helm_release.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
  helm_release.postgres-ha - *terraform.NodeApplyableResourceInstance
    helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
  helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
  helm_release.prometheus-operator (prepare state) - *terraform.NodeApplyableResource
  helm_release.redis (prepare state) - *terraform.NodeApplyableResource
  helm_release.sentry (prepare state) - *terraform.NodeApplyableResource
  helm_release.sentry-k8s-erros (prepare state) - *terraform.NodeApplyableResource
  helm_release.timescaledb (prepare state) - *terraform.NodeApplyableResource
  kubernetes_config_map.buildkitd-config (prepare state) - *terraform.NodeApplyableResource
  kubernetes_deployment.buildkitd (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.docker-registry-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.grafana-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.rio-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.sentry-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.cert-manager (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.docker (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.metrics-server (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.monitoring (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.postgres-ha (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.redis (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.rio (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.sentry (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.timescale (prepare state) - *terraform.NodeApplyableResource
  kubernetes_persistent_volume_claim.image-proxy (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.cloudflare-dns-api-token (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.docker-config-json (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.docker-registry-auth (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.timescale-certificates (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.timescale-credentials (prepare state) - *terraform.NodeApplyableResource
  kubernetes_service.buildkitd (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_cluster.dish (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state) - *terraform.NodeApplyableResource
  null_resource.cert-manager-setup (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  ------
2020/08/09 19:26:47 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/08/09 19:26:47 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  data.helm_repository.bitnami (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.incubator (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.jetstack (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.sentry (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.stable (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.timescale (prepare state) - *terraform.NodeApplyableResource
  data.local_file.cert_manager_setup (prepare state) - *terraform.NodeApplyableResource
  data.local_file.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
  data.local_file.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
  data.local_file.rio-yaml (prepare state) - *terraform.NodeApplyableResource
  helm_release.cert-manager (prepare state) - *terraform.NodeApplyableResource
  helm_release.docker-registry (prepare state) - *terraform.NodeApplyableResource
  helm_release.metrics-server (prepare state) - *terraform.NodeApplyableResource
  helm_release.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
  helm_release.postgres-ha - *terraform.NodeApplyableResourceInstance
    helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
  helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
  helm_release.prometheus-operator (prepare state) - *terraform.NodeApplyableResource
  helm_release.redis (prepare state) - *terraform.NodeApplyableResource
  helm_release.sentry (prepare state) - *terraform.NodeApplyableResource
  helm_release.sentry-k8s-erros (prepare state) - *terraform.NodeApplyableResource
  helm_release.timescaledb (prepare state) - *terraform.NodeApplyableResource
  kubernetes_config_map.buildkitd-config (prepare state) - *terraform.NodeApplyableResource
  kubernetes_deployment.buildkitd (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.docker-registry-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.grafana-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.rio-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.sentry-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.cert-manager (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.docker (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.metrics-server (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.monitoring (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.postgres-ha (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.redis (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.rio (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.sentry (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.timescale (prepare state) - *terraform.NodeApplyableResource
  kubernetes_persistent_volume_claim.image-proxy (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.cloudflare-dns-api-token (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.docker-config-json (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.docker-registry-auth (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.timescale-certificates (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.timescale-credentials (prepare state) - *terraform.NodeApplyableResource
  kubernetes_service.buildkitd (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_cluster.dish (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state) - *terraform.NodeApplyableResource
  null_resource.cert-manager-setup (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:47 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/08/09 19:26:47 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/08/09 19:26:47 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/08/09 19:26:47 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
  data.helm_repository.bitnami (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.incubator (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.jetstack (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.sentry (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.stable (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.timescale (prepare state) - *terraform.NodeApplyableResource
  data.local_file.cert_manager_setup (prepare state) - *terraform.NodeApplyableResource
  data.local_file.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
  data.local_file.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
  data.local_file.rio-yaml (prepare state) - *terraform.NodeApplyableResource
  helm_release.cert-manager (prepare state) - *terraform.NodeApplyableResource
  helm_release.docker-registry (prepare state) - *terraform.NodeApplyableResource
  helm_release.metrics-server (prepare state) - *terraform.NodeApplyableResource
  helm_release.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
  helm_release.postgres-ha - *terraform.NodeApplyableResourceInstance
    helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
  helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
  helm_release.prometheus-operator (prepare state) - *terraform.NodeApplyableResource
  helm_release.redis (prepare state) - *terraform.NodeApplyableResource
  helm_release.sentry (prepare state) - *terraform.NodeApplyableResource
  helm_release.sentry-k8s-erros (prepare state) - *terraform.NodeApplyableResource
  helm_release.timescaledb (prepare state) - *terraform.NodeApplyableResource
  kubernetes_config_map.buildkitd-config (prepare state) - *terraform.NodeApplyableResource
  kubernetes_deployment.buildkitd (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.docker-registry-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.grafana-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.rio-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.sentry-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.cert-manager (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.docker (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.metrics-server (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.monitoring (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.postgres-ha (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.redis (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.rio (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.sentry (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.timescale (prepare state) - *terraform.NodeApplyableResource
  kubernetes_persistent_volume_claim.image-proxy (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.cloudflare-dns-api-token (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.docker-config-json (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.docker-registry-auth (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.timescale-certificates (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.timescale-credentials (prepare state) - *terraform.NodeApplyableResource
  kubernetes_service.buildkitd (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_cluster.dish (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state) - *terraform.NodeApplyableResource
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  null_resource.cert-manager-setup (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:47 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/08/09 19:26:47 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer with new graph:
  data.helm_repository.bitnami (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.incubator (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.jetstack (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.sentry (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.stable (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.timescale (prepare state) - *terraform.NodeApplyableResource
  data.local_file.cert_manager_setup (prepare state) - *terraform.NodeApplyableResource
  data.local_file.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
  data.local_file.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
  data.local_file.rio-yaml (prepare state) - *terraform.NodeApplyableResource
  helm_release.cert-manager (prepare state) - *terraform.NodeApplyableResource
  helm_release.docker-registry (prepare state) - *terraform.NodeApplyableResource
  helm_release.metrics-server (prepare state) - *terraform.NodeApplyableResource
  helm_release.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
  helm_release.postgres-ha - *terraform.NodeApplyableResourceInstance
    helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
  helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
  helm_release.prometheus-operator (prepare state) - *terraform.NodeApplyableResource
  helm_release.redis (prepare state) - *terraform.NodeApplyableResource
  helm_release.sentry (prepare state) - *terraform.NodeApplyableResource
  helm_release.sentry-k8s-erros (prepare state) - *terraform.NodeApplyableResource
  helm_release.timescaledb (prepare state) - *terraform.NodeApplyableResource
  kubernetes_config_map.buildkitd-config (prepare state) - *terraform.NodeApplyableResource
  kubernetes_deployment.buildkitd (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.docker-registry-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.grafana-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.rio-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.sentry-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.cert-manager (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.docker (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.metrics-server (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.monitoring (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.postgres-ha (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.redis (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.rio (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.sentry (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.timescale (prepare state) - *terraform.NodeApplyableResource
  kubernetes_persistent_volume_claim.image-proxy (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.cloudflare-dns-api-token (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.docker-config-json (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.docker-registry-auth (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.timescale-certificates (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.timescale-credentials (prepare state) - *terraform.NodeApplyableResource
  kubernetes_service.buildkitd (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_cluster.dish (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state) - *terraform.NodeApplyableResource
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  null_resource.cert-manager-setup (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:47 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/08/09 19:26:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/08/09 19:26:47 [TRACE] ProviderConfigTransformer: attaching to "module.cluster.provider.digitalocean" provider configuration from cluster/main.tf:5,1-24
2020/08/09 19:26:47 [TRACE] ProviderConfigTransformer: attaching to "module.cluster.provider.kubernetes" provider configuration from cluster/main.tf:63,1-22
2020/08/09 19:26:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  data.helm_repository.bitnami (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.incubator (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.jetstack (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.sentry (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.stable (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.timescale (prepare state) - *terraform.NodeApplyableResource
  data.local_file.cert_manager_setup (prepare state) - *terraform.NodeApplyableResource
  data.local_file.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
  data.local_file.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
  data.local_file.rio-yaml (prepare state) - *terraform.NodeApplyableResource
  helm_release.cert-manager (prepare state) - *terraform.NodeApplyableResource
  helm_release.docker-registry (prepare state) - *terraform.NodeApplyableResource
  helm_release.metrics-server (prepare state) - *terraform.NodeApplyableResource
  helm_release.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
  helm_release.postgres-ha - *terraform.NodeApplyableResourceInstance
    helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
  helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
  helm_release.prometheus-operator (prepare state) - *terraform.NodeApplyableResource
  helm_release.redis (prepare state) - *terraform.NodeApplyableResource
  helm_release.sentry (prepare state) - *terraform.NodeApplyableResource
  helm_release.sentry-k8s-erros (prepare state) - *terraform.NodeApplyableResource
  helm_release.timescaledb (prepare state) - *terraform.NodeApplyableResource
  kubernetes_config_map.buildkitd-config (prepare state) - *terraform.NodeApplyableResource
  kubernetes_deployment.buildkitd (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.docker-registry-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.grafana-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.rio-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.sentry-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.cert-manager (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.docker (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.metrics-server (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.monitoring (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.postgres-ha (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.redis (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.rio (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.sentry (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.timescale (prepare state) - *terraform.NodeApplyableResource
  kubernetes_persistent_volume_claim.image-proxy (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.cloudflare-dns-api-token (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.docker-config-json (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.docker-registry-auth (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.timescale-certificates (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.timescale-credentials (prepare state) - *terraform.NodeApplyableResource
  kubernetes_service.buildkitd (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_cluster.dish (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state) - *terraform.NodeApplyableResource
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.provider.kubernetes - *terraform.NodeApplyableProvider
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  null_resource.cert-manager-setup (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/08/09 19:26:47 [DEBUG] adding implicit provider configuration provider.kubernetes, implied first by kubernetes_namespace.postgres-ha (prepare state)
2020/08/09 19:26:47 [DEBUG] adding implicit provider configuration provider.helm, implied first by data.helm_repository.jetstack (prepare state)
2020/08/09 19:26:47 [DEBUG] adding implicit provider configuration provider.local, implied first by data.local_file.rio-yaml (prepare state)
2020/08/09 19:26:47 [DEBUG] adding implicit provider configuration provider.null, implied first by null_resource.cert-manager-setup (prepare state)
2020/08/09 19:26:47 [DEBUG] adding implicit provider configuration provider.digitalocean, implied first by module.cluster.digitalocean_kubernetes_cluster.dish (prepare state)
2020/08/09 19:26:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
  data.helm_repository.bitnami (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.incubator (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.jetstack (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.sentry (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.stable (prepare state) - *terraform.NodeApplyableResource
  data.helm_repository.timescale (prepare state) - *terraform.NodeApplyableResource
  data.local_file.cert_manager_setup (prepare state) - *terraform.NodeApplyableResource
  data.local_file.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
  data.local_file.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
  data.local_file.rio-yaml (prepare state) - *terraform.NodeApplyableResource
  helm_release.cert-manager (prepare state) - *terraform.NodeApplyableResource
  helm_release.docker-registry (prepare state) - *terraform.NodeApplyableResource
  helm_release.metrics-server (prepare state) - *terraform.NodeApplyableResource
  helm_release.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
  helm_release.postgres-ha - *terraform.NodeApplyableResourceInstance
    helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
  helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
  helm_release.prometheus-operator (prepare state) - *terraform.NodeApplyableResource
  helm_release.redis (prepare state) - *terraform.NodeApplyableResource
  helm_release.sentry (prepare state) - *terraform.NodeApplyableResource
  helm_release.sentry-k8s-erros (prepare state) - *terraform.NodeApplyableResource
  helm_release.timescaledb (prepare state) - *terraform.NodeApplyableResource
  kubernetes_config_map.buildkitd-config (prepare state) - *terraform.NodeApplyableResource
  kubernetes_deployment.buildkitd (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.docker-registry-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.grafana-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.rio-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_ingress.sentry-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.cert-manager (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.docker (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.metrics-server (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.monitoring (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.postgres-ha (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.redis (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.rio (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.sentry (prepare state) - *terraform.NodeApplyableResource
  kubernetes_namespace.timescale (prepare state) - *terraform.NodeApplyableResource
  kubernetes_persistent_volume_claim.image-proxy (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.cloudflare-dns-api-token (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.docker-config-json (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.docker-registry-auth (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.timescale-certificates (prepare state) - *terraform.NodeApplyableResource
  kubernetes_secret.timescale-credentials (prepare state) - *terraform.NodeApplyableResource
  kubernetes_service.buildkitd (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_cluster.dish (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state) - *terraform.NodeApplyableResource
  module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state) - *terraform.NodeApplyableResource
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.provider.kubernetes - *terraform.NodeApplyableProvider
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  null_resource.cert-manager-setup (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  provider.digitalocean - *terraform.NodeApplyableProvider
  provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/08/09 19:26:47 [TRACE] ProviderTransformer: null_resource.rio-custom-domain (prepare state) is provided by provider.null or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: kubernetes_namespace.redis (prepare state) is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: module.cluster.digitalocean_kubernetes_cluster.dish (prepare state) is provided by module.cluster.provider.digitalocean or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: data.local_file.rio-app-domains (prepare state) is provided by provider.local or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: kubernetes_namespace.sentry (prepare state) is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: kubernetes_config_map.buildkitd-config (prepare state) is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: data.local_file.cert_manager_setup (prepare state) is provided by provider.local or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: helm_release.postgres-ha (prepare state) is provided by provider.helm or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: helm_release.sentry (prepare state) is provided by provider.helm or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: null_resource.create-timescaledb-setup (prepare state) is provided by provider.null or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: null_resource.rio-setup (prepare state) is provided by provider.null or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: kubernetes_namespace.monitoring (prepare state) is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state) is provided by module.cluster.provider.digitalocean or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: kubernetes_ingress.grafana-ingress (prepare state) is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: helm_release.timescaledb (prepare state) is provided by provider.helm or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: data.helm_repository.bitnami (prepare state) is provided by provider.helm or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: kubernetes_namespace.nginx-ingress (prepare state) is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: kubernetes_namespace.cert-manager (prepare state) is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: kubernetes_secret.cloudflare-dns-api-token (prepare state) is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: helm_release.postgres-ha is provided by provider.helm or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: data.helm_repository.stable (prepare state) is provided by provider.helm or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state) is provided by module.cluster.provider.digitalocean or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state) is provided by module.cluster.provider.digitalocean or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: kubernetes_namespace.metrics-server (prepare state) is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: kubernetes_namespace.rio (prepare state) is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: helm_release.prometheus-operator (prepare state) is provided by provider.helm or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: kubernetes_secret.docker-config-json (prepare state) is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: kubernetes_namespace.postgres-ha (prepare state) is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: data.helm_repository.jetstack (prepare state) is provided by provider.helm or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: data.local_file.rio-yaml (prepare state) is provided by provider.local or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: kubernetes_persistent_volume_claim.image-proxy (prepare state) is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: helm_release.sentry-k8s-erros (prepare state) is provided by provider.helm or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: helm_release.docker-registry (prepare state) is provided by provider.helm or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: helm_release.metrics-server (prepare state) is provided by provider.helm or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: kubernetes_service.buildkitd (prepare state) is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: kubernetes_secret.docker-registry-auth (prepare state) is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: helm_release.redis (prepare state) is provided by provider.helm or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: kubernetes_ingress.docker-registry-ingress (prepare state) is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: kubernetes_secret.timescale-credentials (prepare state) is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: null_resource.cert-manager-setup (prepare state) is provided by provider.null or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: kubernetes_secret.timescale-certificates (prepare state) is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: null_resource.rio-app-domains (prepare state) is provided by provider.null or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: data.local_file.rio-custom-domain (prepare state) is provided by provider.local or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: data.helm_repository.sentry (prepare state) is provided by provider.helm or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: helm_release.nginx-ingress (prepare state) is provided by provider.helm or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: data.helm_repository.incubator (prepare state) is provided by provider.helm or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: kubernetes_namespace.timescale (prepare state) is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: kubernetes_namespace.docker (prepare state) is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: kubernetes_ingress.sentry-ingress (prepare state) is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: helm_release.cert-manager (prepare state) is provided by provider.helm or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: kubernetes_deployment.buildkitd (prepare state) is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: kubernetes_ingress.rio-ingress (prepare state) is provided by provider.kubernetes or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: data.helm_repository.timescale (prepare state) is provided by provider.helm or inherited equivalent
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_ingress.docker-registry-ingress (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "kubernetes_ingress.docker-registry-ingress (prepare state)" (*terraform.NodeApplyableResource) needs provider.kubernetes
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.local serving data.local_file.rio-app-domains (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "data.local_file.rio-app-domains (prepare state)" (*terraform.NodeApplyableResource) needs provider.local
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.cert-manager (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "kubernetes_namespace.cert-manager (prepare state)" (*terraform.NodeApplyableResource) needs provider.kubernetes
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for module.cluster.provider.digitalocean serving module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state)" (*terraform.NodeApplyableResource) needs module.cluster.provider.digitalocean
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.metrics-server (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "kubernetes_namespace.metrics-server (prepare state)" (*terraform.NodeApplyableResource) needs provider.kubernetes
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.local serving data.local_file.rio-yaml (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "data.local_file.rio-yaml (prepare state)" (*terraform.NodeApplyableResource) needs provider.local
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.redis (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "helm_release.redis (prepare state)" (*terraform.NodeApplyableResource) needs provider.helm
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.redis (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "kubernetes_namespace.redis (prepare state)" (*terraform.NodeApplyableResource) needs provider.kubernetes
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.sentry-k8s-erros (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "helm_release.sentry-k8s-erros (prepare state)" (*terraform.NodeApplyableResource) needs provider.helm
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_deployment.buildkitd (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "kubernetes_deployment.buildkitd (prepare state)" (*terraform.NodeApplyableResource) needs provider.kubernetes
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.timescaledb (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "helm_release.timescaledb (prepare state)" (*terraform.NodeApplyableResource) needs provider.helm
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.helm serving data.helm_repository.sentry (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "data.helm_repository.sentry (prepare state)" (*terraform.NodeApplyableResource) needs provider.helm
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.postgres-ha
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "helm_release.postgres-ha" (*terraform.NodeApplyableResourceInstance) needs provider.helm
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for module.cluster.provider.digitalocean serving module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state)" (*terraform.NodeApplyableResource) needs module.cluster.provider.digitalocean
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.local serving data.local_file.rio-custom-domain (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "data.local_file.rio-custom-domain (prepare state)" (*terraform.NodeApplyableResource) needs provider.local
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_secret.timescale-credentials (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "kubernetes_secret.timescale-credentials (prepare state)" (*terraform.NodeApplyableResource) needs provider.kubernetes
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_secret.timescale-certificates (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "kubernetes_secret.timescale-certificates (prepare state)" (*terraform.NodeApplyableResource) needs provider.kubernetes
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.nginx-ingress (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "helm_release.nginx-ingress (prepare state)" (*terraform.NodeApplyableResource) needs provider.helm
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.timescale (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "kubernetes_namespace.timescale (prepare state)" (*terraform.NodeApplyableResource) needs provider.kubernetes
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.monitoring (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "kubernetes_namespace.monitoring (prepare state)" (*terraform.NodeApplyableResource) needs provider.kubernetes
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.nginx-ingress (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "kubernetes_namespace.nginx-ingress (prepare state)" (*terraform.NodeApplyableResource) needs provider.kubernetes
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.helm serving data.helm_repository.stable (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "data.helm_repository.stable (prepare state)" (*terraform.NodeApplyableResource) needs provider.helm
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.docker (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "kubernetes_namespace.docker (prepare state)" (*terraform.NodeApplyableResource) needs provider.kubernetes
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_ingress.grafana-ingress (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "kubernetes_ingress.grafana-ingress (prepare state)" (*terraform.NodeApplyableResource) needs provider.kubernetes
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.null serving null_resource.cert-manager-setup (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "null_resource.cert-manager-setup (prepare state)" (*terraform.NodeApplyableResource) needs provider.null
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.helm serving data.helm_repository.incubator (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "data.helm_repository.incubator (prepare state)" (*terraform.NodeApplyableResource) needs provider.helm
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.null serving null_resource.rio-custom-domain (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "null_resource.rio-custom-domain (prepare state)" (*terraform.NodeApplyableResource) needs provider.null
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_service.buildkitd (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "kubernetes_service.buildkitd (prepare state)" (*terraform.NodeApplyableResource) needs provider.kubernetes
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.cert-manager (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "helm_release.cert-manager (prepare state)" (*terraform.NodeApplyableResource) needs provider.helm
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for module.cluster.provider.digitalocean serving module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state)" (*terraform.NodeApplyableResource) needs module.cluster.provider.digitalocean
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.null serving null_resource.rio-setup (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "null_resource.rio-setup (prepare state)" (*terraform.NodeApplyableResource) needs provider.null
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.helm serving data.helm_repository.bitnami (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "data.helm_repository.bitnami (prepare state)" (*terraform.NodeApplyableResource) needs provider.helm
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.metrics-server (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "helm_release.metrics-server (prepare state)" (*terraform.NodeApplyableResource) needs provider.helm
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_secret.docker-registry-auth (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "kubernetes_secret.docker-registry-auth (prepare state)" (*terraform.NodeApplyableResource) needs provider.kubernetes
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.sentry (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "helm_release.sentry (prepare state)" (*terraform.NodeApplyableResource) needs provider.helm
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_secret.cloudflare-dns-api-token (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "kubernetes_secret.cloudflare-dns-api-token (prepare state)" (*terraform.NodeApplyableResource) needs provider.kubernetes
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.docker-registry (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "helm_release.docker-registry (prepare state)" (*terraform.NodeApplyableResource) needs provider.helm
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_ingress.sentry-ingress (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "kubernetes_ingress.sentry-ingress (prepare state)" (*terraform.NodeApplyableResource) needs provider.kubernetes
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_config_map.buildkitd-config (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "kubernetes_config_map.buildkitd-config (prepare state)" (*terraform.NodeApplyableResource) needs provider.kubernetes
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.null serving null_resource.create-timescaledb-setup (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "null_resource.create-timescaledb-setup (prepare state)" (*terraform.NodeApplyableResource) needs provider.null
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_persistent_volume_claim.image-proxy (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "kubernetes_persistent_volume_claim.image-proxy (prepare state)" (*terraform.NodeApplyableResource) needs provider.kubernetes
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for module.cluster.provider.digitalocean serving module.cluster.digitalocean_kubernetes_cluster.dish (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "module.cluster.digitalocean_kubernetes_cluster.dish (prepare state)" (*terraform.NodeApplyableResource) needs module.cluster.provider.digitalocean
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.postgres-ha (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "helm_release.postgres-ha (prepare state)" (*terraform.NodeApplyableResource) needs provider.helm
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_ingress.rio-ingress (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "kubernetes_ingress.rio-ingress (prepare state)" (*terraform.NodeApplyableResource) needs provider.kubernetes
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.sentry (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "kubernetes_namespace.sentry (prepare state)" (*terraform.NodeApplyableResource) needs provider.kubernetes
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.postgres-ha (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "kubernetes_namespace.postgres-ha (prepare state)" (*terraform.NodeApplyableResource) needs provider.kubernetes
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_namespace.rio (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "kubernetes_namespace.rio (prepare state)" (*terraform.NodeApplyableResource) needs provider.kubernetes
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.helm serving helm_release.prometheus-operator (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "helm_release.prometheus-operator (prepare state)" (*terraform.NodeApplyableResource) needs provider.helm
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.kubernetes serving kubernetes_secret.docker-config-json (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "kubernetes_secret.docker-config-json (prepare state)" (*terraform.NodeApplyableResource) needs provider.kubernetes
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.helm serving data.helm_repository.jetstack (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "data.helm_repository.jetstack (prepare state)" (*terraform.NodeApplyableResource) needs provider.helm
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.null serving null_resource.rio-app-domains (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "null_resource.rio-app-domains (prepare state)" (*terraform.NodeApplyableResource) needs provider.null
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.helm serving data.helm_repository.timescale (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "data.helm_repository.timescale (prepare state)" (*terraform.NodeApplyableResource) needs provider.helm
2020/08/09 19:26:47 [TRACE] ProviderTransformer: exact match for provider.local serving data.local_file.cert_manager_setup (prepare state)
2020/08/09 19:26:47 [DEBUG] ProviderTransformer: "data.local_file.cert_manager_setup (prepare state)" (*terraform.NodeApplyableResource) needs provider.local
2020/08/09 19:26:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  data.helm_repository.bitnami (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.docker-registry (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha - *terraform.NodeApplyableResourceInstance
    helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.prometheus-operator (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.redis (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry-k8s-erros (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.timescaledb (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_deployment.buildkitd (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.grafana-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.rio-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.sentry-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.cert-manager (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-config-json (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-registry-auth (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-certificates (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-credentials (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_service.buildkitd (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_cluster.dish (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.provider.kubernetes - *terraform.NodeApplyableProvider
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  null_resource.cert-manager-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  provider.digitalocean - *terraform.NodeApplyableProvider
  provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/08/09 19:26:47 [DEBUG] pruning unused provider.digitalocean
2020/08/09 19:26:47 [DEBUG] pruning unused module.cluster.provider.kubernetes
2020/08/09 19:26:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
  data.helm_repository.bitnami (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.docker-registry (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha - *terraform.NodeApplyableResourceInstance
    helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.prometheus-operator (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.redis (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry-k8s-erros (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.timescaledb (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_deployment.buildkitd (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.grafana-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.rio-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.sentry-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.cert-manager (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-config-json (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-registry-auth (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-certificates (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-credentials (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_service.buildkitd (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_cluster.dish (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  null_resource.cert-manager-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/08/09 19:26:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/08/09 19:26:47 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  data.helm_repository.bitnami (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.docker-registry (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha - *terraform.NodeApplyableResourceInstance
    helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.prometheus-operator (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.redis (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry-k8s-erros (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.timescaledb (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_deployment.buildkitd (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.grafana-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.rio-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.sentry-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.cert-manager (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-config-json (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-registry-auth (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-certificates (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-credentials (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_service.buildkitd (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_cluster.dish (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  null_resource.cert-manager-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:47 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/08/09 19:26:47 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/08/09 19:26:47 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.local
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to null_resource.rio-setup (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to null_resource.rio-setup (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.monitoring (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.cloudflare-dns-api-token (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_ingress.grafana-ingress (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.timescaledb (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to data.helm_repository.bitnami (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.nginx-ingress (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.cert-manager (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.null
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.postgres-ha
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to data.helm_repository.stable (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.docker-config-json (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.metrics-server (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.rio (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.prometheus-operator (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to data.local_file.rio-yaml (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching provider config schema to module.cluster.provider.digitalocean
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.postgres-ha (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to data.helm_repository.jetstack (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_persistent_volume_claim.image-proxy (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.sentry-k8s-erros (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.docker-registry (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.metrics-server (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.timescale-certificates (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.buildkitd (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.docker-registry-auth (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.redis (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_ingress.docker-registry-ingress (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_secret.timescale-credentials (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to null_resource.cert-manager-setup (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to null_resource.cert-manager-setup (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to data.helm_repository.sentry (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to null_resource.rio-app-domains (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to null_resource.rio-app-domains (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to data.local_file.rio-custom-domain (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_ingress.sentry-ingress (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.nginx-ingress (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to data.helm_repository.incubator (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.timescale (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.docker (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.helm
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.cert-manager (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to data.helm_repository.timescale (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.buildkitd (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_ingress.rio-ingress (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to module.cluster.digitalocean_kubernetes_cluster.dish (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to null_resource.rio-custom-domain (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to null_resource.rio-custom-domain (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.redis (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to data.local_file.cert_manager_setup (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to data.local_file.rio-app-domains (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.sentry (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_config_map.buildkitd-config (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to null_resource.create-timescaledb-setup (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to null_resource.create-timescaledb-setup (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.kubernetes
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.postgres-ha (prepare state)
2020/08/09 19:26:47 [TRACE] AttachSchemaTransformer: attaching resource schema to helm_release.sentry (prepare state)
2020/08/09 19:26:47 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/08/09 19:26:47 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "helm_release.postgres-ha" references: [var.POSTGRES_PASSWORD var.POSTGRES_REPMGR_PASSWORD]
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "var.SENTRY_PG_PASS" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "data.helm_repository.stable (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "kubernetes_namespace.metrics-server (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "var.DO_SPACES_SECRET" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "kubernetes_namespace.rio (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "helm_release.prometheus-operator (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "kubernetes_secret.docker-config-json (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "var.DO_SPACES_ID" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "module.cluster.provider.digitalocean" references: [module.cluster.var.DO_DISH_KEY]
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "kubernetes_namespace.postgres-ha (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "data.helm_repository.jetstack (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "data.local_file.rio-yaml (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "kubernetes_persistent_volume_claim.image-proxy (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "helm_release.sentry-k8s-erros (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "var.DO_DISH_KEY" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "var.POSTGRES_PASSWORD" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "module.cluster.var.DO_DISH_KEY" references: [var.DO_DISH_KEY]
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "var.TIMESCALE_SU_PASS" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "helm_release.docker-registry (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "helm_release.metrics-server (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "var.cert_manager_version" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "kubernetes_service.buildkitd (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "kubernetes_secret.docker-registry-auth (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "helm_release.redis (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "kubernetes_ingress.docker-registry-ingress (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "var.dish_domain" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "kubernetes_secret.timescale-credentials (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "null_resource.cert-manager-setup (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "kubernetes_secret.timescale-certificates (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "module.cluster.output.cluster-id" references: [module.cluster.digitalocean_kubernetes_cluster.dish (prepare state)]
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "var.TIMESCALE_REPLICATION_PASS" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "null_resource.rio-app-domains (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "data.local_file.rio-custom-domain (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "data.helm_repository.sentry (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "helm_release.nginx-ingress (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "data.helm_repository.incubator (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "kubernetes_namespace.timescale (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "kubernetes_namespace.docker (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "kubernetes_ingress.sentry-ingress (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "provider.helm" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "helm_release.cert-manager (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "var.DOCKER_REGISTRY_HTTP_AUTH" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "var.GRAFANA_PASSWORD" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "var.TIMESCALE_ADMIN_PASS" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "kubernetes_deployment.buildkitd (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "kubernetes_ingress.rio-ingress (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "data.helm_repository.timescale (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "provisioner.local-exec" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "var.GMAIL_APP_PASSWORD" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "var.SENTRY_USER_PASS" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "null_resource.rio-custom-domain (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "kubernetes_namespace.redis (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "module.cluster.digitalocean_kubernetes_cluster.dish (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "data.local_file.rio-app-domains (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "kubernetes_namespace.sentry (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "kubernetes_config_map.buildkitd-config (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "data.local_file.cert_manager_setup (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "var.DOCKER_CONFIG_JSON" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "provider.kubernetes" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "helm_release.postgres-ha (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "helm_release.sentry (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "null_resource.create-timescaledb-setup (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "var.POSTGRES_REPMGR_PASSWORD" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "provider.local" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "null_resource.rio-setup (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "kubernetes_namespace.monitoring (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "kubernetes_ingress.grafana-ingress (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "helm_release.timescaledb (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "data.helm_repository.bitnami (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "var.CLOUDFLARE_DNS_API_TOKEN" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "var.K8S_DSN" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "kubernetes_namespace.nginx-ingress (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "kubernetes_namespace.cert-manager (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "kubernetes_secret.cloudflare-dns-api-token (prepare state)" references: []
2020/08/09 19:26:47 [DEBUG] ReferenceTransformer: "provider.null" references: []
2020/08/09 19:26:47 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  data.helm_repository.bitnami (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.docker-registry (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha - *terraform.NodeApplyableResourceInstance
    helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.prometheus-operator (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.redis (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry-k8s-erros (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.timescaledb (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_deployment.buildkitd (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.grafana-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.rio-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.sentry-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.cert-manager (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-config-json (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-registry-auth (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-certificates (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-credentials (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_service.buildkitd (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_cluster.dish (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.output.cluster-id - *terraform.NodeApplyableOutput
    module.cluster.digitalocean_kubernetes_cluster.dish (prepare state) - *terraform.NodeApplyableResource
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
  null_resource.cert-manager-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:47 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2020/08/09 19:26:47 [TRACE] AttachDependenciesTransformer: helm_release.postgres-ha depends on []
2020/08/09 19:26:47 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2020/08/09 19:26:47 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2020/08/09 19:26:47 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2020/08/09 19:26:47 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2020/08/09 19:26:47 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2020/08/09 19:26:47 [TRACE] Executing graph transform *terraform.PruneUnusedValuesTransformer
2020/08/09 19:26:47 [TRACE] PruneUnusedValuesTransformer: removing unused value module.cluster.output.cluster-id
2020/08/09 19:26:47 [TRACE] Completed graph transform *terraform.PruneUnusedValuesTransformer with new graph:
  data.helm_repository.bitnami (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.docker-registry (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha - *terraform.NodeApplyableResourceInstance
    helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.prometheus-operator (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.redis (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry-k8s-erros (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.timescaledb (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_deployment.buildkitd (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.grafana-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.rio-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.sentry-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.cert-manager (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-config-json (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-registry-auth (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-certificates (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-credentials (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_service.buildkitd (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_cluster.dish (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
  null_resource.cert-manager-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:47 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/08/09 19:26:47 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  data.helm_repository.bitnami (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.docker-registry (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha - *terraform.NodeApplyableResourceInstance
    helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.prometheus-operator (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.redis (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry-k8s-erros (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.timescaledb (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_deployment.buildkitd (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.grafana-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.rio-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.sentry-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.cert-manager (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-config-json (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-registry-auth (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-certificates (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-credentials (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_service.buildkitd (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    data.helm_repository.bitnami (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.incubator (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.jetstack (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.sentry (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.stable (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.timescale (prepare state) - *terraform.NodeApplyableResource
    data.local_file.cert_manager_setup (prepare state) - *terraform.NodeApplyableResource
    data.local_file.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    data.local_file.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    data.local_file.rio-yaml (prepare state) - *terraform.NodeApplyableResource
    helm_release.cert-manager (prepare state) - *terraform.NodeApplyableResource
    helm_release.docker-registry (prepare state) - *terraform.NodeApplyableResource
    helm_release.metrics-server (prepare state) - *terraform.NodeApplyableResource
    helm_release.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    helm_release.postgres-ha - *terraform.NodeApplyableResourceInstance
    helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    helm_release.prometheus-operator (prepare state) - *terraform.NodeApplyableResource
    helm_release.redis (prepare state) - *terraform.NodeApplyableResource
    helm_release.sentry (prepare state) - *terraform.NodeApplyableResource
    helm_release.sentry-k8s-erros (prepare state) - *terraform.NodeApplyableResource
    helm_release.timescaledb (prepare state) - *terraform.NodeApplyableResource
    kubernetes_config_map.buildkitd-config (prepare state) - *terraform.NodeApplyableResource
    kubernetes_deployment.buildkitd (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.docker-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.grafana-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.rio-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.sentry-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.cert-manager (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.docker (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.metrics-server (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.monitoring (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.redis (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.rio (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.sentry (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.timescale (prepare state) - *terraform.NodeApplyableResource
    kubernetes_persistent_volume_claim.image-proxy (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.cloudflare-dns-api-token (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.docker-config-json (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.docker-registry-auth (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.timescale-certificates (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.timescale-credentials (prepare state) - *terraform.NodeApplyableResource
    kubernetes_service.buildkitd (prepare state) - *terraform.NodeApplyableResource
    module.cluster.digitalocean_kubernetes_cluster.dish (prepare state) - *terraform.NodeApplyableResource
    module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state) - *terraform.NodeApplyableResource
    module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state) - *terraform.NodeApplyableResource
    module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    null_resource.cert-manager-setup (prepare state) - *terraform.NodeApplyableResource
    null_resource.create-timescaledb-setup (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-setup (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
    provider.kubernetes - *terraform.NodeApplyableProvider
    provider.local - *terraform.NodeApplyableProvider
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
    var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
    var.DO_SPACES_ID - *terraform.NodeRootVariable
    var.DO_SPACES_SECRET - *terraform.NodeRootVariable
    var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
    var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
    var.K8S_DSN - *terraform.NodeRootVariable
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
    var.SENTRY_PG_PASS - *terraform.NodeRootVariable
    var.SENTRY_USER_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
    var.cert_manager_version - *terraform.NodeRootVariable
    var.dish_domain - *terraform.NodeRootVariable
  module.cluster.digitalocean_kubernetes_cluster.dish (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
  null_resource.cert-manager-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:47 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/08/09 19:26:47 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/08/09 19:26:47 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/08/09 19:26:47 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  data.helm_repository.bitnami (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.docker-registry (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha - *terraform.NodeApplyableResourceInstance
    helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.prometheus-operator (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.redis (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry-k8s-erros (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.timescaledb (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_deployment.buildkitd (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.grafana-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.rio-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.sentry-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.cert-manager (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-config-json (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-registry-auth (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-certificates (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-credentials (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_service.buildkitd (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    data.helm_repository.bitnami (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.incubator (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.jetstack (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.sentry (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.stable (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.timescale (prepare state) - *terraform.NodeApplyableResource
    data.local_file.cert_manager_setup (prepare state) - *terraform.NodeApplyableResource
    data.local_file.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    data.local_file.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    data.local_file.rio-yaml (prepare state) - *terraform.NodeApplyableResource
    helm_release.cert-manager (prepare state) - *terraform.NodeApplyableResource
    helm_release.docker-registry (prepare state) - *terraform.NodeApplyableResource
    helm_release.metrics-server (prepare state) - *terraform.NodeApplyableResource
    helm_release.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    helm_release.postgres-ha - *terraform.NodeApplyableResourceInstance
    helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    helm_release.prometheus-operator (prepare state) - *terraform.NodeApplyableResource
    helm_release.redis (prepare state) - *terraform.NodeApplyableResource
    helm_release.sentry (prepare state) - *terraform.NodeApplyableResource
    helm_release.sentry-k8s-erros (prepare state) - *terraform.NodeApplyableResource
    helm_release.timescaledb (prepare state) - *terraform.NodeApplyableResource
    kubernetes_config_map.buildkitd-config (prepare state) - *terraform.NodeApplyableResource
    kubernetes_deployment.buildkitd (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.docker-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.grafana-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.rio-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.sentry-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.cert-manager (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.docker (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.metrics-server (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.monitoring (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.redis (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.rio (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.sentry (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.timescale (prepare state) - *terraform.NodeApplyableResource
    kubernetes_persistent_volume_claim.image-proxy (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.cloudflare-dns-api-token (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.docker-config-json (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.docker-registry-auth (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.timescale-certificates (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.timescale-credentials (prepare state) - *terraform.NodeApplyableResource
    kubernetes_service.buildkitd (prepare state) - *terraform.NodeApplyableResource
    module.cluster.digitalocean_kubernetes_cluster.dish (prepare state) - *terraform.NodeApplyableResource
    module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state) - *terraform.NodeApplyableResource
    module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state) - *terraform.NodeApplyableResource
    module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    null_resource.cert-manager-setup (prepare state) - *terraform.NodeApplyableResource
    null_resource.create-timescaledb-setup (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-setup (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
    provider.kubernetes - *terraform.NodeApplyableProvider
    provider.local - *terraform.NodeApplyableProvider
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
    var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
    var.DO_SPACES_ID - *terraform.NodeRootVariable
    var.DO_SPACES_SECRET - *terraform.NodeRootVariable
    var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
    var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
    var.K8S_DSN - *terraform.NodeRootVariable
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
    var.SENTRY_PG_PASS - *terraform.NodeRootVariable
    var.SENTRY_USER_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
    var.cert_manager_version - *terraform.NodeRootVariable
    var.dish_domain - *terraform.NodeRootVariable
  module.cluster.digitalocean_kubernetes_cluster.dish (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  module.cluster.provider.digitalocean (close) - *terraform.graphNodeCloseProvider
    module.cluster.digitalocean_kubernetes_cluster.dish (prepare state) - *terraform.NodeApplyableResource
    module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state) - *terraform.NodeApplyableResource
    module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state) - *terraform.NodeApplyableResource
    module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
  null_resource.cert-manager-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  provider.helm - *terraform.NodeApplyableProvider
  provider.helm (close) - *terraform.graphNodeCloseProvider
    data.helm_repository.bitnami (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.incubator (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.jetstack (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.sentry (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.stable (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.timescale (prepare state) - *terraform.NodeApplyableResource
    helm_release.cert-manager (prepare state) - *terraform.NodeApplyableResource
    helm_release.docker-registry (prepare state) - *terraform.NodeApplyableResource
    helm_release.metrics-server (prepare state) - *terraform.NodeApplyableResource
    helm_release.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    helm_release.postgres-ha - *terraform.NodeApplyableResourceInstance
    helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    helm_release.prometheus-operator (prepare state) - *terraform.NodeApplyableResource
    helm_release.redis (prepare state) - *terraform.NodeApplyableResource
    helm_release.sentry (prepare state) - *terraform.NodeApplyableResource
    helm_release.sentry-k8s-erros (prepare state) - *terraform.NodeApplyableResource
    helm_release.timescaledb (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.kubernetes (close) - *terraform.graphNodeCloseProvider
    kubernetes_config_map.buildkitd-config (prepare state) - *terraform.NodeApplyableResource
    kubernetes_deployment.buildkitd (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.docker-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.grafana-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.rio-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.sentry-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.cert-manager (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.docker (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.metrics-server (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.monitoring (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.redis (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.rio (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.sentry (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.timescale (prepare state) - *terraform.NodeApplyableResource
    kubernetes_persistent_volume_claim.image-proxy (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.cloudflare-dns-api-token (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.docker-config-json (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.docker-registry-auth (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.timescale-certificates (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.timescale-credentials (prepare state) - *terraform.NodeApplyableResource
    kubernetes_service.buildkitd (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.local (close) - *terraform.graphNodeCloseProvider
    data.local_file.cert_manager_setup (prepare state) - *terraform.NodeApplyableResource
    data.local_file.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    data.local_file.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    data.local_file.rio-yaml (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  provider.null (close) - *terraform.graphNodeCloseProvider
    null_resource.cert-manager-setup (prepare state) - *terraform.NodeApplyableResource
    null_resource.create-timescaledb-setup (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:47 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/08/09 19:26:47 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer with new graph:
  data.helm_repository.bitnami (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.docker-registry (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha - *terraform.NodeApplyableResourceInstance
    helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.prometheus-operator (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.redis (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry-k8s-erros (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.timescaledb (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_deployment.buildkitd (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.grafana-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.rio-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.sentry-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.cert-manager (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-config-json (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-registry-auth (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-certificates (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-credentials (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_service.buildkitd (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    data.helm_repository.bitnami (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.incubator (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.jetstack (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.sentry (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.stable (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.timescale (prepare state) - *terraform.NodeApplyableResource
    data.local_file.cert_manager_setup (prepare state) - *terraform.NodeApplyableResource
    data.local_file.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    data.local_file.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    data.local_file.rio-yaml (prepare state) - *terraform.NodeApplyableResource
    helm_release.cert-manager (prepare state) - *terraform.NodeApplyableResource
    helm_release.docker-registry (prepare state) - *terraform.NodeApplyableResource
    helm_release.metrics-server (prepare state) - *terraform.NodeApplyableResource
    helm_release.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    helm_release.postgres-ha - *terraform.NodeApplyableResourceInstance
    helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    helm_release.prometheus-operator (prepare state) - *terraform.NodeApplyableResource
    helm_release.redis (prepare state) - *terraform.NodeApplyableResource
    helm_release.sentry (prepare state) - *terraform.NodeApplyableResource
    helm_release.sentry-k8s-erros (prepare state) - *terraform.NodeApplyableResource
    helm_release.timescaledb (prepare state) - *terraform.NodeApplyableResource
    kubernetes_config_map.buildkitd-config (prepare state) - *terraform.NodeApplyableResource
    kubernetes_deployment.buildkitd (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.docker-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.grafana-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.rio-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.sentry-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.cert-manager (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.docker (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.metrics-server (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.monitoring (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.redis (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.rio (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.sentry (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.timescale (prepare state) - *terraform.NodeApplyableResource
    kubernetes_persistent_volume_claim.image-proxy (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.cloudflare-dns-api-token (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.docker-config-json (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.docker-registry-auth (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.timescale-certificates (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.timescale-credentials (prepare state) - *terraform.NodeApplyableResource
    kubernetes_service.buildkitd (prepare state) - *terraform.NodeApplyableResource
    module.cluster.digitalocean_kubernetes_cluster.dish (prepare state) - *terraform.NodeApplyableResource
    module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state) - *terraform.NodeApplyableResource
    module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state) - *terraform.NodeApplyableResource
    module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    null_resource.cert-manager-setup (prepare state) - *terraform.NodeApplyableResource
    null_resource.create-timescaledb-setup (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-setup (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
    provider.kubernetes - *terraform.NodeApplyableProvider
    provider.local - *terraform.NodeApplyableProvider
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
    var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
    var.DO_SPACES_ID - *terraform.NodeRootVariable
    var.DO_SPACES_SECRET - *terraform.NodeRootVariable
    var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
    var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
    var.K8S_DSN - *terraform.NodeRootVariable
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
    var.SENTRY_PG_PASS - *terraform.NodeRootVariable
    var.SENTRY_USER_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
    var.cert_manager_version - *terraform.NodeRootVariable
    var.dish_domain - *terraform.NodeRootVariable
  module.cluster.digitalocean_kubernetes_cluster.dish (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  module.cluster.provider.digitalocean (close) - *terraform.graphNodeCloseProvider
    module.cluster.digitalocean_kubernetes_cluster.dish (prepare state) - *terraform.NodeApplyableResource
    module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state) - *terraform.NodeApplyableResource
    module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state) - *terraform.NodeApplyableResource
    module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
  null_resource.cert-manager-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  provider.helm - *terraform.NodeApplyableProvider
  provider.helm (close) - *terraform.graphNodeCloseProvider
    data.helm_repository.bitnami (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.incubator (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.jetstack (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.sentry (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.stable (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.timescale (prepare state) - *terraform.NodeApplyableResource
    helm_release.cert-manager (prepare state) - *terraform.NodeApplyableResource
    helm_release.docker-registry (prepare state) - *terraform.NodeApplyableResource
    helm_release.metrics-server (prepare state) - *terraform.NodeApplyableResource
    helm_release.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    helm_release.postgres-ha - *terraform.NodeApplyableResourceInstance
    helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    helm_release.prometheus-operator (prepare state) - *terraform.NodeApplyableResource
    helm_release.redis (prepare state) - *terraform.NodeApplyableResource
    helm_release.sentry (prepare state) - *terraform.NodeApplyableResource
    helm_release.sentry-k8s-erros (prepare state) - *terraform.NodeApplyableResource
    helm_release.timescaledb (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.kubernetes (close) - *terraform.graphNodeCloseProvider
    kubernetes_config_map.buildkitd-config (prepare state) - *terraform.NodeApplyableResource
    kubernetes_deployment.buildkitd (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.docker-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.grafana-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.rio-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.sentry-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.cert-manager (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.docker (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.metrics-server (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.monitoring (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.redis (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.rio (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.sentry (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.timescale (prepare state) - *terraform.NodeApplyableResource
    kubernetes_persistent_volume_claim.image-proxy (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.cloudflare-dns-api-token (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.docker-config-json (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.docker-registry-auth (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.timescale-certificates (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.timescale-credentials (prepare state) - *terraform.NodeApplyableResource
    kubernetes_service.buildkitd (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.local (close) - *terraform.graphNodeCloseProvider
    data.local_file.cert_manager_setup (prepare state) - *terraform.NodeApplyableResource
    data.local_file.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    data.local_file.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    data.local_file.rio-yaml (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  provider.null (close) - *terraform.graphNodeCloseProvider
    null_resource.cert-manager-setup (prepare state) - *terraform.NodeApplyableResource
    null_resource.create-timescaledb-setup (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    null_resource.cert-manager-setup (prepare state) - *terraform.NodeApplyableResource
    null_resource.create-timescaledb-setup (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-setup (prepare state) - *terraform.NodeApplyableResource
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:47 [TRACE] Executing graph transform *terraform.RootTransformer
2020/08/09 19:26:47 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  data.helm_repository.bitnami (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.docker-registry (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha - *terraform.NodeApplyableResourceInstance
    helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.prometheus-operator (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.redis (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry-k8s-erros (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.timescaledb (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_deployment.buildkitd (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.grafana-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.rio-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.sentry-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.cert-manager (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-config-json (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-registry-auth (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-certificates (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-credentials (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_service.buildkitd (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    data.helm_repository.bitnami (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.incubator (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.jetstack (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.sentry (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.stable (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.timescale (prepare state) - *terraform.NodeApplyableResource
    data.local_file.cert_manager_setup (prepare state) - *terraform.NodeApplyableResource
    data.local_file.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    data.local_file.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    data.local_file.rio-yaml (prepare state) - *terraform.NodeApplyableResource
    helm_release.cert-manager (prepare state) - *terraform.NodeApplyableResource
    helm_release.docker-registry (prepare state) - *terraform.NodeApplyableResource
    helm_release.metrics-server (prepare state) - *terraform.NodeApplyableResource
    helm_release.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    helm_release.postgres-ha - *terraform.NodeApplyableResourceInstance
    helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    helm_release.prometheus-operator (prepare state) - *terraform.NodeApplyableResource
    helm_release.redis (prepare state) - *terraform.NodeApplyableResource
    helm_release.sentry (prepare state) - *terraform.NodeApplyableResource
    helm_release.sentry-k8s-erros (prepare state) - *terraform.NodeApplyableResource
    helm_release.timescaledb (prepare state) - *terraform.NodeApplyableResource
    kubernetes_config_map.buildkitd-config (prepare state) - *terraform.NodeApplyableResource
    kubernetes_deployment.buildkitd (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.docker-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.grafana-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.rio-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.sentry-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.cert-manager (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.docker (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.metrics-server (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.monitoring (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.redis (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.rio (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.sentry (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.timescale (prepare state) - *terraform.NodeApplyableResource
    kubernetes_persistent_volume_claim.image-proxy (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.cloudflare-dns-api-token (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.docker-config-json (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.docker-registry-auth (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.timescale-certificates (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.timescale-credentials (prepare state) - *terraform.NodeApplyableResource
    kubernetes_service.buildkitd (prepare state) - *terraform.NodeApplyableResource
    module.cluster.digitalocean_kubernetes_cluster.dish (prepare state) - *terraform.NodeApplyableResource
    module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state) - *terraform.NodeApplyableResource
    module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state) - *terraform.NodeApplyableResource
    module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    null_resource.cert-manager-setup (prepare state) - *terraform.NodeApplyableResource
    null_resource.create-timescaledb-setup (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-setup (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
    provider.kubernetes - *terraform.NodeApplyableProvider
    provider.local - *terraform.NodeApplyableProvider
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
    var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
    var.DO_SPACES_ID - *terraform.NodeRootVariable
    var.DO_SPACES_SECRET - *terraform.NodeRootVariable
    var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
    var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
    var.K8S_DSN - *terraform.NodeRootVariable
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
    var.SENTRY_PG_PASS - *terraform.NodeRootVariable
    var.SENTRY_USER_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
    var.cert_manager_version - *terraform.NodeRootVariable
    var.dish_domain - *terraform.NodeRootVariable
  module.cluster.digitalocean_kubernetes_cluster.dish (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  module.cluster.provider.digitalocean (close) - *terraform.graphNodeCloseProvider
    module.cluster.digitalocean_kubernetes_cluster.dish (prepare state) - *terraform.NodeApplyableResource
    module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state) - *terraform.NodeApplyableResource
    module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state) - *terraform.NodeApplyableResource
    module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
  null_resource.cert-manager-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  provider.helm - *terraform.NodeApplyableProvider
  provider.helm (close) - *terraform.graphNodeCloseProvider
    data.helm_repository.bitnami (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.incubator (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.jetstack (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.sentry (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.stable (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.timescale (prepare state) - *terraform.NodeApplyableResource
    helm_release.cert-manager (prepare state) - *terraform.NodeApplyableResource
    helm_release.docker-registry (prepare state) - *terraform.NodeApplyableResource
    helm_release.metrics-server (prepare state) - *terraform.NodeApplyableResource
    helm_release.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    helm_release.postgres-ha - *terraform.NodeApplyableResourceInstance
    helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    helm_release.prometheus-operator (prepare state) - *terraform.NodeApplyableResource
    helm_release.redis (prepare state) - *terraform.NodeApplyableResource
    helm_release.sentry (prepare state) - *terraform.NodeApplyableResource
    helm_release.sentry-k8s-erros (prepare state) - *terraform.NodeApplyableResource
    helm_release.timescaledb (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.kubernetes (close) - *terraform.graphNodeCloseProvider
    kubernetes_config_map.buildkitd-config (prepare state) - *terraform.NodeApplyableResource
    kubernetes_deployment.buildkitd (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.docker-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.grafana-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.rio-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.sentry-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.cert-manager (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.docker (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.metrics-server (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.monitoring (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.redis (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.rio (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.sentry (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.timescale (prepare state) - *terraform.NodeApplyableResource
    kubernetes_persistent_volume_claim.image-proxy (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.cloudflare-dns-api-token (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.docker-config-json (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.docker-registry-auth (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.timescale-certificates (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.timescale-credentials (prepare state) - *terraform.NodeApplyableResource
    kubernetes_service.buildkitd (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  provider.local - *terraform.NodeApplyableProvider
  provider.local (close) - *terraform.graphNodeCloseProvider
    data.local_file.cert_manager_setup (prepare state) - *terraform.NodeApplyableResource
    data.local_file.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    data.local_file.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    data.local_file.rio-yaml (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  provider.null - *terraform.NodeApplyableProvider
  provider.null (close) - *terraform.graphNodeCloseProvider
    null_resource.cert-manager-setup (prepare state) - *terraform.NodeApplyableResource
    null_resource.create-timescaledb-setup (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    null_resource.cert-manager-setup (prepare state) - *terraform.NodeApplyableResource
    null_resource.create-timescaledb-setup (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-setup (prepare state) - *terraform.NodeApplyableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    module.cluster.provider.digitalocean (close) - *terraform.graphNodeCloseProvider
    provider.helm (close) - *terraform.graphNodeCloseProvider
    provider.kubernetes (close) - *terraform.graphNodeCloseProvider
    provider.local (close) - *terraform.graphNodeCloseProvider
    provider.null (close) - *terraform.graphNodeCloseProvider
    provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:47 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/08/09 19:26:47 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  data.helm_repository.bitnami (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.incubator (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.jetstack (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.sentry (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.stable (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.helm_repository.timescale (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  data.local_file.cert_manager_setup (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  data.local_file.rio-yaml (prepare state) - *terraform.NodeApplyableResource
    provider.local - *terraform.NodeApplyableProvider
  helm_release.cert-manager (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.docker-registry (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.metrics-server (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.postgres-ha - *terraform.NodeApplyableResourceInstance
    helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
    var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  helm_release.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.prometheus-operator (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.redis (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.sentry-k8s-erros (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  helm_release.timescaledb (prepare state) - *terraform.NodeApplyableResource
    provider.helm - *terraform.NodeApplyableProvider
  kubernetes_config_map.buildkitd-config (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_deployment.buildkitd (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.docker-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.grafana-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.rio-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_ingress.sentry-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.cert-manager (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.docker (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.metrics-server (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.monitoring (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.redis (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.rio (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.sentry (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_namespace.timescale (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_persistent_volume_claim.image-proxy (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.cloudflare-dns-api-token (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-config-json (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.docker-registry-auth (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-certificates (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_secret.timescale-credentials (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  kubernetes_service.buildkitd (prepare state) - *terraform.NodeApplyableResource
    provider.kubernetes - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    data.helm_repository.bitnami (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.incubator (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.jetstack (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.sentry (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.stable (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.timescale (prepare state) - *terraform.NodeApplyableResource
    data.local_file.cert_manager_setup (prepare state) - *terraform.NodeApplyableResource
    data.local_file.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    data.local_file.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    data.local_file.rio-yaml (prepare state) - *terraform.NodeApplyableResource
    helm_release.cert-manager (prepare state) - *terraform.NodeApplyableResource
    helm_release.docker-registry (prepare state) - *terraform.NodeApplyableResource
    helm_release.metrics-server (prepare state) - *terraform.NodeApplyableResource
    helm_release.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    helm_release.postgres-ha - *terraform.NodeApplyableResourceInstance
    helm_release.prometheus-operator (prepare state) - *terraform.NodeApplyableResource
    helm_release.redis (prepare state) - *terraform.NodeApplyableResource
    helm_release.sentry (prepare state) - *terraform.NodeApplyableResource
    helm_release.sentry-k8s-erros (prepare state) - *terraform.NodeApplyableResource
    helm_release.timescaledb (prepare state) - *terraform.NodeApplyableResource
    kubernetes_config_map.buildkitd-config (prepare state) - *terraform.NodeApplyableResource
    kubernetes_deployment.buildkitd (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.docker-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.grafana-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.rio-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.sentry-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.cert-manager (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.docker (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.metrics-server (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.monitoring (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.redis (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.rio (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.sentry (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.timescale (prepare state) - *terraform.NodeApplyableResource
    kubernetes_persistent_volume_claim.image-proxy (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.cloudflare-dns-api-token (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.docker-config-json (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.docker-registry-auth (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.timescale-certificates (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.timescale-credentials (prepare state) - *terraform.NodeApplyableResource
    kubernetes_service.buildkitd (prepare state) - *terraform.NodeApplyableResource
    module.cluster.digitalocean_kubernetes_cluster.dish (prepare state) - *terraform.NodeApplyableResource
    module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state) - *terraform.NodeApplyableResource
    module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state) - *terraform.NodeApplyableResource
    module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state) - *terraform.NodeApplyableResource
    null_resource.cert-manager-setup (prepare state) - *terraform.NodeApplyableResource
    null_resource.create-timescaledb-setup (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-setup (prepare state) - *terraform.NodeApplyableResource
    var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
    var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
    var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
    var.DO_SPACES_ID - *terraform.NodeRootVariable
    var.DO_SPACES_SECRET - *terraform.NodeRootVariable
    var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
    var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
    var.K8S_DSN - *terraform.NodeRootVariable
    var.SENTRY_PG_PASS - *terraform.NodeRootVariable
    var.SENTRY_USER_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
    var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
    var.cert_manager_version - *terraform.NodeRootVariable
    var.dish_domain - *terraform.NodeRootVariable
  module.cluster.digitalocean_kubernetes_cluster.dish (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state) - *terraform.NodeApplyableResource
    module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
  module.cluster.provider.digitalocean - *terraform.NodeApplyableProvider
    module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
  module.cluster.provider.digitalocean (close) - *terraform.graphNodeCloseProvider
    module.cluster.digitalocean_kubernetes_cluster.dish (prepare state) - *terraform.NodeApplyableResource
    module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state) - *terraform.NodeApplyableResource
    module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state) - *terraform.NodeApplyableResource
    module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state) - *terraform.NodeApplyableResource
  module.cluster.var.DO_DISH_KEY - *terraform.NodeApplyableModuleVariable
    var.DO_DISH_KEY - *terraform.NodeRootVariable
  null_resource.cert-manager-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.create-timescaledb-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  null_resource.rio-setup (prepare state) - *terraform.NodeApplyableResource
    provider.null - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  provider.helm - *terraform.NodeApplyableProvider
  provider.helm (close) - *terraform.graphNodeCloseProvider
    data.helm_repository.bitnami (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.incubator (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.jetstack (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.sentry (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.stable (prepare state) - *terraform.NodeApplyableResource
    data.helm_repository.timescale (prepare state) - *terraform.NodeApplyableResource
    helm_release.cert-manager (prepare state) - *terraform.NodeApplyableResource
    helm_release.docker-registry (prepare state) - *terraform.NodeApplyableResource
    helm_release.metrics-server (prepare state) - *terraform.NodeApplyableResource
    helm_release.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    helm_release.postgres-ha - *terraform.NodeApplyableResourceInstance
    helm_release.prometheus-operator (prepare state) - *terraform.NodeApplyableResource
    helm_release.redis (prepare state) - *terraform.NodeApplyableResource
    helm_release.sentry (prepare state) - *terraform.NodeApplyableResource
    helm_release.sentry-k8s-erros (prepare state) - *terraform.NodeApplyableResource
    helm_release.timescaledb (prepare state) - *terraform.NodeApplyableResource
  provider.kubernetes - *terraform.NodeApplyableProvider
  provider.kubernetes (close) - *terraform.graphNodeCloseProvider
    kubernetes_config_map.buildkitd-config (prepare state) - *terraform.NodeApplyableResource
    kubernetes_deployment.buildkitd (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.docker-registry-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.grafana-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.rio-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_ingress.sentry-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.cert-manager (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.docker (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.metrics-server (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.monitoring (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.nginx-ingress (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.postgres-ha (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.redis (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.rio (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.sentry (prepare state) - *terraform.NodeApplyableResource
    kubernetes_namespace.timescale (prepare state) - *terraform.NodeApplyableResource
    kubernetes_persistent_volume_claim.image-proxy (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.cloudflare-dns-api-token (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.docker-config-json (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.docker-registry-auth (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.timescale-certificates (prepare state) - *terraform.NodeApplyableResource
    kubernetes_secret.timescale-credentials (prepare state) - *terraform.NodeApplyableResource
    kubernetes_service.buildkitd (prepare state) - *terraform.NodeApplyableResource
  provider.local - *terraform.NodeApplyableProvider
  provider.local (close) - *terraform.graphNodeCloseProvider
    data.local_file.cert_manager_setup (prepare state) - *terraform.NodeApplyableResource
    data.local_file.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    data.local_file.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    data.local_file.rio-yaml (prepare state) - *terraform.NodeApplyableResource
  provider.null - *terraform.NodeApplyableProvider
  provider.null (close) - *terraform.graphNodeCloseProvider
    null_resource.cert-manager-setup (prepare state) - *terraform.NodeApplyableResource
    null_resource.create-timescaledb-setup (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-setup (prepare state) - *terraform.NodeApplyableResource
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    null_resource.cert-manager-setup (prepare state) - *terraform.NodeApplyableResource
    null_resource.create-timescaledb-setup (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-app-domains (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-custom-domain (prepare state) - *terraform.NodeApplyableResource
    null_resource.rio-setup (prepare state) - *terraform.NodeApplyableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    module.cluster.provider.digitalocean (close) - *terraform.graphNodeCloseProvider
    provider.helm (close) - *terraform.graphNodeCloseProvider
    provider.kubernetes (close) - *terraform.graphNodeCloseProvider
    provider.local (close) - *terraform.graphNodeCloseProvider
    provider.null (close) - *terraform.graphNodeCloseProvider
    provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
  var.CLOUDFLARE_DNS_API_TOKEN - *terraform.NodeRootVariable
  var.DOCKER_CONFIG_JSON - *terraform.NodeRootVariable
  var.DOCKER_REGISTRY_HTTP_AUTH - *terraform.NodeRootVariable
  var.DO_DISH_KEY - *terraform.NodeRootVariable
  var.DO_SPACES_ID - *terraform.NodeRootVariable
  var.DO_SPACES_SECRET - *terraform.NodeRootVariable
  var.GMAIL_APP_PASSWORD - *terraform.NodeRootVariable
  var.GRAFANA_PASSWORD - *terraform.NodeRootVariable
  var.K8S_DSN - *terraform.NodeRootVariable
  var.POSTGRES_PASSWORD - *terraform.NodeRootVariable
  var.POSTGRES_REPMGR_PASSWORD - *terraform.NodeRootVariable
  var.SENTRY_PG_PASS - *terraform.NodeRootVariable
  var.SENTRY_USER_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_ADMIN_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_REPLICATION_PASS - *terraform.NodeRootVariable
  var.TIMESCALE_SU_PASS - *terraform.NodeRootVariable
  var.cert_manager_version - *terraform.NodeRootVariable
  var.dish_domain - *terraform.NodeRootVariable
  ------
2020/08/09 19:26:47 [DEBUG] Starting graph walk: walkApply
2020/08/09 19:26:47 [TRACE] dag/walk: updating graph
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "helm_release.prometheus-operator (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "var.DOCKER_REGISTRY_HTTP_AUTH"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "null_resource.rio-custom-domain (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.monitoring (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "kubernetes_ingress.grafana-ingress (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "kubernetes_secret.docker-config-json (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "var.K8S_DSN"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "provider.local (close)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.cert-manager (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "provider.kubernetes (close)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "helm_release.docker-registry (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "kubernetes_secret.timescale-certificates (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "kubernetes_ingress.docker-registry-ingress (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "helm_release.postgres-ha (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "data.helm_repository.bitnami (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "helm_release.redis (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.timescale (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "data.helm_repository.stable (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "var.POSTGRES_PASSWORD"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "provisioner.local-exec (close)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "provider.kubernetes"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.nginx-ingress (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "helm_release.postgres-ha"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "kubernetes_service.buildkitd (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "kubernetes_config_map.buildkitd-config (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "var.CLOUDFLARE_DNS_API_TOKEN"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "kubernetes_ingress.sentry-ingress (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "kubernetes_secret.cloudflare-dns-api-token (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.metrics-server (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "data.local_file.rio-yaml (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "kubernetes_deployment.buildkitd (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "provisioner.local-exec"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "var.DOCKER_CONFIG_JSON"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "provider.local"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "var.SENTRY_USER_PASS"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "provider.null"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "data.helm_repository.jetstack (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "var.TIMESCALE_SU_PASS"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "var.TIMESCALE_REPLICATION_PASS"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "module.cluster.provider.digitalocean (close)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "null_resource.create-timescaledb-setup (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "var.POSTGRES_REPMGR_PASSWORD"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.docker (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "module.cluster.digitalocean_kubernetes_cluster.dish (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "data.local_file.rio-app-domains (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "kubernetes_secret.timescale-credentials (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.rio (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "kubernetes_secret.docker-registry-auth (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "var.dish_domain"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "helm_release.sentry (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "var.DO_SPACES_SECRET"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "var.DO_SPACES_ID"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "module.cluster.provider.digitalocean"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "provider.helm (close)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "provider.null (close)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "provider.helm"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "data.helm_repository.timescale (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.sentry (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "null_resource.rio-setup (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "var.DO_DISH_KEY"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "module.cluster.var.DO_DISH_KEY"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "var.cert_manager_version"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "null_resource.cert-manager-setup (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "data.helm_repository.sentry (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "kubernetes_ingress.rio-ingress (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "var.SENTRY_PG_PASS"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "root"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "helm_release.sentry-k8s-erros (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "helm_release.metrics-server (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "null_resource.rio-app-domains (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "data.helm_repository.incubator (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "var.GMAIL_APP_PASSWORD"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.redis (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "helm_release.timescaledb (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "kubernetes_namespace.postgres-ha (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "data.local_file.rio-custom-domain (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "var.TIMESCALE_ADMIN_PASS"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "kubernetes_persistent_volume_claim.image-proxy (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "helm_release.nginx-ingress (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "var.GRAFANA_PASSWORD"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "helm_release.cert-manager (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "data.local_file.cert_manager_setup (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added new vertex: "module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "module.cluster.provider.digitalocean (close)" waiting on "module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.DO_SPACES_ID"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "helm_release.nginx-ingress (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "root" waiting on "provider.kubernetes (close)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.sentry (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "root" waiting on "provider.null (close)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "root" waiting on "provider.local (close)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.metrics-server (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "kubernetes_namespace.sentry (prepare state)" waiting on "provider.kubernetes"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "kubernetes_secret.docker-config-json (prepare state)" waiting on "provider.kubernetes"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "null_resource.rio-setup (prepare state)" waiting on "provisioner.local-exec"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "null_resource.create-timescaledb-setup (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.null (close)" waiting on "null_resource.create-timescaledb-setup (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "helm_release.docker-registry (prepare state)" waiting on "provider.helm"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_namespace.sentry (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "kubernetes_service.buildkitd (prepare state)" waiting on "provider.kubernetes"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "data.local_file.rio-custom-domain (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.CLOUDFLARE_DNS_API_TOKEN"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "module.cluster.provider.digitalocean (close)" waiting on "module.cluster.digitalocean_kubernetes_cluster.dish (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.redis (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "root" waiting on "provider.helm (close)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_namespace.timescale (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.null (close)" waiting on "null_resource.cert-manager-setup (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.SENTRY_PG_PASS"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.sentry (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_namespace.metrics-server (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "null_resource.cert-manager-setup (prepare state)" waiting on "provisioner.local-exec"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_secret.timescale-certificates (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.GMAIL_APP_PASSWORD"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "data.helm_repository.bitnami (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.TIMESCALE_REPLICATION_PASS"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "data.helm_repository.stable (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "module.cluster.digitalocean_kubernetes_cluster.dish (prepare state)" waiting on "module.cluster.provider.digitalocean"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "data.helm_repository.incubator (prepare state)" waiting on "provider.helm"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_ingress.rio-ingress (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "data.local_file.cert_manager_setup (prepare state)" waiting on "provider.local"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.cluster.digitalocean_kubernetes_cluster.dish (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "kubernetes_namespace.redis (prepare state)" waiting on "provider.kubernetes"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "helm_release.sentry-k8s-erros (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.timescale (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state)" waiting on "module.cluster.provider.digitalocean"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "helm_release.docker-registry (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "kubernetes_namespace.rio (prepare state)" waiting on "provider.kubernetes"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.rio (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.sentry-k8s-erros (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "helm_release.postgres-ha (prepare state)" waiting on "provider.helm"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_deployment.buildkitd (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.cert-manager (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_ingress.rio-ingress (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_ingress.grafana-ingress (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "data.helm_repository.timescale (prepare state)" waiting on "provider.helm"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "helm_release.cert-manager (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "root" waiting on "module.cluster.provider.digitalocean (close)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.DO_SPACES_SECRET"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "helm_release.postgres-ha"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.K8S_DSN"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_secret.cloudflare-dns-api-token (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "kubernetes_deployment.buildkitd (prepare state)" waiting on "provider.kubernetes"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "null_resource.cert-manager-setup (prepare state)" waiting on "provider.null"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "kubernetes_ingress.rio-ingress (prepare state)" waiting on "provider.kubernetes"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "null_resource.create-timescaledb-setup (prepare state)" waiting on "provider.null"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "kubernetes_namespace.monitoring (prepare state)" waiting on "provider.kubernetes"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "data.helm_repository.stable (prepare state)" waiting on "provider.helm"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "null_resource.rio-app-domains (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "null_resource.rio-custom-domain (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "helm_release.sentry-k8s-erros (prepare state)" waiting on "provider.helm"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "kubernetes_ingress.grafana-ingress (prepare state)" waiting on "provider.kubernetes"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "data.helm_repository.timescale (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_persistent_volume_claim.image-proxy (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_secret.docker-config-json (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "helm_release.metrics-server (prepare state)" waiting on "provider.helm"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provisioner.local-exec (close)" waiting on "null_resource.rio-app-domains (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_config_map.buildkitd-config (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.DOCKER_CONFIG_JSON"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_secret.timescale-certificates (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "kubernetes_secret.docker-registry-auth (prepare state)" waiting on "provider.kubernetes"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_ingress.docker-registry-ingress (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "helm_release.prometheus-operator (prepare state)" waiting on "provider.helm"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "kubernetes_namespace.docker (prepare state)" waiting on "provider.kubernetes"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "kubernetes_ingress.docker-registry-ingress (prepare state)" waiting on "provider.kubernetes"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "helm_release.metrics-server (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_namespace.postgres-ha (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "data.helm_repository.bitnami (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_ingress.sentry-ingress (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.postgres-ha (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "helm_release.redis (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "helm_release.postgres-ha" waiting on "var.POSTGRES_REPMGR_PASSWORD"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "null_resource.create-timescaledb-setup (prepare state)" waiting on "provisioner.local-exec"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.local (close)" waiting on "data.local_file.rio-app-domains (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "data.local_file.rio-app-domains (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "null_resource.rio-custom-domain (prepare state)" waiting on "provisioner.local-exec"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.null (close)" waiting on "null_resource.rio-app-domains (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "helm_release.postgres-ha" waiting on "var.POSTGRES_PASSWORD"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.GRAFANA_PASSWORD"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provisioner.local-exec (close)" waiting on "null_resource.rio-custom-domain (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.metrics-server (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "kubernetes_secret.cloudflare-dns-api-token (prepare state)" waiting on "provider.kubernetes"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.cert_manager_version"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_namespace.rio (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "helm_release.cert-manager (prepare state)" waiting on "provider.helm"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_namespace.redis (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "null_resource.rio-app-domains (prepare state)" waiting on "provider.null"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.TIMESCALE_ADMIN_PASS"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.local (close)" waiting on "data.local_file.rio-yaml (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "null_resource.rio-setup (prepare state)" waiting on "provider.null"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.null (close)" waiting on "null_resource.rio-custom-domain (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_secret.docker-registry-auth (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.local (close)" waiting on "data.local_file.rio-custom-domain (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.prometheus-operator (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "helm_release.nginx-ingress (prepare state)" waiting on "provider.helm"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "helm_release.sentry (prepare state)" waiting on "provider.helm"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_service.buildkitd (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "data.helm_repository.sentry (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "data.local_file.rio-app-domains (prepare state)" waiting on "provider.local"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "module.cluster.provider.digitalocean (close)" waiting on "module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_namespace.monitoring (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "null_resource.rio-setup (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "data.helm_repository.jetstack (prepare state)" waiting on "provider.helm"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state)" waiting on "module.cluster.provider.digitalocean"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_persistent_volume_claim.image-proxy (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_namespace.docker (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "helm_release.timescaledb (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_config_map.buildkitd-config (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "root" waiting on "provisioner.local-exec (close)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "helm_release.sentry (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "kubernetes_secret.timescale-credentials (prepare state)" waiting on "provider.kubernetes"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "kubernetes_namespace.metrics-server (prepare state)" waiting on "provider.kubernetes"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "kubernetes_namespace.timescale (prepare state)" waiting on "provider.kubernetes"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "data.helm_repository.jetstack (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_secret.docker-config-json (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "data.local_file.rio-yaml (prepare state)" waiting on "provider.local"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "data.helm_repository.bitnami (prepare state)" waiting on "provider.helm"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "data.local_file.rio-custom-domain (prepare state)" waiting on "provider.local"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "helm_release.redis (prepare state)" waiting on "provider.helm"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "data.local_file.cert_manager_setup (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provisioner.local-exec (close)" waiting on "null_resource.cert-manager-setup (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.postgres-ha"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.local (close)" waiting on "data.local_file.cert_manager_setup (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "kubernetes_persistent_volume_claim.image-proxy (prepare state)" waiting on "provider.kubernetes"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "null_resource.rio-custom-domain (prepare state)" waiting on "provider.null"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_secret.cloudflare-dns-api-token (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "kubernetes_secret.timescale-certificates (prepare state)" waiting on "provider.kubernetes"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.SENTRY_USER_PASS"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "null_resource.rio-app-domains (prepare state)" waiting on "provisioner.local-exec"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_namespace.nginx-ingress (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.TIMESCALE_SU_PASS"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "helm_release.postgres-ha" waiting on "helm_release.postgres-ha (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "data.helm_repository.timescale (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "module.cluster.provider.digitalocean" waiting on "module.cluster.var.DO_DISH_KEY"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "kubernetes_namespace.postgres-ha (prepare state)" waiting on "provider.kubernetes"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.nginx-ingress (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "data.helm_repository.sentry (prepare state)" waiting on "provider.helm"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "module.cluster.var.DO_DISH_KEY" waiting on "var.DO_DISH_KEY"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.dish_domain"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "data.helm_repository.stable (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "data.helm_repository.incubator (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.monitoring (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "data.helm_repository.jetstack (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "kubernetes_namespace.nginx-ingress (prepare state)" waiting on "provider.kubernetes"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.nginx-ingress (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.redis (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "data.helm_repository.incubator (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.null (close)" waiting on "null_resource.rio-setup (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_ingress.sentry-ingress (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_secret.timescale-credentials (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_secret.docker-registry-auth (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "module.cluster.provider.digitalocean (close)" waiting on "module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state)" waiting on "module.cluster.provider.digitalocean"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_secret.timescale-credentials (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.DOCKER_REGISTRY_HTTP_AUTH"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "helm_release.timescaledb (prepare state)" waiting on "provider.helm"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_deployment.buildkitd (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provisioner.local-exec (close)" waiting on "null_resource.rio-setup (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.cert-manager (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.kubernetes (close)" waiting on "kubernetes_namespace.docker (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "helm_release.prometheus-operator (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_service.buildkitd (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.timescaledb (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "data.local_file.rio-yaml (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provisioner.local-exec (close)" waiting on "null_resource.create-timescaledb-setup (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "provider.helm (close)" waiting on "helm_release.docker-registry (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "kubernetes_ingress.sentry-ingress (prepare state)" waiting on "provider.kubernetes"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "null_resource.cert-manager-setup (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "kubernetes_namespace.cert-manager (prepare state)" waiting on "provider.kubernetes"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_ingress.docker-registry-ingress (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_ingress.grafana-ingress (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "kubernetes_config_map.buildkitd-config (prepare state)" waiting on "provider.kubernetes"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "data.helm_repository.sentry (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubernetes_namespace.cert-manager (prepare state)"
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.cert-manager (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "provider.kubernetes (close)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.rio (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "provider.local (close)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "helm_release.cert-manager (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "kubernetes_secret.timescale-credentials (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.nginx-ingress (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "kubernetes_ingress.grafana-ingress (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "helm_release.metrics-server (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "helm_release.postgres-ha", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "kubernetes_secret.cloudflare-dns-api-token (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "data.local_file.rio-yaml (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "provider.null (close)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "module.cluster.digitalocean_kubernetes_cluster.dish (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "helm_release.postgres-ha (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "null_resource.rio-custom-domain (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.timescale (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "kubernetes_config_map.buildkitd-config (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "null_resource.rio-app-domains (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "data.local_file.rio-app-domains (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "data.helm_repository.jetstack (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "module.cluster.provider.digitalocean", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.postgres-ha (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "module.cluster.var.DO_DISH_KEY", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "data.helm_repository.incubator (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "data.helm_repository.timescale (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "provisioner.local-exec (close)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "helm_release.redis (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "kubernetes_persistent_volume_claim.image-proxy (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "null_resource.cert-manager-setup (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "kubernetes_secret.docker-registry-auth (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.metrics-server (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "data.helm_repository.bitnami (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.redis (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "kubernetes_deployment.buildkitd (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.monitoring (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "helm_release.nginx-ingress (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "kubernetes_secret.timescale-certificates (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "data.local_file.rio-custom-domain (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "data.helm_repository.sentry (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "data.local_file.cert_manager_setup (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "kubernetes_ingress.docker-registry-ingress (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "helm_release.sentry (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "null_resource.rio-setup (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "helm_release.prometheus-operator (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "kubernetes_service.buildkitd (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "kubernetes_ingress.rio-ingress (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "module.cluster.provider.digitalocean (close)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "helm_release.docker-registry (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.docker (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "kubernetes_secret.docker-config-json (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "data.helm_repository.stable (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "kubernetes_ingress.sentry-ingress (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "provider.helm (close)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "null_resource.create-timescaledb-setup (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "helm_release.sentry-k8s-erros (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "kubernetes_namespace.sentry (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: dependencies changed for "helm_release.timescaledb (prepare state)", sending new deps
2020/08/09 19:26:47 [TRACE] dag/walk: visiting "var.TIMESCALE_SU_PASS"
2020/08/09 19:26:47 [TRACE] vertex "var.TIMESCALE_SU_PASS": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:47 [TRACE] vertex "var.TIMESCALE_SU_PASS": evaluating
2020/08/09 19:26:47 [TRACE] dag/walk: visiting "var.SENTRY_PG_PASS"
2020/08/09 19:26:47 [TRACE] dag/walk: visiting "var.GMAIL_APP_PASSWORD"
2020/08/09 19:26:47 [TRACE] [walkApply] Entering eval tree: var.TIMESCALE_SU_PASS
2020/08/09 19:26:47 [TRACE] vertex "var.SENTRY_PG_PASS": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:47 [TRACE] dag/walk: visiting "var.dish_domain"
2020/08/09 19:26:47 [TRACE] vertex "var.GMAIL_APP_PASSWORD": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:47 [TRACE] vertex "var.SENTRY_PG_PASS": evaluating
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:47 [TRACE] vertex "var.dish_domain": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:47 [TRACE] dag/walk: visiting "var.DOCKER_CONFIG_JSON"
2020/08/09 19:26:47 [TRACE] vertex "var.dish_domain": evaluating
2020/08/09 19:26:47 [TRACE] dag/walk: visiting "var.TIMESCALE_REPLICATION_PASS"
2020/08/09 19:26:47 [TRACE] [walkApply] Entering eval tree: var.dish_domain
2020/08/09 19:26:47 [TRACE] dag/walk: visiting "var.DO_DISH_KEY"
2020/08/09 19:26:47 [TRACE] dag/walk: visiting "var.DOCKER_REGISTRY_HTTP_AUTH"
2020/08/09 19:26:47 [TRACE] dag/walk: visiting "var.POSTGRES_REPMGR_PASSWORD"
2020/08/09 19:26:47 [TRACE] vertex "var.DOCKER_REGISTRY_HTTP_AUTH": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:47 [TRACE] vertex "var.TIMESCALE_REPLICATION_PASS": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:47 [TRACE] vertex "var.POSTGRES_REPMGR_PASSWORD": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:47 [TRACE] dag/walk: visiting "provider.helm"
2020/08/09 19:26:47 [TRACE] dag/walk: visiting "var.DO_SPACES_ID"
2020/08/09 19:26:47 [TRACE] vertex "var.DOCKER_REGISTRY_HTTP_AUTH": evaluating
2020/08/09 19:26:47 [TRACE] dag/walk: visiting "provider.local"
2020/08/09 19:26:47 [TRACE] vertex "var.DO_SPACES_ID": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:47 [TRACE] vertex "var.TIMESCALE_REPLICATION_PASS": evaluating
2020/08/09 19:26:47 [TRACE] vertex "provider.local": starting visit (*terraform.NodeApplyableProvider)
2020/08/09 19:26:47 [TRACE] [walkApply] Entering eval tree: var.DOCKER_REGISTRY_HTTP_AUTH
2020/08/09 19:26:47 [TRACE] vertex "var.DO_SPACES_ID": evaluating
2020/08/09 19:26:47 [TRACE] dag/walk: visiting "provider.null"
2020/08/09 19:26:47 [TRACE] dag/walk: visiting "var.TIMESCALE_ADMIN_PASS"
2020/08/09 19:26:47 [TRACE] [walkApply] Entering eval tree: var.DO_SPACES_ID
2020/08/09 19:26:47 [TRACE] vertex "provider.null": starting visit (*terraform.NodeApplyableProvider)
2020/08/09 19:26:47 [TRACE] dag/walk: visiting "var.SENTRY_USER_PASS"
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:47 [TRACE] vertex "provider.local": evaluating
2020/08/09 19:26:47 [TRACE] vertex "var.SENTRY_USER_PASS": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:47 [TRACE] [walkApply] Exiting eval tree: var.DO_SPACES_ID
2020/08/09 19:26:47 [TRACE] vertex "provider.null": evaluating
2020/08/09 19:26:47 [TRACE] dag/walk: visiting "var.K8S_DSN"
2020/08/09 19:26:47 [TRACE] vertex "var.SENTRY_USER_PASS": evaluating
2020/08/09 19:26:47 [TRACE] dag/walk: visiting "var.POSTGRES_PASSWORD"
2020/08/09 19:26:47 [TRACE] [walkApply] Entering eval tree: provider.null
2020/08/09 19:26:47 [TRACE] [walkApply] Entering eval tree: var.SENTRY_USER_PASS
2020/08/09 19:26:47 [TRACE] vertex "var.POSTGRES_PASSWORD": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:47 [TRACE] vertex "var.POSTGRES_PASSWORD": evaluating
2020/08/09 19:26:47 [TRACE] dag/walk: visiting "provider.kubernetes"
2020/08/09 19:26:47 [TRACE] [walkApply] Entering eval tree: var.POSTGRES_PASSWORD
2020/08/09 19:26:47 [TRACE] dag/walk: visiting "var.CLOUDFLARE_DNS_API_TOKEN"
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:47 [TRACE] vertex "provider.kubernetes": starting visit (*terraform.NodeApplyableProvider)
2020/08/09 19:26:47 [TRACE] vertex "var.CLOUDFLARE_DNS_API_TOKEN": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:47 [TRACE] [walkApply] Exiting eval tree: var.POSTGRES_PASSWORD
2020/08/09 19:26:47 [TRACE] vertex "var.CLOUDFLARE_DNS_API_TOKEN": evaluating
2020/08/09 19:26:47 [TRACE] vertex "provider.kubernetes": evaluating
2020/08/09 19:26:47 [TRACE] vertex "var.POSTGRES_PASSWORD": visit complete
2020/08/09 19:26:47 [TRACE] [walkApply] Entering eval tree: var.CLOUDFLARE_DNS_API_TOKEN
2020/08/09 19:26:47 [TRACE] [walkApply] Entering eval tree: provider.kubernetes
2020/08/09 19:26:47 [TRACE] [walkApply] Entering eval tree: var.TIMESCALE_REPLICATION_PASS
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/08/09 19:26:47 [TRACE] vertex "var.DO_SPACES_ID": visit complete
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:47 [TRACE] [walkApply] Exiting eval tree: var.dish_domain
2020/08/09 19:26:47 [TRACE] vertex "var.dish_domain": visit complete
2020/08/09 19:26:47 [TRACE] vertex "var.POSTGRES_REPMGR_PASSWORD": evaluating
2020/08/09 19:26:47 [TRACE] vertex "var.GMAIL_APP_PASSWORD": evaluating
2020/08/09 19:26:47 [TRACE] [walkApply] Entering eval tree: var.POSTGRES_REPMGR_PASSWORD
2020/08/09 19:26:47 [TRACE] [walkApply] Entering eval tree: var.GMAIL_APP_PASSWORD
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:47 [TRACE] [walkApply] Exiting eval tree: var.POSTGRES_REPMGR_PASSWORD
2020/08/09 19:26:47 [TRACE] [walkApply] Exiting eval tree: var.GMAIL_APP_PASSWORD
2020/08/09 19:26:47 [TRACE] vertex "var.POSTGRES_REPMGR_PASSWORD": visit complete
2020-08-09T19:26:47.840+0300 [INFO]  plugin: configuring client automatic mTLS
2020/08/09 19:26:47 [TRACE] vertex "var.GMAIL_APP_PASSWORD": visit complete
2020/08/09 19:26:47 [TRACE] vertex "var.DO_DISH_KEY": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:47 [TRACE] vertex "var.DO_DISH_KEY": evaluating
2020/08/09 19:26:47 [TRACE] [walkApply] Entering eval tree: var.DO_DISH_KEY
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:47 [TRACE] [walkApply] Exiting eval tree: var.DO_DISH_KEY
2020/08/09 19:26:47 [TRACE] vertex "var.DO_DISH_KEY": visit complete
2020/08/09 19:26:47 [TRACE] dag/walk: visiting "module.cluster.var.DO_DISH_KEY"
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:47 [TRACE] vertex "module.cluster.var.DO_DISH_KEY": starting visit (*terraform.NodeApplyableModuleVariable)
2020/08/09 19:26:47 [TRACE] [walkApply] Exiting eval tree: var.CLOUDFLARE_DNS_API_TOKEN
2020/08/09 19:26:47 [TRACE] vertex "module.cluster.var.DO_DISH_KEY": evaluating
2020/08/09 19:26:47 [TRACE] vertex "var.CLOUDFLARE_DNS_API_TOKEN": visit complete
2020/08/09 19:26:47 [TRACE] [walkApply] Entering eval tree: module.cluster.var.DO_DISH_KEY
2020/08/09 19:26:47 [TRACE] [walkApply] Exiting eval tree: var.SENTRY_USER_PASS
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:47 [TRACE] vertex "var.SENTRY_USER_PASS": visit complete
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/08/09 19:26:47 [TRACE] dag/walk: visiting "var.cert_manager_version"
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalModuleCallArgument
2020/08/09 19:26:47 [TRACE] vertex "var.cert_manager_version": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:47 [TRACE] vertex "var.cert_manager_version": evaluating
2020/08/09 19:26:47 [TRACE] [walkApply] Entering eval tree: var.cert_manager_version
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:47 [TRACE] [walkApply] Exiting eval tree: var.cert_manager_version
2020/08/09 19:26:47 [TRACE] vertex "var.cert_manager_version": visit complete
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:47 [TRACE] [walkApply] Exiting eval tree: var.DOCKER_REGISTRY_HTTP_AUTH
2020/08/09 19:26:47 [TRACE] vertex "var.DOCKER_REGISTRY_HTTP_AUTH": visit complete
2020/08/09 19:26:47 [TRACE] dag/walk: visiting "var.GRAFANA_PASSWORD"
2020/08/09 19:26:47 [TRACE] vertex "var.GRAFANA_PASSWORD": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:47 [TRACE] vertex "var.GRAFANA_PASSWORD": evaluating
2020/08/09 19:26:47 [TRACE] [walkApply] Entering eval tree: var.GRAFANA_PASSWORD
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalSetModuleCallArguments
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.evalVariableValidations
2020/08/09 19:26:47 [TRACE] [walkApply] Exiting eval tree: var.GRAFANA_PASSWORD
2020/08/09 19:26:47 [TRACE] dag/walk: visiting "var.DO_SPACES_SECRET"
2020/08/09 19:26:47 [TRACE] vertex "var.GRAFANA_PASSWORD": visit complete
2020/08/09 19:26:47 [TRACE] evalVariableValidations: not active for module.cluster.var.DO_DISH_KEY, so skipping
2020/08/09 19:26:47 [TRACE] vertex "var.TIMESCALE_ADMIN_PASS": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:47 [TRACE] vertex "var.DO_SPACES_SECRET": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:47 [TRACE] [walkApply] Exiting eval tree: module.cluster.var.DO_DISH_KEY
2020/08/09 19:26:47 [TRACE] [walkApply] Entering eval tree: provider.local
2020/08/09 19:26:47 [TRACE] vertex "module.cluster.var.DO_DISH_KEY": visit complete
2020/08/09 19:26:47 [TRACE] [walkApply] Entering eval tree: var.SENTRY_PG_PASS
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/08/09 19:26:47 [TRACE] [walkApply] Exiting eval tree: var.SENTRY_PG_PASS
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:47 [TRACE] vertex "var.SENTRY_PG_PASS": visit complete
2020/08/09 19:26:47 [TRACE] [walkApply] Exiting eval tree: var.TIMESCALE_REPLICATION_PASS
2020/08/09 19:26:47 [TRACE] dag/walk: visiting "module.cluster.provider.digitalocean"
2020/08/09 19:26:47 [TRACE] vertex "var.TIMESCALE_REPLICATION_PASS": visit complete
2020/08/09 19:26:47 [TRACE] vertex "var.DOCKER_CONFIG_JSON": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:47 [TRACE] vertex "module.cluster.provider.digitalocean": starting visit (*terraform.NodeApplyableProvider)
2020/08/09 19:26:47 [TRACE] vertex "var.DOCKER_CONFIG_JSON": evaluating
2020/08/09 19:26:47 [TRACE] vertex "module.cluster.provider.digitalocean": evaluating
2020/08/09 19:26:47 [TRACE] [walkApply] Entering eval tree: var.DOCKER_CONFIG_JSON
2020/08/09 19:26:47 [TRACE] [walkApply] Entering eval tree: module.cluster.provider.digitalocean
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:47 [TRACE] module.cluster: eval: *terraform.EvalSequence
2020/08/09 19:26:47 [TRACE] [walkApply] Exiting eval tree: var.DOCKER_CONFIG_JSON
2020/08/09 19:26:47 [TRACE] module.cluster: eval: *terraform.EvalInitProvider
2020/08/09 19:26:47 [TRACE] vertex "provider.helm": starting visit (*terraform.NodeApplyableProvider)
2020/08/09 19:26:47 [TRACE] vertex "var.TIMESCALE_ADMIN_PASS": evaluating
2020/08/09 19:26:47 [TRACE] [walkApply] Entering eval tree: var.TIMESCALE_ADMIN_PASS
2020/08/09 19:26:47 [TRACE] vertex "provider.helm": evaluating
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:47 [TRACE] [walkApply] Entering eval tree: provider.helm
2020/08/09 19:26:47 [TRACE] [walkApply] Exiting eval tree: var.TIMESCALE_ADMIN_PASS
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:47 [TRACE] vertex "var.TIMESCALE_ADMIN_PASS": visit complete
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/08/09 19:26:47 [TRACE] [walkApply] Exiting eval tree: var.TIMESCALE_SU_PASS
2020/08/09 19:26:47 [TRACE] vertex "var.DO_SPACES_SECRET": evaluating
2020/08/09 19:26:47 [TRACE] vertex "var.TIMESCALE_SU_PASS": visit complete
2020/08/09 19:26:47 [TRACE] vertex "var.K8S_DSN": starting visit (*terraform.NodeRootVariable)
2020/08/09 19:26:47 [TRACE] [walkApply] Entering eval tree: var.DO_SPACES_SECRET
2020/08/09 19:26:47 [TRACE] vertex "var.K8S_DSN": evaluating
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:47 [TRACE] [walkApply] Entering eval tree: var.K8S_DSN
2020/08/09 19:26:47 [TRACE] [walkApply] Exiting eval tree: var.DO_SPACES_SECRET
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:47 [TRACE] [walkApply] Exiting eval tree: var.K8S_DSN
2020/08/09 19:26:47 [TRACE] vertex "var.DO_SPACES_SECRET": visit complete
2020/08/09 19:26:47 [TRACE] vertex "var.K8S_DSN": visit complete
2020/08/09 19:26:47 [TRACE] dag/walk: visiting "provisioner.local-exec"
2020/08/09 19:26:47 [TRACE] vertex "provisioner.local-exec": starting visit (*terraform.NodeProvisioner)
2020/08/09 19:26:47 [TRACE] vertex "var.DOCKER_CONFIG_JSON": visit complete
2020/08/09 19:26:47 [TRACE] vertex "provisioner.local-exec": evaluating
2020/08/09 19:26:47 [TRACE] [walkApply] Entering eval tree: provisioner.local-exec
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalInitProvisioner
2020-08-09T19:26:47.840+0300 [DEBUG] plugin: starting plugin: path=/usr/bin/terraform args=[/usr/bin/terraform, internal-plugin, provisioner, local-exec]
2020-08-09T19:26:47.840+0300 [DEBUG] plugin: plugin started: path=/usr/bin/terraform pid=4111410
2020-08-09T19:26:47.840+0300 [DEBUG] plugin: waiting for RPC address: path=/usr/bin/terraform
2020-08-09T19:26:47.858+0300 [DEBUG] plugin: starting plugin: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-null_v2.1.2_x4 args=[/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-null_v2.1.2_x4]
2020-08-09T19:26:47.858+0300 [DEBUG] plugin: plugin started: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-null_v2.1.2_x4 pid=4111411
2020-08-09T19:26:47.858+0300 [DEBUG] plugin: waiting for RPC address: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-null_v2.1.2_x4
2020-08-09T19:26:47.863+0300 [INFO]  plugin.terraform-provider-null_v2.1.2_x4: configuring server automatic mTLS: timestamp=2020-08-09T19:26:47.863+0300
2020-08-09T19:26:47.885+0300 [DEBUG] plugin.terraform-provider-null_v2.1.2_x4: plugin address: address=/tmp/plugin283848953 network=unix timestamp=2020-08-09T19:26:47.885+0300
2020-08-09T19:26:47.885+0300 [DEBUG] plugin: using plugin: version=5
2020-08-09T19:26:47.899+0300 [DEBUG] plugin: using plugin: version=5
2020/08/09 19:26:47 [TRACE] [walkApply] Exiting eval tree: provisioner.local-exec
2020/08/09 19:26:47 [TRACE] vertex "provisioner.local-exec": visit complete
2020-08-09T19:26:47.899+0300 [TRACE] plugin.stdio: waiting for stdio data
2020/08/09 19:26:47 [TRACE] BuiltinEvalContext: Initialized "null" provider for provider.null
2020/08/09 19:26:47 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:47 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020-08-09T19:26:47.922+0300 [TRACE] plugin.stdio: waiting for stdio data
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:47 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/08/09 19:26:47 [TRACE] buildProviderConfig for provider.null: no configuration at all
2020/08/09 19:26:47 [TRACE] GRPCProvider: GetSchema
2020-08-09T19:26:47.922+0300 [INFO]  plugin: configuring client automatic mTLS
2020-08-09T19:26:47.923+0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unimplemented desc = unknown service plugin.GRPCStdio"
2020-08-09T19:26:47.939+0300 [DEBUG] plugin: starting plugin: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-kubernetes_v1.12.0_x4 args=[/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-kubernetes_v1.12.0_x4]
2020-08-09T19:26:47.939+0300 [DEBUG] plugin: plugin started: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-kubernetes_v1.12.0_x4 pid=4111446
2020-08-09T19:26:47.939+0300 [DEBUG] plugin: waiting for RPC address: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-kubernetes_v1.12.0_x4
2020-08-09T19:26:47.962+0300 [INFO]  plugin.terraform-provider-kubernetes_v1.12.0_x4: configuring server automatic mTLS: timestamp=2020-08-09T19:26:47.962+0300
2020-08-09T19:26:47.980+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: plugin address: address=/tmp/plugin071386662 network=unix timestamp=2020-08-09T19:26:47.980+0300
2020-08-09T19:26:47.980+0300 [DEBUG] plugin: using plugin: version=5
2020/08/09 19:26:48 [TRACE] BuiltinEvalContext: Initialized "kubernetes" provider for provider.kubernetes
2020/08/09 19:26:48 [TRACE] <root>: eval: terraform.EvalNoop
2020-08-09T19:26:48.015+0300 [TRACE] plugin.stdio: waiting for stdio data
2020/08/09 19:26:48 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:48 [TRACE] GRPCProvider: Configure
2020-08-09T19:26:48.015+0300 [INFO]  plugin: configuring client automatic mTLS
2020-08-09T19:26:48.015+0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unimplemented desc = unknown service plugin.GRPCStdio"
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: provider.null
2020/08/09 19:26:48 [TRACE] vertex "provider.null": visit complete
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "null_resource.rio-app-domains (prepare state)"
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "null_resource.rio-setup (prepare state)"
2020/08/09 19:26:48 [TRACE] vertex "null_resource.rio-app-domains (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] vertex "null_resource.rio-setup (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] vertex "null_resource.rio-setup (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] vertex "null_resource.rio-app-domains (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: null_resource.rio-setup (prepare state)
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "null_resource.create-timescaledb-setup (prepare state)"
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] vertex "null_resource.create-timescaledb-setup (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "null_resource.rio-custom-domain (prepare state)"
2020/08/09 19:26:48 [TRACE] vertex "null_resource.create-timescaledb-setup (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "null_resource.cert-manager-setup (prepare state)"
2020/08/09 19:26:48 [TRACE] vertex "null_resource.rio-custom-domain (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: null_resource.create-timescaledb-setup (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "null_resource.rio-custom-domain (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] vertex "null_resource.cert-manager-setup (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: null_resource.rio-custom-domain (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "null_resource.cert-manager-setup (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: null_resource.rio-setup (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "null_resource.rio-setup (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: null_resource.rio-app-domains (prepare state)
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: null_resource.rio-app-domains (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "null_resource.rio-app-domains (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: null_resource.create-timescaledb-setup (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "null_resource.create-timescaledb-setup (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: null_resource.rio-custom-domain (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "null_resource.rio-custom-domain (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: null_resource.cert-manager-setup (prepare state)
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: null_resource.cert-manager-setup (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "null_resource.cert-manager-setup (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "provider.null (close)"
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "provisioner.local-exec (close)"
2020/08/09 19:26:48 [TRACE] vertex "provider.null (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/08/09 19:26:48 [TRACE] vertex "provisioner.local-exec (close)": starting visit (*terraform.graphNodeCloseProvisioner)
2020/08/09 19:26:48 [TRACE] vertex "provider.null (close)": evaluating
2020/08/09 19:26:48 [TRACE] vertex "provisioner.local-exec (close)": evaluating
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: provider.null (close)
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: provisioner.local-exec (close)
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalCloseProvisioner
2020-08-09T19:26:48.016+0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-08-09T19:26:48.023+0300 [DEBUG] plugin: plugin process exited: path=/usr/bin/terraform pid=4111410
2020-08-09T19:26:48.023+0300 [DEBUG] plugin: plugin exited
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: provisioner.local-exec (close)
2020/08/09 19:26:48 [TRACE] vertex "provisioner.local-exec (close)": visit complete
2020-08-09T19:26:48.032+0300 [DEBUG] plugin: starting plugin: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-local_v1.4.0_x4 args=[/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-local_v1.4.0_x4]
2020-08-09T19:26:48.032+0300 [DEBUG] plugin: plugin started: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-local_v1.4.0_x4 pid=4111458
2020-08-09T19:26:48.032+0300 [DEBUG] plugin: waiting for RPC address: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-local_v1.4.0_x4
2020-08-09T19:26:48.037+0300 [INFO]  plugin.terraform-provider-local_v1.4.0_x4: configuring server automatic mTLS: timestamp=2020-08-09T19:26:48.037+0300
2020-08-09T19:26:48.056+0300 [DEBUG] plugin.terraform-provider-local_v1.4.0_x4: plugin address: address=/tmp/plugin220112667 network=unix timestamp=2020-08-09T19:26:48.056+0300
2020-08-09T19:26:48.056+0300 [DEBUG] plugin: using plugin: version=5
2020/08/09 19:26:48 [TRACE] BuiltinEvalContext: Initialized "local" provider for provider.local
2020/08/09 19:26:48 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:48 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/08/09 19:26:48 [TRACE] buildProviderConfig for provider.local: no configuration at all
2020/08/09 19:26:48 [TRACE] GRPCProvider: GetSchema
2020-08-09T19:26:48.092+0300 [TRACE] plugin.stdio: waiting for stdio data
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/08/09 19:26:48 [TRACE] buildProviderConfig for provider.kubernetes: no configuration at all
2020/08/09 19:26:48 [TRACE] GRPCProvider: GetSchema
2020-08-09T19:26:48.092+0300 [INFO]  plugin: configuring client automatic mTLS
2020-08-09T19:26:48.092+0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unimplemented desc = unknown service plugin.GRPCStdio"
2020-08-09T19:26:48.115+0300 [DEBUG] plugin: starting plugin: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-digitalocean_v1.22.0 args=[/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-digitalocean_v1.22.0]
2020-08-09T19:26:48.115+0300 [DEBUG] plugin: plugin started: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-digitalocean_v1.22.0 pid=4111473
2020-08-09T19:26:48.115+0300 [DEBUG] plugin: waiting for RPC address: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-digitalocean_v1.22.0
2020-08-09T19:26:48.122+0300 [INFO]  plugin.terraform-provider-digitalocean_v1.22.0: configuring server automatic mTLS: timestamp=2020-08-09T19:26:48.122+0300
2020-08-09T19:26:48.139+0300 [DEBUG] plugin.terraform-provider-digitalocean_v1.22.0: plugin address: network=unix address=/tmp/plugin608970548 timestamp=2020-08-09T19:26:48.139+0300
2020-08-09T19:26:48.139+0300 [DEBUG] plugin: using plugin: version=5
2020/08/09 19:26:48 [TRACE] BuiltinEvalContext: Initialized "digitalocean" provider for module.cluster.provider.digitalocean
2020/08/09 19:26:48 [TRACE] module.cluster: eval: terraform.EvalNoop
2020/08/09 19:26:48 [TRACE] module.cluster: eval: terraform.EvalNoop
2020/08/09 19:26:48 [TRACE] module.cluster: eval: *terraform.EvalOpFilter
2020/08/09 19:26:48 [TRACE] module.cluster: eval: *terraform.EvalSequence
2020/08/09 19:26:48 [TRACE] module.cluster: eval: *terraform.EvalGetProvider
2020/08/09 19:26:48 [TRACE] module.cluster: eval: *terraform.EvalOpFilter
2020/08/09 19:26:48 [TRACE] module.cluster: eval: *terraform.EvalSequence
2020/08/09 19:26:48 [TRACE] module.cluster: eval: *terraform.EvalConfigProvider
2020/08/09 19:26:48 [TRACE] buildProviderConfig for provider.digitalocean: using explicit config only
2020/08/09 19:26:48 [TRACE] GRPCProvider: GetSchema
2020-08-09T19:26:48.174+0300 [TRACE] plugin.stdio: waiting for stdio data
2020-08-09T19:26:48.174+0300 [INFO]  plugin: configuring client automatic mTLS
2020-08-09T19:26:48.174+0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unimplemented desc = unknown service plugin.GRPCStdio"
2020-08-09T19:26:48.191+0300 [DEBUG] plugin: starting plugin: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-helm_v1.2.4_x4 args=[/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-helm_v1.2.4_x4]
2020-08-09T19:26:48.191+0300 [DEBUG] plugin: plugin started: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-helm_v1.2.4_x4 pid=4111486
2020-08-09T19:26:48.192+0300 [DEBUG] plugin: waiting for RPC address: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-helm_v1.2.4_x4
2020-08-09T19:26:48.217+0300 [INFO]  plugin.terraform-provider-helm_v1.2.4_x4: configuring server automatic mTLS: timestamp=2020-08-09T19:26:48.217+0300
2020-08-09T19:26:48.234+0300 [DEBUG] plugin: using plugin: version=5
2020-08-09T19:26:48.234+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: plugin address: address=/tmp/plugin147871264 network=unix timestamp=2020-08-09T19:26:48.234+0300
2020/08/09 19:26:48 [TRACE] BuiltinEvalContext: Initialized "helm" provider for provider.helm
2020/08/09 19:26:48 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:48 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/08/09 19:26:48 [TRACE] buildProviderConfig for provider.helm: no configuration at all
2020/08/09 19:26:48 [TRACE] GRPCProvider: GetSchema
2020/08/09 19:26:48 [TRACE] GRPCProvider: Close
2020-08-09T19:26:48.268+0300 [TRACE] plugin.stdio: waiting for stdio data
2020-08-09T19:26:48.268+0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unimplemented desc = unknown service plugin.GRPCStdio"
2020-08-09T19:26:48.270+0300 [DEBUG] plugin: plugin process exited: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-null_v2.1.2_x4 pid=4111411
2020-08-09T19:26:48.270+0300 [DEBUG] plugin: plugin exited
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: provider.null (close)
2020/08/09 19:26:48 [TRACE] vertex "provider.null (close)": visit complete
2020/08/09 19:26:48 [TRACE] GRPCProvider: Configure
2020/08/09 19:26:48 [TRACE] GRPCProvider: Configure
2020/08/09 19:26:48 [TRACE] GRPCProvider: Configure
2020/08/09 19:26:48 [TRACE] GRPCProvider: Configure
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: provider.local
2020/08/09 19:26:48 [TRACE] vertex "provider.local": visit complete
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "data.local_file.rio-yaml (prepare state)"
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "data.local_file.rio-custom-domain (prepare state)"
2020/08/09 19:26:48 [TRACE] vertex "data.local_file.rio-yaml (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "data.local_file.cert_manager_setup (prepare state)"
2020/08/09 19:26:48 [TRACE] vertex "data.local_file.rio-custom-domain (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] vertex "data.local_file.cert_manager_setup (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] vertex "data.local_file.rio-yaml (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "data.local_file.rio-app-domains (prepare state)"
2020/08/09 19:26:48 [TRACE] vertex "data.local_file.rio-custom-domain (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: data.local_file.rio-yaml (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "data.local_file.cert_manager_setup (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: data.local_file.rio-custom-domain (prepare state)
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: data.local_file.cert_manager_setup (prepare state)
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] vertex "data.local_file.rio-app-domains (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: data.local_file.rio-yaml (prepare state)
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: data.local_file.rio-custom-domain (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "data.local_file.rio-app-domains (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] vertex "data.local_file.rio-yaml (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: data.local_file.cert_manager_setup (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "data.local_file.rio-custom-domain (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: data.local_file.rio-app-domains (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "data.local_file.cert_manager_setup (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: data.local_file.rio-app-domains (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "data.local_file.rio-app-domains (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "provider.local (close)"
2020/08/09 19:26:48 [TRACE] vertex "provider.local (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/08/09 19:26:48 [TRACE] vertex "provider.local (close)": evaluating
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: provider.local (close)
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/08/09 19:26:48 [TRACE] GRPCProvider: Close
2020-08-09T19:26:48.270+0300 [DEBUG] plugin.terraform-provider-digitalocean_v1.22.0: 2020/08/09 19:26:48 [INFO] DigitalOcean Client configured for URL: https://api.digitalocean.com
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: module.cluster.provider.digitalocean
2020/08/09 19:26:48 [TRACE] vertex "module.cluster.provider.digitalocean": visit complete
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "module.cluster.digitalocean_kubernetes_cluster.dish (prepare state)"
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: provider.helm
2020/08/09 19:26:48 [TRACE] vertex "provider.helm": visit complete
2020/08/09 19:26:48 [TRACE] vertex "module.cluster.digitalocean_kubernetes_cluster.dish (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] vertex "module.cluster.digitalocean_kubernetes_cluster.dish (prepare state)": evaluating
2020-08-09T19:26:48.270+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:48 [DEBUG] Trying to load configuration from file
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: module.cluster.digitalocean_kubernetes_cluster.dish (prepare state)
2020/08/09 19:26:48 [TRACE] module.cluster: eval: *terraform.EvalWriteResourceState
2020-08-09T19:26:48.270+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:48 [DEBUG] Configuration file is: /home/tombh/.kube/config
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: module.cluster.digitalocean_kubernetes_cluster.dish (prepare state)
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state)"
2020/08/09 19:26:48 [TRACE] vertex "module.cluster.digitalocean_kubernetes_cluster.dish (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state)"
2020/08/09 19:26:48 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state)
2020/08/09 19:26:48 [TRACE] module.cluster: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ci (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state)
2020/08/09 19:26:48 [TRACE] module.cluster: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state)
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "helm_release.cert-manager (prepare state)"
2020/08/09 19:26:48 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.ancillary (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] vertex "helm_release.cert-manager (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] vertex "helm_release.cert-manager (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "helm_release.nginx-ingress (prepare state)"
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: helm_release.cert-manager (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "helm_release.nginx-ingress (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: helm_release.cert-manager (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "helm_release.cert-manager (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] vertex "helm_release.nginx-ingress (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: helm_release.nginx-ingress (prepare state)
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: helm_release.nginx-ingress (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "helm_release.nginx-ingress (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state)"
2020/08/09 19:26:48 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state)
2020/08/09 19:26:48 [TRACE] module.cluster: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state)
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "helm_release.timescaledb (prepare state)"
2020/08/09 19:26:48 [TRACE] vertex "module.cluster.digitalocean_kubernetes_node_pool.workers (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] vertex "helm_release.timescaledb (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] vertex "helm_release.timescaledb (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "module.cluster.provider.digitalocean (close)"
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: helm_release.timescaledb (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "module.cluster.provider.digitalocean (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: helm_release.timescaledb (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "module.cluster.provider.digitalocean (close)": evaluating
2020/08/09 19:26:48 [TRACE] vertex "helm_release.timescaledb (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: module.cluster.provider.digitalocean (close)
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "data.helm_repository.incubator (prepare state)"
2020/08/09 19:26:48 [TRACE] module.cluster: eval: *terraform.EvalCloseProvider
2020/08/09 19:26:48 [TRACE] vertex "data.helm_repository.incubator (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "data.helm_repository.bitnami (prepare state)"
2020/08/09 19:26:48 [TRACE] vertex "data.helm_repository.incubator (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] vertex "data.helm_repository.bitnami (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: data.helm_repository.incubator (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "data.helm_repository.bitnami (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: data.helm_repository.bitnami (prepare state)
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: data.helm_repository.incubator (prepare state)
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] vertex "data.helm_repository.incubator (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "data.helm_repository.stable (prepare state)"
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: data.helm_repository.bitnami (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "data.helm_repository.stable (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] vertex "data.helm_repository.bitnami (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] vertex "data.helm_repository.stable (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "data.helm_repository.jetstack (prepare state)"
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: data.helm_repository.stable (prepare state)
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] vertex "data.helm_repository.jetstack (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: data.helm_repository.stable (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "data.helm_repository.jetstack (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: data.helm_repository.jetstack (prepare state)
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "helm_release.redis (prepare state)"
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] vertex "helm_release.redis (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: data.helm_repository.jetstack (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "helm_release.redis (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] vertex "data.helm_repository.jetstack (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: helm_release.redis (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "data.helm_repository.stable (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "data.helm_repository.timescale (prepare state)"
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "helm_release.docker-registry (prepare state)"
2020/08/09 19:26:48 [TRACE] vertex "data.helm_repository.timescale (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] vertex "helm_release.docker-registry (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] vertex "data.helm_repository.timescale (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] vertex "helm_release.docker-registry (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: data.helm_repository.timescale (prepare state)
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: helm_release.docker-registry (prepare state)
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: data.helm_repository.timescale (prepare state)
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: helm_release.docker-registry (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "helm_release.docker-registry (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] vertex "data.helm_repository.timescale (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "helm_release.metrics-server (prepare state)"
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "data.helm_repository.sentry (prepare state)"
2020/08/09 19:26:48 [TRACE] vertex "helm_release.metrics-server (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] vertex "helm_release.metrics-server (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] vertex "data.helm_repository.sentry (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: helm_release.metrics-server (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "data.helm_repository.sentry (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: data.helm_repository.sentry (prepare state)
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "helm_release.postgres-ha (prepare state)"
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: helm_release.redis (prepare state)
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "helm_release.sentry (prepare state)"
2020/08/09 19:26:48 [TRACE] vertex "helm_release.redis (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] vertex "helm_release.postgres-ha (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] vertex "helm_release.sentry (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "helm_release.sentry-k8s-erros (prepare state)"
2020/08/09 19:26:48 [TRACE] vertex "helm_release.sentry (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] vertex "helm_release.postgres-ha (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: helm_release.sentry (prepare state)
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "helm_release.prometheus-operator (prepare state)"
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] vertex "helm_release.prometheus-operator (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: helm_release.postgres-ha (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "helm_release.prometheus-operator (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: helm_release.sentry (prepare state)
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: helm_release.prometheus-operator (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "helm_release.sentry (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: helm_release.postgres-ha (prepare state)
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: helm_release.prometheus-operator (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "helm_release.postgres-ha (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: data.helm_repository.sentry (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "helm_release.prometheus-operator (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] vertex "data.helm_repository.sentry (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: helm_release.metrics-server (prepare state)
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "helm_release.postgres-ha"
2020/08/09 19:26:48 [TRACE] vertex "helm_release.metrics-server (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] vertex "helm_release.postgres-ha": starting visit (*terraform.NodeApplyableResourceInstance)
2020/08/09 19:26:48 [TRACE] vertex "helm_release.sentry-k8s-erros (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] vertex "helm_release.sentry-k8s-erros (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: helm_release.sentry-k8s-erros (prepare state)
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] vertex "helm_release.postgres-ha": evaluating
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: helm_release.sentry-k8s-erros (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "helm_release.sentry-k8s-erros (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: helm_release.postgres-ha
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalSequence
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020-08-09T19:26:48.272+0300 [DEBUG] plugin.terraform-provider-kubernetes_v1.12.0_x4: 2020/08/09 19:26:48 [INFO] Successfully initialized config
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: provider.kubernetes
2020/08/09 19:26:48 [TRACE] vertex "provider.kubernetes": visit complete
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "kubernetes_secret.timescale-credentials (prepare state)"
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_secret.timescale-credentials (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_secret.timescale-credentials (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: kubernetes_secret.timescale-credentials (prepare state)
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "kubernetes_namespace.sentry (prepare state)"
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_namespace.sentry (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: kubernetes_secret.timescale-credentials (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_namespace.sentry (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_secret.timescale-credentials (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "kubernetes_secret.docker-registry-auth (prepare state)"
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: kubernetes_namespace.sentry (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_secret.docker-registry-auth (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_secret.docker-registry-auth (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: kubernetes_namespace.sentry (prepare state)
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: kubernetes_secret.docker-registry-auth (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_namespace.sentry (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: kubernetes_secret.docker-registry-auth (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_secret.docker-registry-auth (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "kubernetes_ingress.sentry-ingress (prepare state)"
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_ingress.sentry-ingress (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_ingress.sentry-ingress (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: kubernetes_ingress.sentry-ingress (prepare state)
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "kubernetes_namespace.redis (prepare state)"
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: kubernetes_ingress.sentry-ingress (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_namespace.redis (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_ingress.sentry-ingress (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_namespace.redis (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: kubernetes_namespace.redis (prepare state)
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "kubernetes_secret.docker-config-json (prepare state)"
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "kubernetes_ingress.docker-registry-ingress (prepare state)"
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_secret.docker-config-json (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: kubernetes_namespace.redis (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_ingress.docker-registry-ingress (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_secret.docker-config-json (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_namespace.redis (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_ingress.docker-registry-ingress (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "kubernetes_service.buildkitd (prepare state)"
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: kubernetes_secret.docker-config-json (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_service.buildkitd (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: kubernetes_ingress.docker-registry-ingress (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_service.buildkitd (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: kubernetes_service.buildkitd (prepare state)
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: kubernetes_secret.docker-config-json (prepare state)
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_secret.docker-config-json (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: kubernetes_service.buildkitd (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_service.buildkitd (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: kubernetes_ingress.docker-registry-ingress (prepare state)
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "kubernetes_secret.timescale-certificates (prepare state)"
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_ingress.docker-registry-ingress (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_secret.timescale-certificates (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "kubernetes_ingress.rio-ingress (prepare state)"
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "kubernetes_deployment.buildkitd (prepare state)"
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_secret.timescale-certificates (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_deployment.buildkitd (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: kubernetes_secret.timescale-certificates (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_deployment.buildkitd (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: kubernetes_deployment.buildkitd (prepare state)
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: kubernetes_secret.timescale-certificates (prepare state)
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "kubernetes_namespace.docker (prepare state)"
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_secret.timescale-certificates (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: kubernetes_deployment.buildkitd (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_namespace.docker (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_deployment.buildkitd (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "kubernetes_ingress.grafana-ingress (prepare state)"
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_ingress.rio-ingress (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_namespace.docker (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "kubernetes_namespace.monitoring (prepare state)"
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_ingress.grafana-ingress (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_ingress.rio-ingress (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_namespace.monitoring (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: kubernetes_namespace.docker (prepare state)
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: kubernetes_ingress.rio-ingress (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_namespace.monitoring (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "kubernetes_namespace.rio (prepare state)"
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "kubernetes_namespace.nginx-ingress (prepare state)"
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_namespace.rio (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: kubernetes_ingress.rio-ingress (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_namespace.nginx-ingress (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_ingress.rio-ingress (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_ingress.grafana-ingress (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_namespace.nginx-ingress (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "kubernetes_namespace.timescale (prepare state)"
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: kubernetes_ingress.grafana-ingress (prepare state)
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: kubernetes_namespace.nginx-ingress (prepare state)
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "kubernetes_namespace.metrics-server (prepare state)"
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "kubernetes_persistent_volume_claim.image-proxy (prepare state)"
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: kubernetes_namespace.nginx-ingress (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_namespace.timescale (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_persistent_volume_claim.image-proxy (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: kubernetes_namespace.monitoring (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_namespace.timescale (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: kubernetes_ingress.grafana-ingress (prepare state)
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: kubernetes_namespace.timescale (prepare state)
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "kubernetes_config_map.buildkitd-config (prepare state)"
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_ingress.grafana-ingress (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_config_map.buildkitd-config (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "kubernetes_namespace.cert-manager (prepare state)"
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: kubernetes_namespace.timescale (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_config_map.buildkitd-config (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_namespace.cert-manager (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_namespace.timescale (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_namespace.cert-manager (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: kubernetes_config_map.buildkitd-config (prepare state)
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: kubernetes_namespace.docker (prepare state)
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: kubernetes_namespace.cert-manager (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_namespace.metrics-server (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_namespace.docker (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "kubernetes_secret.cloudflare-dns-api-token (prepare state)"
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_namespace.metrics-server (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_secret.cloudflare-dns-api-token (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: kubernetes_namespace.cert-manager (prepare state)
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: kubernetes_namespace.metrics-server (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_namespace.cert-manager (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_namespace.rio (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: kubernetes_namespace.metrics-server (prepare state)
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: kubernetes_namespace.rio (prepare state)
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: kubernetes_config_map.buildkitd-config (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_namespace.metrics-server (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_config_map.buildkitd-config (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "kubernetes_namespace.postgres-ha (prepare state)"
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: kubernetes_namespace.rio (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_namespace.postgres-ha (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_namespace.nginx-ingress (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_namespace.rio (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_namespace.postgres-ha (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_persistent_volume_claim.image-proxy (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: kubernetes_namespace.postgres-ha (prepare state)
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: kubernetes_namespace.postgres-ha (prepare state)
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: kubernetes_persistent_volume_claim.image-proxy (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_namespace.postgres-ha (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_secret.cloudflare-dns-api-token (prepare state)": evaluating
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: kubernetes_namespace.monitoring (prepare state)
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: kubernetes_secret.cloudflare-dns-api-token (prepare state)
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: kubernetes_persistent_volume_claim.image-proxy (prepare state)
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_namespace.monitoring (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_persistent_volume_claim.image-proxy (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: kubernetes_secret.cloudflare-dns-api-token (prepare state)
2020/08/09 19:26:48 [TRACE] vertex "kubernetes_secret.cloudflare-dns-api-token (prepare state)": visit complete
2020/08/09 19:26:48 [TRACE] dag/walk: visiting "provider.kubernetes (close)"
2020/08/09 19:26:48 [TRACE] vertex "provider.kubernetes (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/08/09 19:26:48 [TRACE] vertex "provider.kubernetes (close)": evaluating
2020/08/09 19:26:48 [TRACE] [walkApply] Entering eval tree: provider.kubernetes (close)
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020-08-09T19:26:48.273+0300 [DEBUG] plugin: plugin process exited: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-local_v1.4.0_x4 pid=4111458
2020-08-09T19:26:48.273+0300 [DEBUG] plugin: plugin exited
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: provider.local (close)
2020/08/09 19:26:48 [TRACE] vertex "provider.local (close)": visit complete
2020/08/09 19:26:48 [TRACE] GRPCProvider: Close
2020-08-09T19:26:48.274+0300 [DEBUG] plugin: plugin process exited: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-digitalocean_v1.22.0 pid=4111473
2020-08-09T19:26:48.274+0300 [DEBUG] plugin: plugin exited
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: module.cluster.provider.digitalocean (close)
2020/08/09 19:26:48 [TRACE] vertex "module.cluster.provider.digitalocean (close)": visit complete
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/08/09 19:26:48 [TRACE] GRPCProvider: Close
2020/08/09 19:26:48 [TRACE] EvalReadDiff: Read Create change from plan for helm_release.postgres-ha
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalIf
2020/08/09 19:26:48 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalIf
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:48 [TRACE] EvalReadState: reading state for helm_release.postgres-ha
2020/08/09 19:26:48 [TRACE] EvalReadState: no state present for helm_release.postgres-ha
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/08/09 19:26:48 [TRACE] EvalReadDiff: Read Create change from plan for helm_release.postgres-ha
2020/08/09 19:26:48 [TRACE] <root>: eval: *terraform.EvalDiff
2020/08/09 19:26:48 [TRACE] Re-validating config for "helm_release.postgres-ha"
2020/08/09 19:26:48 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/08/09 19:26:48 [TRACE] GRPCProvider: PlanResourceChange
2020-08-09T19:26:48.277+0300 [DEBUG] plugin: plugin process exited: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-kubernetes_v1.12.0_x4 pid=4111446
2020-08-09T19:26:48.277+0300 [DEBUG] plugin: plugin exited
2020/08/09 19:26:48 [TRACE] [walkApply] Exiting eval tree: provider.kubernetes (close)
2020/08/09 19:26:48 [TRACE] vertex "provider.kubernetes (close)": visit complete
2020-08-09T19:26:48.278+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:48 [DEBUG] [resourceDiff: postgres-ha] Start
2020-08-09T19:26:49.122+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:49 [DEBUG] [resourceDiff: postgres-ha] Got chart
2020-08-09T19:26:49.122+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:49 [DEBUG] [resourceDiff: postgres-ha] Release validated
2020/08/09 19:26:49 [WARN] Provider "registry.terraform.io/-/helm" produced an invalid plan for helm_release.postgres-ha, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .disable_crd_hooks: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .render_subchart_notes: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .verify: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .cleanup_on_fail: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .create_namespace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .force_update: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .reset_values: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .recreate_pods: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .replace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .skip_crds: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .dependency_update: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .disable_webhooks: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .max_history: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .atomic: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .disable_openapi_validation: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .lint: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .timeout: planned value cty.NumberIntVal(300) does not match config value cty.NullVal(cty.Number)
      - .wait: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .reuse_values: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/08/09 19:26:49 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2020/08/09 19:26:49 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2020/08/09 19:26:49 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/08/09 19:26:49 [TRACE] <root>: eval: *terraform.EvalReadState
2020/08/09 19:26:49 [TRACE] EvalReadState: reading state for helm_release.postgres-ha
2020/08/09 19:26:49 [TRACE] EvalReadState: no state present for helm_release.postgres-ha
2020/08/09 19:26:49 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2020/08/09 19:26:49 [TRACE] <root>: eval: *terraform.EvalIf
2020/08/09 19:26:49 [TRACE] <root>: eval: terraform.EvalNoop
2020/08/09 19:26:49 [TRACE] <root>: eval: *terraform.EvalApplyPre
2020/08/09 19:26:49 [TRACE] <root>: eval: *terraform.EvalApply
2020/08/09 19:26:49 [DEBUG] helm_release.postgres-ha: applying the planned Create change
2020/08/09 19:26:49 [TRACE] GRPCProvider: ApplyResourceChange
2020-08-09T19:26:49.128+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:49 [DEBUG] setting computed for "metadata" from ComputedKeys
2020-08-09T19:26:49.129+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:49 [DEBUG] [resourceReleaseCreate: postgres-ha] Started
2020-08-09T19:26:49.129+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:49 [DEBUG] [resourceReleaseCreate: postgres-ha] Getting helm configuration
2020-08-09T19:26:49.129+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:49 [DEBUG] [INFO] GetHelmConfiguration start
2020-08-09T19:26:49.129+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:49 [INFO] Successfully initialized kubernetes config
2020-08-09T19:26:49.129+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:49 [DEBUG] [INFO] GetHelmConfiguration success
2020-08-09T19:26:49.129+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:49 [DEBUG] [resourceReleaseCreate: postgres-ha] Getting chart
2020-08-09T19:26:49.697+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 2020/08/09 19:26:49 [DEBUG] [resourceReleaseCreate: postgres-ha] Preparing for installation
2020-08-09T19:26:49.701+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: panic: interface conversion: interface {} is string, not map[string]interface {}
2020-08-09T19:26:49.701+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 
2020-08-09T19:26:49.701+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: goroutine 66 [running]:
2020-08-09T19:26:49.701+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: helm.sh/helm/v3/pkg/strvals.(*parser).key(0xc005400f80, 0xc0019e6330, 0xc0021e0f98, 0xa)
2020-08-09T19:26:49.701+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/src/github.com/hashicorp/terraform-provider-helm/vendor/helm.sh/helm/v3/pkg/strvals/parser.go:211 +0xdea
2020-08-09T19:26:49.701+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: helm.sh/helm/v3/pkg/strvals.(*parser).key(0xc005400f80, 0xc0019e6300, 0xc0021e1138, 0x6)
2020-08-09T19:26:49.701+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/src/github.com/hashicorp/terraform-provider-helm/vendor/helm.sh/helm/v3/pkg/strvals/parser.go:215 +0x1ad
2020-08-09T19:26:49.701+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: helm.sh/helm/v3/pkg/strvals.(*parser).key(0xc005400f80, 0xc0019e6de0, 0x1b69e6d, 0x1e8d6a0)
2020-08-09T19:26:49.701+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/src/github.com/hashicorp/terraform-provider-helm/vendor/helm.sh/helm/v3/pkg/strvals/parser.go:215 +0x1ad
2020-08-09T19:26:49.701+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: helm.sh/helm/v3/pkg/strvals.(*parser).parse(0xc005400f80, 0xc0019e6de0, 0x0)
2020-08-09T19:26:49.701+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/src/github.com/hashicorp/terraform-provider-helm/vendor/helm.sh/helm/v3/pkg/strvals/parser.go:133 +0x38
2020-08-09T19:26:49.701+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: helm.sh/helm/v3/pkg/strvals.ParseInto(0xc000fe5940, 0x38, 0xc0019e6de0, 0x2, 0x2)
2020-08-09T19:26:49.702+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/src/github.com/hashicorp/terraform-provider-helm/vendor/helm.sh/helm/v3/pkg/strvals/parser.go:70 +0xbe
2020-08-09T19:26:49.702+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: github.com/hashicorp/terraform-provider-helm/helm.getValue(0xc0019e6de0, 0xc0019e6f00, 0x0, 0x0)
2020-08-09T19:26:49.702+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/src/github.com/hashicorp/terraform-provider-helm/helm/resource_release.go:885 +0x226
2020-08-09T19:26:49.702+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: github.com/hashicorp/terraform-provider-helm/helm.getValues(0x2449e40, 0xc0003e9ce0, 0x0, 0x0, 0x0)
2020-08-09T19:26:49.702+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/src/github.com/hashicorp/terraform-provider-helm/helm/resource_release.go:852 +0x1b9
2020-08-09T19:26:49.702+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: github.com/hashicorp/terraform-provider-helm/helm.resourceReleaseCreate(0xc0003e9ce0, 0x1e58c20, 0xc0006d07e0, 0x2, 0x3552180)
2020-08-09T19:26:49.702+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/src/github.com/hashicorp/terraform-provider-helm/helm/resource_release.go:450 +0x5a9
2020-08-09T19:26:49.702+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: github.com/hashicorp/terraform-plugin-sdk/helper/schema.(*Resource).Apply(0xc0005e07e0, 0xc000191b30, 0xc000a8f820, 0x1e58c20, 0xc0006d07e0, 0xc004244201, 0xc000794720, 0xc004244300)
2020-08-09T19:26:49.702+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/src/github.com/hashicorp/terraform-provider-helm/vendor/github.com/hashicorp/terraform-plugin-sdk/helper/schema/resource.go:310 +0x365
2020-08-09T19:26:49.702+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: github.com/hashicorp/terraform-plugin-sdk/helper/schema.(*Provider).Apply(0xc000444100, 0xc0021e19c8, 0xc000191b30, 0xc000a8f820, 0xc0007093a8, 0xc00015c7f8, 0x1d5bcc0)
2020-08-09T19:26:49.702+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/src/github.com/hashicorp/terraform-provider-helm/vendor/github.com/hashicorp/terraform-plugin-sdk/helper/schema/provider.go:294 +0x99
2020-08-09T19:26:49.702+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: github.com/hashicorp/terraform-plugin-sdk/internal/helper/plugin.(*GRPCProviderServer).ApplyResourceChange(0xc000180088, 0x249c120, 0xc00087c540, 0xc0003e9570, 0xc000180088, 0xc00087c540, 0xc000871b30)
2020-08-09T19:26:49.702+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/src/github.com/hashicorp/terraform-provider-helm/vendor/github.com/hashicorp/terraform-plugin-sdk/internal/helper/plugin/grpc_provider.go:885 +0x8b4
2020-08-09T19:26:49.702+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: github.com/hashicorp/terraform-plugin-sdk/internal/tfplugin5._Provider_ApplyResourceChange_Handler(0x1fc7c80, 0xc000180088, 0x249c120, 0xc00087c540, 0xc00014c840, 0x0, 0x249c120, 0xc00087c540, 0xc000846000, 0xadc1)
2020-08-09T19:26:49.702+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/src/github.com/hashicorp/terraform-provider-helm/vendor/github.com/hashicorp/terraform-plugin-sdk/internal/tfplugin5/tfplugin5.pb.go:3305 +0x217
2020-08-09T19:26:49.702+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: google.golang.org/grpc.(*Server).processUnaryRPC(0xc0004d9500, 0x24c46a0, 0xc000564300, 0xc000312a00, 0xc00053ce10, 0x3503660, 0x0, 0x0, 0x0)
2020-08-09T19:26:49.702+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/src/github.com/hashicorp/terraform-provider-helm/vendor/google.golang.org/grpc/server.go:1024 +0x4f4
2020-08-09T19:26:49.702+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: google.golang.org/grpc.(*Server).handleStream(0xc0004d9500, 0x24c46a0, 0xc000564300, 0xc000312a00, 0x0)
2020-08-09T19:26:49.702+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/src/github.com/hashicorp/terraform-provider-helm/vendor/google.golang.org/grpc/server.go:1313 +0xd97
2020-08-09T19:26:49.702+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: google.golang.org/grpc.(*Server).serveStreams.func1.1(0xc0007d6620, 0xc0004d9500, 0x24c46a0, 0xc000564300, 0xc000312a00)
2020-08-09T19:26:49.702+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/src/github.com/hashicorp/terraform-provider-helm/vendor/google.golang.org/grpc/server.go:722 +0xbb
2020-08-09T19:26:49.702+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: created by google.golang.org/grpc.(*Server).serveStreams.func1
2020-08-09T19:26:49.702+0300 [DEBUG] plugin.terraform-provider-helm_v1.2.4_x4: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/src/github.com/hashicorp/terraform-provider-helm/vendor/google.golang.org/grpc/server.go:720 +0xa1
2020-08-09T19:26:49.715+0300 [DEBUG] plugin: plugin process exited: path=/home/tombh/Workspace/dish/k8s/.terraform/plugins/linux_amd64/terraform-provider-helm_v1.2.4_x4 pid=4111486 error="exit status 2"
2020/08/09 19:26:49 [DEBUG] helm_release.postgres-ha: apply errored, but we're indicating that via the Error pointer rather than returning it: rpc error: code = Unavailable desc = transport is closing
2020/08/09 19:26:49 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/08/09 19:26:49 [TRACE] EvalMaybeTainted: helm_release.postgres-ha encountered an error during creation, so it is now marked as tainted
2020/08/09 19:26:49 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:49 [TRACE] EvalWriteState: removing state object for helm_release.postgres-ha
2020/08/09 19:26:49 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2020/08/09 19:26:49 [TRACE] EvalApplyProvisioners: helm_release.postgres-ha has no state, so skipping provisioners
2020/08/09 19:26:49 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/08/09 19:26:49 [TRACE] EvalMaybeTainted: helm_release.postgres-ha encountered an error during creation, so it is now marked as tainted
2020/08/09 19:26:49 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/08/09 19:26:49 [TRACE] EvalWriteState: removing state object for helm_release.postgres-ha
2020/08/09 19:26:49 [TRACE] <root>: eval: *terraform.EvalIf
2020/08/09 19:26:49 [TRACE] <root>: eval: *terraform.EvalIf
2020/08/09 19:26:49 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/08/09 19:26:49 [TRACE] <root>: eval: *terraform.EvalApplyPost
2020/08/09 19:26:49 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: rpc error: code = Unavailable desc = transport is closing
2020/08/09 19:26:49 [ERROR] <root>: eval: *terraform.EvalSequence, err: rpc error: code = Unavailable desc = transport is closing
2020/08/09 19:26:49 [TRACE] [walkApply] Exiting eval tree: helm_release.postgres-ha
2020/08/09 19:26:49 [TRACE] vertex "helm_release.postgres-ha": visit complete
2020/08/09 19:26:49 [TRACE] dag/walk: upstream of "provider.helm (close)" errored, so skipping
2020/08/09 19:26:49 [TRACE] dag/walk: upstream of "meta.count-boundary (EachMode fixup)" errored, so skipping
2020/08/09 19:26:49 [TRACE] dag/walk: upstream of "root" errored, so skipping
2020-08-09T19:26:49.722+0300 [DEBUG] plugin: plugin exited
