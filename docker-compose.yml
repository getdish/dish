version: '3.7'
services:
  postgres:
    image: bitnami/postgresql:12.1.0-debian-9-r53 # See k8s/yaml/postgres.yaml
    volumes:
      - ${HOME}/.dish/postgres:/bitnami/postgresql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: dish
      BITNAMI_DEBUG: 'true'
    ports:
      - 5432:5432
  redis:
    image: redis
    ports:
      - 6379:6379
  hasura:
    image: hasura/graphql-engine:v1.1.0
    ports:
      - 8080:8080
    environment:
      - HASURA_GRAPHQL_DATABASE_URL=postgres://postgres:postgres@postgres/dish
      - HASURA_GRAPHQL_ENABLED_LOG_TYPES=startup, http-log, webhook-log, websocket-log, query-log
      - HASURA_GRAPHQL_ENABLE_TELEMETRY=false
      - HASURA_GRAPHQL_ADMIN_SECRET=password
      - HASURA_GRAPHQL_UNAUTHORIZED_ROLE=anon
      - HASURA_GRAPHQL_JWT_SECRET={"type":"HS256", "key":"12345678901234567890123456789012"}
    depends_on:
      - 'postgres'
      - 'redis'
  jwt-server:
    image: docker.k8s.dishapp.com/dish/jwt-server
    build:
      context: ./
      dockerfile: ./services/jwt-server/Dockerfile
      cache_from:
        - docker.k8s.dishapp.com/dish/jwt-server:latest
        - docker.k8s.dishapp.com/dish/jwt-server:ci-green
      args:
        - BUILDKIT_INLINE_CACHE=1
    ports:
      - 3000:3000
    environment:
      - POSTGRES_HOST=postgres
    depends_on:
      - 'postgres'
  search:
    image: docker.k8s.dishapp.com/dish/search
    build:
      context: ./
      dockerfile: ./services/search/Dockerfile
      cache_from:
        - docker.k8s.dishapp.com/dish/search:latest
        - docker.k8s.dishapp.com/dish/search:ci-green
      args:
        - BUILDKIT_INLINE_CACHE=1
    ports:
      - 10000:10000
    environment:
      - POSTGRES_HOST=postgres
    depends_on:
      - 'postgres'
