version: '3.7'
services:
  base:
    image: "docker.k8s.dishapp.com/dish/base${DISH_BASE_VERSION}"
    build:
      context: .
      dockerfile: ./Dockerfile
  postgres:
    image: bitnami/postgresql:12.1.0-debian-9-r53 # See k8s/yaml/postgres.yaml
    volumes:
      - ${HOME}/.dish/postgres:/bitnami/postgresql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: dish
      BITNAMI_DEBUG: 'true'
    ports:
      - 5432:5432
  timescaledb:
    image: timescale/timescaledb-postgis:1.7.2-pg11
    volumes:
      - ${HOME}/.dish/timescaledb:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: scrape_data
    ports:
      - 5433:5432
  redis:
    image: redis
    ports:
      - 6379:6379
  apple-authorize:
    image: docker.k8s.dishapp.com/dish/apple-authorize
    build:
      context: ./
      dockerfile: ./services/apple-authorize/Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    ports:
      - 6154:6154
  dish-hooks:
    image: docker.k8s.dishapp.com/dish/dish-hooks
    build:
      context: ./
      dockerfile: ./services/dish-hooks/Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    ports:
      - 6154:6154
    environment:
      - GORSE_ENDPOINT=http://gorse:9000
    depends_on:
      - 'gorse'
  hasura:
    image: hasura/graphql-engine:v1.2.2
    ports:
      - 8080:8080
    environment:
      - HASURA_GRAPHQL_DATABASE_URL=postgres://postgres:postgres@postgres/dish
      - HASURA_GRAPHQL_ENABLED_LOG_TYPES=startup, http-log, webhook-log, websocket-log, query-log
      - HASURA_GRAPHQL_ENABLE_TELEMETRY=false
      - HASURA_GRAPHQL_ADMIN_SECRET=password
      - HASURA_GRAPHQL_UNAUTHORIZED_ROLE=anon
      - HASURA_GRAPHQL_JWT_SECRET={"type":"HS256", "key":"12345678901234567890123456789012"}
      - DISH_HOOKS_ENDPOINT=http://dish-hooks:6154
    depends_on:
      - 'postgres'
      - 'redis'
      - 'dish-hooks'
  jwt-server:
    image: docker.k8s.dishapp.com/dish/jwt-server
    build:
      context: ./
      dockerfile: ./services/jwt-server/Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    ports:
      - 3000:3000
    environment:
      - POSTGRES_HOST=postgres
    depends_on:
      - 'postgres'
  search:
    image: docker.k8s.dishapp.com/dish/search
    build:
      context: ./
      dockerfile: ./services/search/Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    ports:
      - 10000:10000
    environment:
      - POSTGRES_HOST=postgres
    depends_on:
      - 'postgres'
  gorse:
    volumes:
      - ${HOME}/.dish/gorse:/data
      - ./services/gorse/config.local.toml:/app/config.toml
    build:
      context: ./services/gorse
    ports:
      - 9000:9000
