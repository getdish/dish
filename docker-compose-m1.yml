version: '2.4'
services:
  postgres:
    build:
      context: ./services/postgres
    restart: always
    # volumes:
    #   - ${HOME}/.dish/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: dish
      BITNAMI_DEBUG: 'true'
    ports:
      - 5432:5432
  redis:
    image: redis
    ports:
      - 6379:6379
  hasura:
    image: fedormelexin/graphql-engine-arm64
    restart: always
    ports:
      - 8080:8080
    environment:
      - HASURA_GRAPHQL_DATABASE_URL=postgres://postgres:postgres@postgres/dish
      - HASURA_GRAPHQL_ENABLED_LOG_TYPES=startup, http-log, webhook-log, websocket-log, query-log
      - HASURA_GRAPHQL_ENABLE_TELEMETRY=false
      - HASURA_GRAPHQL_ADMIN_SECRET=${TF_VAR_HASURA_GRAPHQL_ADMIN_SECRET:-password}
      - HASURA_GRAPHQL_UNAUTHORIZED_ROLE=anon
      - HASURA_GRAPHQL_JWT_SECRET={"type":"HS256", "key":"12345678901234567890123456789012"}
      - HASURA_GRAPHQL_ENABLE_CONSOLE=true
      - DISH_HOOKS_ENDPOINT=http://dish-hooks:6154
      - GORSE_SYNC_HOOK=http://dish-hooks:6154/gorse_sync
    depends_on:
      - 'postgres'
      - 'redis'
  tileserver:
    image: urbica/martin
    ports:
      - 3005:3000
    environment:
      - WATCH_MODE=true
      - DATABASE_URL=postgres://postgres:postgres@postgres/dish
    depends_on:
      - 'postgres'
  search:
    image: gcr.io/dish-258800/dish/search${DISH_IMAGE_TAG}
    build:
      context: ./
      dockerfile: ./services/search/Dockerfile
    ports:
      - 10000:10000
    environment:
      - POSTGRES_HOST=postgres
    depends_on:
      - 'postgres'
