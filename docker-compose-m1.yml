version: '2.4'
services:
  postgres:
    image: gangstead/postgis:13-3.1-arm
    volumes:
      - ${HOME}/.dish/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: dish
      BITNAMI_DEBUG: 'true'
    ports:
      - 5432:5432
  redis:
    image: redis
    platform: linux/amd64
    ports:
      - 6379:6379
  gorse:
    image: gcr.io/dish-258800/gorse
    platform: linux/amd64
    volumes:
      - ${HOME}/.dish/gorse:/data
      - ./services/gorse/config.local.toml:/app/config.toml
    ports:
      - 9000:9000
  dish-hooks:
    image: gcr.io/dish-258800/dish-hooks${DISH_IMAGE_TAG}
    platform: linux/amd64
    build:
      context: ./
      dockerfile: ./services/dish-hooks/Dockerfile
    ports:
      - 6154:6154
    environment:
      - DO_SPACES_ID=${TF_VAR_DO_SPACES_ID}
      - DO_SPACES_SECRET=${TF_VAR_DO_SPACES_SECRET}
      - GORSE_ENDPOINT=http://gorse:9000
      - DISH_ENV=production
    depends_on:
      - 'gorse'
  hasura:
    image: hasura/graphql-engine:v1.3.3
    restart: always
    platform: linux/amd64
    ports:
      - 8080:8080
    environment:
      - HASURA_GRAPHQL_DATABASE_URL=postgres://postgres:postgres@postgres/dish
      - HASURA_GRAPHQL_ENABLED_LOG_TYPES=startup, http-log, webhook-log, websocket-log, query-log
      - HASURA_GRAPHQL_ENABLE_TELEMETRY=false
      - HASURA_GRAPHQL_ADMIN_SECRET=${TF_VAR_HASURA_GRAPHQL_ADMIN_SECRET:-password}
      - HASURA_GRAPHQL_UNAUTHORIZED_ROLE=anon
      - HASURA_GRAPHQL_JWT_SECRET={"type":"HS256", "key":"12345678901234567890123456789012"}
      - HASURA_GRAPHQL_ENABLE_CONSOLE=true
      - DISH_HOOKS_ENDPOINT=http://dish-hooks:6154
      - GORSE_SYNC_HOOK=http://dish-hooks:6154/gorse_sync
      - VIRTUAL_HOST=hasura-staging.dishapp.com
    depends_on:
      - 'postgres'
      - 'redis'
