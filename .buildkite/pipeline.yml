env:
  BUILDKITE_TIMEOUT: "40"
  DISH_ENV: 'test'
  DOCKER_BUILDKIT: 0
  COMPOSE_DOCKER_CLI_BUILD: 0
  DOCKER_CLIENT_TIMEOUT: 360
  COMPOSE_HTTP_TIMEOUT: 360

steps:
  # images that tests need

  - label: ":docker: build base"
    key: base
    command: .buildkite/scripts/build_docker_compose.sh base

  - label: ":docker: build dish-app"
    key: dish-app
    depends_on: base
    command: .buildkite/scripts/build_docker_compose.sh dish-app

  - label: ":docker: build run-tests"
    key: run-tests
    depends_on: base
    command: .buildkite/scripts/build_docker_compose.sh run-tests

  - label: ":docker: build hooks"
    key: hooks
    depends_on: base
    command: .buildkite/scripts/build_docker_compose.sh hooks

  - label: ":docker: build site"
    key: site
    depends_on: base
    command: .buildkite/scripts/build_docker_compose.sh site

  - label: ":docker: build worker"
    key: worker
    depends_on: base
    command: .buildkite/scripts/build_docker_compose.sh worker

  - label: ":docker: build proxy"
    key: proxy
    depends_on: base
    command: .buildkite/scripts/build_docker_compose.sh proxy
    env:
      PUSH: true

  - label: ":docker: build search"
    key: search
    command: .buildkite/scripts/build_docker_compose.sh search
    env:
      PUSH: true

  - label: ":docker: build hasura"
    key: hasura
    command: .buildkite/scripts/build_docker_compose.sh hasura
    env:
      PUSH: true

  - label: ":docker: build timescale"
    key: timescale
    command: .buildkite/scripts/build_docker_compose.sh timescale
    env:
      PUSH: true

  - label: ":docker: build tileserver"
    key: tileserver
    command: .buildkite/scripts/build_docker_compose.sh tileserver
    env:
      PUSH: true

  - label: ":docker: build postgres"
    key: postgres
    command: .buildkite/scripts/build_docker_compose.sh postgres

  - label: "done with test images"
    command: "true"
    key: test-images
    depends_on:
      - dish-app
      - hooks
      - search
      - hasura
      - timescale
      - tileserver
      - run-tests
      - postgres
      - worker

  # non test images

  - label: ":docker: build cron"
    key: cron
    depends_on: base
    command: .buildkite/scripts/build_docker_compose.sh cron
    env:
      PUSH: true

  # disable, https://community.fly.io/t/docker-push-failing-on-2-8gb-image/1117/2
  # - label: ":docker: build bert"
  #   key: bert
  #   depends_on: base
  #   command: .buildkite/scripts/build_docker_compose.sh bert
  #   env:
  #     PUSH: true

  - label: ":docker: build gorse"
    key: gorse
    command: .buildkite/scripts/build_docker_compose.sh gorse
    env:
      PUSH: true

  - label: ":docker: build image-proxy"
    key: image-proxy
    command: .buildkite/scripts/build_docker_compose.sh image-proxy
    env:
      PUSH: true

  - label: ":docker: build image-quality"
    key: image-quality
    command: .buildkite/scripts/build_docker_compose.sh image-quality
    env:
      PUSH: true

  - label: ":docker: build db"
    retry:
      automatic: true
    env:
      POSTGRES_NAME: db
    plugins:
      - docker-compose#v3.7.0:
          build: postgres
          image-repository: registry.fly.io/dish-db
          cache-from: postgres:registry.fly.io/dish-db:latest

  - label: "setup services for tests"
    key: test-setup
    command: ".buildkite/scripts/setup_test_services.sh"
    timeout_in_minutes: 15
    depends_on:
      - test-images
    retry:
      automatic: true
    env:
      LOG_DOCKER: true
      IS_COMPOSE_RUNNER: true
      DOCKER_CLEAN_ON_FAIL: true
      SHOW_DOCKER_IMAGES: true
      POSTGRES_STRATEGY: simple

  - label: "run tests"
    key: tests
    timeout_in_minutes: 10
    command: ".buildkite/scripts/run_all_tests.sh; docker-compose down -t 3"
    depends_on: test-setup
    env:
      LOG_DOCKER: true
      SHOW_DOCKER_IMAGES: true
      DOCKER_COMPOSE_DOWN: true
      DOCKER_CLEAN_ON_FAIL: true

  # - label: "run integration test"
  #   command: ".buildkite/scripts/integration_tests.sh"

  - wait

  - label: "prepush some images to registry"
    if: build.branch == "production" || build.branch == "nate/dev"
    depends_on: test-images
    command: .buildkite/scripts/push_images.sh

  - label: "deploy"
    if: build.branch == "production" || build.branch == "nate/dev"
    timeout_in_minutes: 15
    command: ".buildkite/scripts/deploy_all.sh"
    artifact_paths:
      - "*.log"
    env:
      DOCKER_CLEAN: true

  - wait

  - label: "finish"
    command: ".buildkite/scripts/finish.sh"
    env:
      FINISH: true
