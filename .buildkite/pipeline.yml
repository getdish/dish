env:
  BUILDKITE_TIMEOUT: "40"
  DISH_ENV: 'test'
  DOCKER_BUILDKIT: 0
  COMPOSE_DOCKER_CLI_BUILD: 0
  DOCKER_CLIENT_TIMEOUT: 360
  COMPOSE_HTTP_TIMEOUT: 360

steps:
  # images that tests need

  - label: ":docker: build base"
    key: base
    command: INTERNAL=true ./dsh docker_compose_build_and_push base

  - label: ":docker: build dish-app"
    key: dish-app
    depends_on: base
    command: ./dsh docker_compose_build_and_push dish-app

  - label: ":docker: build worker"
    key: worker
    depends_on: dish-app
    command: ./dsh docker_compose_build_and_push worker

  - label: ":docker: build run-tests"
    key: run-tests
    depends_on: worker
    command: INTERNAL=true ./dsh docker_compose_build_and_push run-tests

  - label: ":docker: build hooks"
    key: hooks
    depends_on: run-tests
    command: ./dsh docker_compose_build_and_push hooks

  - label: ":docker: build site"
    key: site
    depends_on: hooks
    command: ./dsh docker_compose_build_and_push site

  - label: ":docker: build worker-proxy"
    key: worker-proxy
    depends_on: site
    command: ./dsh docker_compose_build_and_push worker-proxy

  - label: ":docker: build search"
    key: search
    command: ./dsh docker_compose_build_and_push search

  - label: ":docker: build hasura"
    key: hasura
    command: ./dsh docker_compose_build_and_push hasura

  - label: ":docker: build timescale"
    key: timescale
    command: ./dsh docker_compose_build_and_push timescale

  - label: ":docker: build tileserver"
    key: tileserver
    command: ./dsh docker_compose_build_and_push tileserver

  - label: ":docker: build postgres"
    key: postgres
    command: ./dsh docker_compose_build_and_push postgres

  - label: "done with test images"
    command: "true"
    key: test-images
    depends_on:
      - dish-app
      - hooks
      - search
      - hasura
      - timescale
      - tileserver
      - run-tests
      - postgres
      - worker
      - worker-proxy

  # non test images

  - label: ":docker: build cron"
    key: cron
    depends_on: base
    command: ./dsh docker_compose_build_and_push cron

  - label: ":docker: build summarizer"
    key: summarizer
    command: ./dsh docker_compose_build_and_push summarizer

  - label: ":docker: build bert"
    key: bert
    depends_on: base
    command: ./dsh docker_compose_build_and_push bert

  - label: ":docker: build gorse"
    key: gorse
    command: ./dsh docker_compose_build_and_push gorse

  - label: ":docker: build image-proxy"
    key: image-proxy
    command: ./dsh docker_compose_build_and_push image-proxy

  - label: ":docker: build image-quality"
    key: image-quality
    command: ./dsh docker_compose_build_and_push image-quality

  - label: "setup services for tests"
    key: test-setup
    command: "./dsh setup_test_services"
    timeout_in_minutes: 15
    depends_on:
      - test-images
    retry:
      automatic: true
    env:
      LOG_DOCKER: true
      IS_COMPOSE_RUNNER: true
      DOCKER_CLEAN_ON_FAIL: true
      SHOW_DOCKER_IMAGES: true
      DATA_CLEAR_ON_FAIL: true

  - label: "run tests"
    key: tests
    timeout_in_minutes: 10
    command: "./dsh run_all_tests; docker-compose down -t 3"
    depends_on: test-setup
    env:
      LOG_DOCKER: true
      SHOW_DOCKER_IMAGES: true
      DOCKER_COMPOSE_DOWN: true
      DOCKER_CLEAN_ON_FAIL: true

  # - label: "run integration test"
  #   command: "./dsh run_integration_tests"

  - wait

  - label: "deploy dedicated"
    if: build.branch == "production" || build.branch == "nate/dev"
    timeout_in_minutes: 10
    command: "./dsh deploy_dedicated"
    artifact_paths:
      - "*.log"

  - wait

  - label: "done"
    if: build.branch == "production" || build.branch == "nate/dev"
    command: "./dsh deploy_done_notify"
    env:
      DOCKER_CLEAN: true
