env:
  BUILDKITE_TIMEOUT: "40"
  DISH_ENV: 'test'
  DOCKER_BUILDKIT: 0
  COMPOSE_DOCKER_CLI_BUILD: 0
  DOCKER_CLIENT_TIMEOUT: 360
  COMPOSE_HTTP_TIMEOUT: 360

steps:
  # images that tests need

  - label: ":docker: build base"
    key: base
    command: .buildkite/scripts/build_docker_compose.sh base

  - label: ":docker: build dish-app"
    key: dish-app
    depends_on: base
    command: .buildkite/scripts/build_docker_compose.sh dish-app

  - label: ":docker: build run-tests"
    key: run-tests
    depends_on: base
    command: .buildkite/scripts/build_docker_compose.sh run-tests

  - label: ":docker: build hooks"
    key: hooks
    depends_on: base
    command: .buildkite/scripts/build_docker_compose.sh hooks

  - label: ":docker: build site"
    key: site
    depends_on: base
    command: .buildkite/scripts/build_docker_compose.sh site

  - label: ":docker: build worker"
    key: worker
    depends_on: base
    command: .buildkite/scripts/build_docker_compose.sh worker

  - label: ":docker: build proxy"
    key: proxy
    env:
      DOCKER_TAG: dish-proxy
    retry:
      automatic: true
    plugins:
      - docker-compose#v3.7.0:
          build: proxy
          cache-from: proxy:registry.fly.io/dish-proxy:latest

  - label: ":docker: build search"
    key: search
    depends_on: base
    command: .buildkite/scripts/build_docker_compose.sh search

  - label: ":docker: build hasura"
    key: hasura
    depends_on: base
    command: .buildkite/scripts/build_docker_compose.sh hasura

  - label: ":docker: build timescale"
    key: timescale
    depends_on: base
    command: .buildkite/scripts/build_docker_compose.sh timescale

  - label: ":docker: build tileserver"
    key: tileserver
    depends_on: base
    command: .buildkite/scripts/build_docker_compose.sh tileserver

  - label: ":docker: build postgres"
    key: postgres
    depends_on: base
    command: .buildkite/scripts/build_docker_compose.sh postgres

  - label: ":docker: build redis"
    key: redis
    depends_on: base
    command: .buildkite/scripts/build_docker_compose.sh redis

  - label: "done with test images"
    command: "true"
    key: test-images
    depends_on:
      - dish-app
      - hooks
      - search
      - hasura
      - timescale
      - tileserver
      - run-tests
      - postgres
      - redis
      - worker

  - label: "push ONLY pre-test images to registry"
    depends_on: test-images
    command: .buildkite/scripts/push_pre_test_images.sh

  # non test images

  - label: ":docker: build cron"
    retry:
      automatic: true
    plugins:
      - docker-compose#v3.7.0:
          build: cron
          image-repository: registry.fly.io/dish-cron
          cache-from: cron:registry.fly.io/dish-cron:latest
          push: cron:registry.fly.io/dish-cron:latest

  - label: ":docker: build gorse"
    retry:
      automatic: true
    plugins:
      - docker-compose#v3.7.0:
          build: gorse
          image-repository: registry.fly.io/dish-gorse
          cache-from: gorse:registry.fly.io/dish-gorse:latest
          push: gorse:registry.fly.io/dish-gorse:latest

  - label: ":docker: build bert"
    retry:
      automatic: true
    plugins:
      - docker-compose#v3.7.0:
          build: bert
          image-repository: registry.fly.io/dish-bert
          cache-from: bert:registry.fly.io/dish-bert:latest
          push: bert:registry.fly.io/dish-bert:latest

  - label: ":docker: build image-proxy"
    retry:
      automatic: true
    plugins:
      - docker-compose#v3.7.0:
          build: image-proxy
          image-repository: registry.fly.io/dish-image-proxy
          cache-from: image-proxy:registry.fly.io/dish-image-proxy:latest
          push: image-proxy:registry.fly.io/dish-image-proxy:latest

  - label: ":docker: build image-quality"
    retry:
      automatic: true
    plugins:
      - docker-compose#v3.7.0:
          build: image-quality
          image-repository: registry.fly.io/dish-image-quality
          cache-from: image-quality:registry.fly.io/dish-image-quality:latest
          push: image-quality:registry.fly.io/dish-image-quality:latest

  - label: ":docker: build db"
    retry:
      automatic: true
    env:
      POSTGRES_NAME: db
    plugins:
      - docker-compose#v3.7.0:
          build: postgres
          image-repository: registry.fly.io/dish-db
          cache-from: postgres:registry.fly.io/dish-db:latest
          push: postgres:registry.fly.io/dish-db:latest

  - label: "setup services for tests"
    key: test-setup
    command: ".buildkite/scripts/setup_test_services.sh"
    depends_on:
      - test-images
    retry:
      automatic: true
    env:
      LOG_DOCKER: true
      IS_COMPOSE_RUNNER: true
      DOCKER_CLEAN_ON_FAIL: true
      SHOW_DOCKER_IMAGES: true
      POSTGRES_STRATEGY: simple
    # plugins:
    #   - gencer/cache#v2.4.7:
    #       backend: s3
    #       id: data
    #       key: "v1-cache-{{ runner.os }}"
    #       s3:
    #         args: "--endpoint-url=https://sfo2.digitaloceanspaces.com"
    #         bucket: "dish-build-cache"
    #       paths:
    #         - '/root/.dish/'

  - label: "run tests"
    key: tests
    command: ".buildkite/scripts/run_all_tests.sh; docker-compose down -t 3"
    depends_on: test-setup
    env:
      LOG_DOCKER: true
      SHOW_DOCKER_IMAGES: true
      DOCKER_COMPOSE_DOWN: true
      DOCKER_CLEAN_ON_FAIL: true

  # - label: "run integration test"
  #   command: ".buildkite/scripts/integration_tests.sh"

  - wait

  - label: "deploy"
    if: build.branch == "production" || build.branch == "nate/dev"
    command: ".buildkite/scripts/deploy_all.sh"
    artifact_paths:
      - "*.log"
    env:
      DOCKER_CLEAN: true

  - wait

  - label: "finish"
    command: ".buildkite/scripts/finish.sh"
    env:
      FINISH: true
