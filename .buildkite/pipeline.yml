env:
  DISH_ENV: 'test'
  DISH_REGISTRY: 'gcr.io/dish-258800'
  HASURA_ENDPOINT: 'http://localhost:8080'
  DISH_ENDPOINT: 'http://localhost:4444'

steps:
  - label: ":docker: build base"
    plugins:
      - docker-compose#v3.7.0:
          build:
            - base
          image-repository: gcr.io/dish-258800/base
          cache-from: base:gcr.io/dish-258800/base:latest
          push: base:gcr.io/dish-258800/base:latest

  - wait

  - label: ":docker: build apps"
    plugins:
      - docker-compose#v3.7.0:
          build:
            - dish-hooks
            - dish-app-web
            - search
          push:
            - dish-hooks:gcr.io/dish-258800/dish-hooks:latest
            - dish-app-web:gcr.io/dish-258800/dish-app-web:latest
            - search:gcr.io/dish-258800/search:latest

  - label: ":docker: build non-base images"
    plugins:
      - docker#v3.3.0:
          volumes:
            - /app/node_modules
      - docker-compose#v3.7.0:
          push:
            - worker:gcr.io/dish-258800/worker:latest

  - wait

  - label: "setup services for tests"
    command: ".buildkite/scripts/setup_services.sh"
    plugins:
      - gencer/cache#v2.3.10:
          backend: s3
          key: "v1-cache-{{ runner.os }}-{{ checksum 'services/hasura/package.json' }}"
          s3:
            args: "--endpoint-url=https://sfo2.digitaloceanspaces.com"
            bucket: "dish-build-cache"
          paths:
            - '/root/.dish/'

  - wait

  - label: "run tests"
    command: "docker run --net host ${DISH_REGISTRY}/base yarn test"
    plugins:

  - label: "run integration test"
    command: ".buildkite/scripts/integration_tests.sh"

  - wait

  - label: "deploy to staging"
    command: ".buildkit/scripts/deploy_staging.sh"
