env:
  # DOCKER_BUILDKIT: 1
  # COMPOSE_DOCKER_CLI_BUILD: 1
  # BUILDKIT_PROGRESS: plain
  DISH_BASE_VERION: ":latest"
  DISH_IMAGE_TAG: ":latest"
  DISH_ENV: 'test'
  DISH_REGISTRY: 'gcr.io/dish-258800'
  HASURA_ENDPOINT: 'http://localhost:8080'
  DISH_ENDPOINT: 'http://localhost:4444'

steps:
  - label: ":docker: build base"
    key: base
    plugins:
      - docker-compose#v3.7.0:
          build: base
          image-repository: gcr.io/dish-258800/base
          cache-from: base:gcr.io/dish-258800/base:latest
          push: base:gcr.io/dish-258800/base:latest

  - label: ":docker: build dish-hooks"
    depends_on: base
    plugins:
      - docker-compose#v3.7.0:
          build: dish-hooks
          image-repository: gcr.io/dish-258800/dish-hooks
          cache-from: base:gcr.io/dish-258800/dish-hooks:latest
          push: dish-hooks:gcr.io/dish-258800/dish-hooks:latest

  - label: ":docker: build dish-app-web"
    depends_on: base
    key: web
    plugins:
      - docker-compose#v3.7.0:
          build: dish-app-web
          image-repository: gcr.io/dish-258800/dish-app-web
          cache-from: base:gcr.io/dish-258800/dish-app-web:latest
          push: dish-app-web:gcr.io/dish-258800/dish-app-web:latest

  - label: ":docker: build worker"
    depends_on: base
    key: worker
    plugins:
      - docker-compose#v3.7.0:
          build: worker
          image-repository: gcr.io/dish-258800/worker
          cache-from: base:gcr.io/dish-258800/worker:latest
          push: worker:gcr.io/dish-258800/worker:latest

  - label: ":docker: build search"
    retry:
      automatic: true
    plugins:
      - docker-compose#v3.7.0:
          build: search
          image-repository: gcr.io/dish-258800/search
          cache-from: base:gcr.io/dish-258800/search:latest
          push: search:gcr.io/dish-258800/search:latest

  - label: ":docker: build hasura"
    retry:
      automatic: true
    plugins:
      - docker-compose#v3.7.0:
          build: hasura
          image-repository: gcr.io/dish-258800/hasura
          cache-from: base:gcr.io/dish-258800/hasura:latest
          push: hasura:gcr.io/dish-258800/hasura:latest

  - label: ":docker: build timescaledb"
    retry:
      automatic: true
    plugins:
      - docker-compose#v3.7.0:
          build: timescaledb
          image-repository: gcr.io/dish-258800/timescaledb
          cache-from: base:gcr.io/dish-258800/timescaledb:latest
          push: timescaledb:gcr.io/dish-258800/timescaledb:latest

  - label: ":docker: build tileserver"
    retry:
      automatic: true
    plugins:
      - docker-compose#v3.7.0:
          build: tileserver
          image-repository: gcr.io/dish-258800/tileserver
          cache-from: base:gcr.io/dish-258800/tileserver:latest
          push: tileserver:gcr.io/dish-258800/tileserver:latest

  - label: ":docker: build image-proxy"
    retry:
      automatic: true
    plugins:
      - docker-compose#v3.7.0:
          build: image-proxy
          image-repository: gcr.io/dish-258800/image-proxy
          cache-from: base:gcr.io/dish-258800/image-proxy:latest
          push: image-proxy:gcr.io/dish-258800/image-proxy:latest

  - label: ":docker: build postgres ha"
    retry:
      automatic: true
    env:
      POSTGRES_STRATEGY: ha
    plugins:
      - docker-compose#v3.7.0:
          build: postgres
          image-repository: gcr.io/dish-258800/postgres-ha
          cache-from: base:gcr.io/dish-258800/postgres-ha:latest
          push: postgres:gcr.io/dish-258800/postgres-ha:latest

  - label: ":docker: build postgres for tests"
    retry:
      automatic: true
    env:
      POSTGRES_STRATEGY: ha
    plugins:
      - docker-compose#v3.7.0:
          build: postgres
          image-repository: gcr.io/dish-258800/postgres-simple
          cache-from: base:gcr.io/dish-258800/postgres-simple:latest
          push: postgres:gcr.io/dish-258800/postgres-simple:latest

  - label: ":docker: build redis for tests"
    retry:
      automatic: true
    plugins:
      - docker-compose#v3.7.0:
          build: redis
          image-repository: gcr.io/dish-258800/redis
          cache-from: base:gcr.io/dish-258800/redis:latest
          push: redis:gcr.io/dish-258800/redis:latest

  - label: ":docker: build gorse for tests"
    retry:
      automatic: true
    plugins:
      - docker-compose#v3.7.0:
          build: gorse
          image-repository: gcr.io/dish-258800/gorse
          cache-from: base:gcr.io/dish-258800/gorse:latest
          push: gorse:gcr.io/dish-258800/gorse:latest

  - wait

  - label: "setup services for tests"
    command: ".buildkite/scripts/setup_services.sh"
    env:
      LOG_DOCKER: true
      DOCKER_CLEAN_ON_FAIL: true
      POSTGRES_STRATEGY: simple
    plugins:
      - gencer/cache#v2.3.10:
          backend: s3
          key: "v1-cache-{{ runner.os }}-{{ checksum 'services/hasura/package.json' }}"
          s3:
            args: "--endpoint-url=https://sfo2.digitaloceanspaces.com"
            bucket: "dish-build-cache"
          paths:
            - '/root/.dish/'

  - wait

  - label: "run tests"
    command: "docker run --net host ${DISH_REGISTRY}/base:latest yarn test"
    env:
      LOG_DOCKER: true
      DOCKER_CLEAN_ON_FAIL: true

  # - label: "run integration test"
  #   command: ".buildkite/scripts/integration_tests.sh"

  - wait

  - label: "deploy"
    env:
      DOCKER_CLEAN: true
    command: ".buildkite/scripts/deploy_all.sh"

  - wait

  - label: "finish"
    command: "echo done"
    env:
      FINISH: true
