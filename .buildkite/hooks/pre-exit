#!/bin/bash

set -eo pipefail

if [ "$FIRST_STEP" == "true" ]; then
  exit 0
fi

if [ "$BUILDKITE_COMMAND_EXIT_STATUS" -ne 0 ]; then
  echo "Steps are skipped because $BUILDKITE_AGENT_NAME:$BUILDKITE_LABEL returned $BUILDKITE_COMMAND_EXIT_STATUS" > /opt/ci/inner/skip
fi

if [ "$DOCKER_COMPOSE_DOWN" == "true" ]; then
  docker-compose down --remove-orphans -t 3 &
fi

if [ "$DOCKER_TAG" == "true" ]; then
  from="$BUILDKITE_PIPELINE_NAME-$BUILDKITE_STEP_KEY-build-$BUILDKITE_BUILD_NUMBER:latest"
  to="gcr.io/dish-258800/$BUILDKITE_STEP_KEY"
  echo "docker tag $from $to"
  docker tag "$from" "$to"
  echo "docker tag $from $to:latest"
  docker tag "$from" "$to:latest"
fi

if [ "$LOG_DOCKER" == "true" ]; then
  echo "docker logs..."
  docker-compose logs --tail 2000
  cat ./*.logs || true
fi

if [ "$IS_COMPOSE_RUNNER" = "true" ] && [ "$BUILDKITE_COMMAND_EXIT_STATUS" = "1" ]; then
  echo "shutting down docker"
  docker-compose down --volumes || true
fi

if [ "$DOCKER_CLEAN" == "true" ] || { [ "$BUILDKITE_COMMAND_EXIT_STATUS" = "1" ] && [ "$BUILDKITE_COMMAND_EXIT_STATUS" = "1" ]; }; then
  clean_if_nearly_full
  # docker system df | head -n 60 || true
  # docker images -a | head -n 60 || true
fi

echo "bye"

function clean_if_nearly_full() {
  echo "checking if disk near full..."
  df -H | grep -vE '^Filesystem|tmpfs|cdrom' | awk '{ print $5 " " $1 }' | while read output;
  do
    used=$(echo "$output" | awk '{ print $1}' | cut -d'%' -f1  )
    echo "$output used $used"
    if [ "$used" -ge 90 ]; then
      echo "Running out of space"
      docker system prune -a --filter "until=24h" --force || true
      docker rmi $(docker images --filter "dangling=true" -q --no-trunc) || true
    fi
  done
}
